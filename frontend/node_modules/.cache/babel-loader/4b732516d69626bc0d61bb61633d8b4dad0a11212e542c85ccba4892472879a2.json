{"ast":null,"code":"export function isEqual(a, b, epsilon) {\n  if (epsilon === void 0) {\n    epsilon = 1e-10;\n  }\n  return Math.abs(a - b) < epsilon;\n}\n/**\n * `Number.toFixed(n)` always formats a number so that it has `n` digits after the decimal point.\n * For example, `Number(0.00003427).toFixed(2)` returns `0.00`.\n * That's not very helpful, because all the meaningful information is lost.\n * In this case we would want the formatted value to have at least two significant digits: `0.000034`,\n * not two fraction digits.\n * @param value\n * @param fractionOrSignificantDigits\n */\nexport function toFixed(value, fractionOrSignificantDigits) {\n  if (fractionOrSignificantDigits === void 0) {\n    fractionOrSignificantDigits = 2;\n  }\n  var power = Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  if (power >= 0 || !isFinite(power)) {\n    return value.toFixed(fractionOrSignificantDigits); // fraction digits\n  }\n\n  return value.toFixed(Math.abs(power) - 1 + fractionOrSignificantDigits); // significant digits\n}\n\nvar numberUnits = [\"\", \"K\", \"M\", \"B\", \"T\"];\nexport function log10(x) {\n  return Math.log(x) * Math.LOG10E;\n}\nexport function toReadableNumber(value, fractionDigits) {\n  if (fractionDigits === void 0) {\n    fractionDigits = 2;\n  }\n  // For example: toReadableNumber(10550000000) yields \"10.6B\"\n  var prefix = '';\n  if (value <= 0) {\n    value = -value;\n    prefix = '-';\n  }\n  var thousands = ~~(log10(value) / log10(1000)); // discard the floating point part\n  return prefix + (value / Math.pow(1000.0, thousands)).toFixed(fractionDigits) + numberUnits[thousands];\n}","map":{"version":3,"names":["isEqual","a","b","epsilon","Math","abs","toFixed","value","fractionOrSignificantDigits","power","floor","log","LN10","isFinite","numberUnits","log10","x","LOG10E","toReadableNumber","fractionDigits","prefix","thousands","pow"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/util/number.js"],"sourcesContent":["export function isEqual(a, b, epsilon) {\n    if (epsilon === void 0) { epsilon = 1e-10; }\n    return Math.abs(a - b) < epsilon;\n}\n/**\n * `Number.toFixed(n)` always formats a number so that it has `n` digits after the decimal point.\n * For example, `Number(0.00003427).toFixed(2)` returns `0.00`.\n * That's not very helpful, because all the meaningful information is lost.\n * In this case we would want the formatted value to have at least two significant digits: `0.000034`,\n * not two fraction digits.\n * @param value\n * @param fractionOrSignificantDigits\n */\nexport function toFixed(value, fractionOrSignificantDigits) {\n    if (fractionOrSignificantDigits === void 0) { fractionOrSignificantDigits = 2; }\n    var power = Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n    if (power >= 0 || !isFinite(power)) {\n        return value.toFixed(fractionOrSignificantDigits); // fraction digits\n    }\n    return value.toFixed(Math.abs(power) - 1 + fractionOrSignificantDigits); // significant digits\n}\nvar numberUnits = [\"\", \"K\", \"M\", \"B\", \"T\"];\nexport function log10(x) {\n    return Math.log(x) * Math.LOG10E;\n}\nexport function toReadableNumber(value, fractionDigits) {\n    if (fractionDigits === void 0) { fractionDigits = 2; }\n    // For example: toReadableNumber(10550000000) yields \"10.6B\"\n    var prefix = '';\n    if (value <= 0) {\n        value = -value;\n        prefix = '-';\n    }\n    var thousands = ~~(log10(value) / log10(1000)); // discard the floating point part\n    return prefix + (value / Math.pow(1000.0, thousands)).toFixed(fractionDigits) + numberUnits[thousands];\n}\n"],"mappings":"AAAA,OAAO,SAASA,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAEC,OAAO,EAAE;EACnC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,KAAK;EAAE;EAC3C,OAAOC,IAAI,CAACC,GAAG,CAACJ,CAAC,GAAGC,CAAC,CAAC,GAAGC,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,OAAO,CAACC,KAAK,EAAEC,2BAA2B,EAAE;EACxD,IAAIA,2BAA2B,KAAK,KAAK,CAAC,EAAE;IAAEA,2BAA2B,GAAG,CAAC;EAAE;EAC/E,IAAIC,KAAK,GAAGL,IAAI,CAACM,KAAK,CAACN,IAAI,CAACO,GAAG,CAACP,IAAI,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC,GAAGH,IAAI,CAACQ,IAAI,CAAC;EAC7D,IAAIH,KAAK,IAAI,CAAC,IAAI,CAACI,QAAQ,CAACJ,KAAK,CAAC,EAAE;IAChC,OAAOF,KAAK,CAACD,OAAO,CAACE,2BAA2B,CAAC,CAAC,CAAC;EACvD;;EACA,OAAOD,KAAK,CAACD,OAAO,CAACF,IAAI,CAACC,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,GAAGD,2BAA2B,CAAC,CAAC,CAAC;AAC7E;;AACA,IAAIM,WAAW,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC1C,OAAO,SAASC,KAAK,CAACC,CAAC,EAAE;EACrB,OAAOZ,IAAI,CAACO,GAAG,CAACK,CAAC,CAAC,GAAGZ,IAAI,CAACa,MAAM;AACpC;AACA,OAAO,SAASC,gBAAgB,CAACX,KAAK,EAAEY,cAAc,EAAE;EACpD,IAAIA,cAAc,KAAK,KAAK,CAAC,EAAE;IAAEA,cAAc,GAAG,CAAC;EAAE;EACrD;EACA,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIb,KAAK,IAAI,CAAC,EAAE;IACZA,KAAK,GAAG,CAACA,KAAK;IACda,MAAM,GAAG,GAAG;EAChB;EACA,IAAIC,SAAS,GAAG,CAAC,EAAEN,KAAK,CAACR,KAAK,CAAC,GAAGQ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAChD,OAAOK,MAAM,GAAG,CAACb,KAAK,GAAGH,IAAI,CAACkB,GAAG,CAAC,MAAM,EAAED,SAAS,CAAC,EAAEf,OAAO,CAACa,cAAc,CAAC,GAAGL,WAAW,CAACO,SAAS,CAAC;AAC1G"},"metadata":{},"sourceType":"module","externalDependencies":[]}