{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nimport { Series } from \"./series/series\";\nimport { LegendMarker } from \"./legend\";\nimport { ChartTheme } from \"./themes/chartTheme\";\nimport { DarkTheme } from './themes/darkTheme';\nimport { MaterialLight } from \"./themes/materialLight\";\nimport { MaterialDark } from \"./themes/materialDark\";\nimport { PastelLight } from \"./themes/pastelLight\";\nimport { PastelDark } from \"./themes/pastelDark\";\nimport { SolarLight } from \"./themes/solarLight\";\nimport { SolarDark } from \"./themes/solarDark\";\nimport { VividLight } from \"./themes/vividLight\";\nimport { VividDark } from \"./themes/vividDark\";\nimport { find } from \"../util/array\";\nimport { getValue, isObject } from \"../util/object\";\nimport mappings from './agChartMappings';\nvar lightTheme = new ChartTheme();\nvar darkTheme = new DarkTheme();\nexport var lightThemes = {\n  'undefined': lightTheme,\n  'null': lightTheme,\n  'ag-default': lightTheme,\n  'ag-material': new MaterialLight(),\n  'ag-pastel': new PastelLight(),\n  'ag-solar': new SolarLight(),\n  'ag-vivid': new VividLight()\n};\nexport var darkThemes = {\n  'undefined': darkTheme,\n  'null': darkTheme,\n  'ag-default-dark': darkTheme,\n  'ag-material-dark': new MaterialDark(),\n  'ag-pastel-dark': new PastelDark(),\n  'ag-solar-dark': new SolarDark(),\n  'ag-vivid-dark': new VividDark()\n};\nexport var themes = __assign(__assign({}, darkThemes), lightThemes);\nexport function getChartTheme(value) {\n  if (value instanceof ChartTheme) {\n    return value;\n  }\n  var stockTheme = themes[value];\n  if (stockTheme) {\n    return stockTheme;\n  }\n  value = value;\n  if (value.baseTheme || value.overrides || value.palette) {\n    var baseTheme = getChartTheme(value.baseTheme);\n    return new baseTheme.constructor(value);\n  }\n  return lightTheme;\n}\nvar firstColorIndex = 0;\nvar AgChart = /** @class */function () {\n  function AgChart() {}\n  AgChart.create = function (options, container, data) {\n    options = Object.create(options); // avoid mutating user provided options\n    if (container) {\n      options.container = container;\n    }\n    if (data) {\n      options.data = data;\n    }\n    // special handling when both `autoSize` and `width` / `height` are present in the options\n    var autoSize = options && options.autoSize !== false;\n    var theme = getChartTheme(options.theme);\n    firstColorIndex = 0;\n    var chart = create(options, undefined, undefined, theme);\n    if (chart) {\n      if (autoSize) {\n        // `autoSize` takes precedence over `width` / `height`\n        chart.autoSize = true;\n      }\n    }\n    return chart;\n  };\n  AgChart.update = function (chart, options, container, data) {\n    if (!(chart && options)) {\n      return;\n    }\n    options = Object.create(options);\n    if (container) {\n      options.container = container;\n    }\n    if (data) {\n      options.data = data;\n    }\n    var autoSize = options && options.autoSize !== false;\n    var theme = getChartTheme(options.theme);\n    firstColorIndex = 0;\n    update(chart, options, undefined, theme);\n    if (autoSize) {\n      chart.autoSize = true;\n    }\n  };\n  AgChart.createComponent = create;\n  return AgChart;\n}();\nexport { AgChart };\nvar pathToSeriesTypeMap = {\n  'cartesian.series': 'line',\n  'line.series': 'line',\n  'area.series': 'area',\n  'bar.series': 'bar',\n  'column.series': 'column',\n  'histogram.series': 'histogram',\n  'scatter.series': 'scatter',\n  'polar.series': 'pie',\n  'pie.series': 'pie'\n};\nvar actualSeriesTypeMap = function () {\n  var map = {};\n  var actualSeries = ['area', 'bar', 'histogram', 'line', 'pie', 'scatter'];\n  actualSeries.forEach(function (series) {\n    return map[series] = series;\n  });\n  // Aliases:\n  map['column'] = 'bar';\n  return map;\n}();\nfunction create(options, path, component, theme) {\n  var _a;\n  // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n  options = Object.create(options);\n  if (component instanceof LegendMarker) {\n    if (options.type) {\n      options.shape = options.type;\n    }\n  } else {\n    options = provideDefaultType(options, path);\n    if (path) {\n      if (options.type) {\n        path = path + '.' + options.type;\n      }\n    } else {\n      path = options.type;\n    }\n  }\n  if (!path) {\n    return;\n  }\n  var mapping = getValue(mappings, path);\n  if (mapping) {\n    options = provideDefaultOptions(path, options, mapping, theme);\n    var meta = mapping.meta || {};\n    var constructorParams = meta.constructorParams || [];\n    var skipKeys = ['type', 'listeners'].concat(constructorParams);\n    // TODO: Constructor params processing could be improved, but it's good enough for current params.\n    var constructorParamValues = constructorParams.map(function (param) {\n      return options[param];\n    }).filter(function (value) {\n      return value !== undefined;\n    });\n    if (!component) {\n      component = new ((_a = meta.constructor).bind.apply(_a, __spreadArrays([void 0], constructorParamValues)))();\n      if (theme && component instanceof Series) {\n        firstColorIndex = theme.setSeriesColors(component, options, firstColorIndex);\n      }\n    }\n    var _loop_1 = function (key) {\n      // Process every non-special key in the config object.\n      if (skipKeys.indexOf(key) < 0) {\n        var value = options[key];\n        if (value && key in mapping && !(meta.setAsIs && meta.setAsIs.indexOf(key) >= 0)) {\n          if (Array.isArray(value)) {\n            var subComponents = value.map(function (config) {\n              return create(config, path + '.' + key, undefined, theme);\n            }).filter(function (instance) {\n              return !!instance;\n            });\n            component[key] = subComponents;\n          } else {\n            if (mapping[key] && component[key]) {\n              // The instance property already exists on the component (e.g. chart.legend).\n              // Simply configure the existing instance, without creating a new one.\n              create(value, path + '.' + key, component[key], theme);\n            } else {\n              var subComponent = create(value, value.type ? path : path + '.' + key, undefined, theme);\n              if (subComponent) {\n                component[key] = subComponent;\n              }\n            }\n          }\n        } else {\n          // if (key in meta.constructor.defaults) { // prevent users from creating custom properties\n          component[key] = value;\n        }\n      }\n    };\n    for (var key in options) {\n      _loop_1(key);\n    }\n    var listeners = options.listeners;\n    if (component && component.addEventListener && listeners) {\n      for (var key in listeners) {\n        if (listeners.hasOwnProperty(key)) {\n          var listener = listeners[key];\n          if (typeof listener === 'function') {\n            component.addEventListener(key, listener);\n          }\n        }\n      }\n    }\n    return component;\n  }\n}\nfunction update(component, options, path, theme) {\n  if (!(options && isObject(options))) {\n    return;\n  }\n  // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n  if (component instanceof LegendMarker) {\n    if (options.type) {\n      options.shape = options.type;\n    }\n  } else {\n    options = provideDefaultType(options, path);\n    if (path) {\n      if (options.type) {\n        path = path + '.' + options.type;\n      }\n    } else {\n      path = options.type;\n    }\n  }\n  if (!path) {\n    return;\n  }\n  var chart = path in mappings ? component : undefined;\n  var mapping = getValue(mappings, path);\n  if (mapping) {\n    options = provideDefaultOptions(path, options, mapping, theme);\n    var meta = mapping.meta || {};\n    var constructorParams = meta && meta.constructorParams || [];\n    var skipKeys = ['type'].concat(constructorParams);\n    for (var key in options) {\n      if (skipKeys.indexOf(key) < 0) {\n        var value = options[key];\n        var keyPath = path + '.' + key;\n        if (meta.setAsIs && meta.setAsIs.indexOf(key) >= 0) {\n          component[key] = value;\n        } else {\n          var oldValue = component[key];\n          if (Array.isArray(oldValue) && Array.isArray(value)) {\n            if (chart) {\n              if (key === 'series') {\n                updateSeries(component, value, keyPath, theme);\n              } else if (key === 'axes') {\n                updateAxes(component, value, keyPath, theme);\n              }\n            } else {\n              component[key] = value;\n            }\n          } else if (isObject(oldValue)) {\n            if (value) {\n              update(oldValue, value, value.type ? path : keyPath, theme);\n            } else if (key in options) {\n              component[key] = value;\n            }\n          } else {\n            var subComponent = isObject(value) && create(value, value.type ? path : keyPath, undefined, theme);\n            if (subComponent) {\n              component[key] = subComponent;\n            } else {\n              if (chart && options.autoSize && (key === 'width' || key === 'height')) {\n                continue;\n              }\n              component[key] = value;\n            }\n          }\n        }\n      }\n    }\n  }\n  if (chart) {\n    chart.layoutPending = true;\n  }\n}\nfunction updateSeries(chart, configs, keyPath, theme) {\n  var allSeries = chart.series.slice();\n  var prevSeries;\n  var i = 0;\n  for (; i < configs.length; i++) {\n    var config = configs[i];\n    var series = allSeries[i];\n    if (series) {\n      config = provideDefaultType(config, keyPath);\n      var type = actualSeriesTypeMap[config.type];\n      if (series.type === type) {\n        if (theme) {\n          firstColorIndex = theme.setSeriesColors(series, config, firstColorIndex);\n        }\n        update(series, config, keyPath, theme);\n      } else {\n        var newSeries = create(config, keyPath, undefined, theme);\n        chart.removeSeries(series);\n        chart.addSeriesAfter(newSeries, prevSeries);\n        series = newSeries;\n      }\n    } else {\n      // more new configs than existing series\n      var newSeries = create(config, keyPath, undefined, theme);\n      chart.addSeries(newSeries);\n    }\n    prevSeries = series;\n  }\n  // more existing series than new configs\n  for (; i < allSeries.length; i++) {\n    var series = allSeries[i];\n    if (series) {\n      chart.removeSeries(series);\n    }\n  }\n}\nfunction updateAxes(chart, configs, keyPath, theme) {\n  var axes = chart.axes;\n  var axesToAdd = [];\n  var axesToUpdate = [];\n  var _loop_2 = function (config) {\n    var axisToUpdate = find(axes, function (axis) {\n      return axis.type === config.type && axis.position === config.position;\n    });\n    if (axisToUpdate) {\n      axesToUpdate.push(axisToUpdate);\n      update(axisToUpdate, config, keyPath, theme);\n    } else {\n      var axisToAdd = create(config, keyPath, undefined, theme);\n      if (axisToAdd) {\n        axesToAdd.push(axisToAdd);\n      }\n    }\n  };\n  for (var _i = 0, configs_1 = configs; _i < configs_1.length; _i++) {\n    var config = configs_1[_i];\n    _loop_2(config);\n  }\n  chart.axes = axesToUpdate.concat(axesToAdd);\n}\nfunction provideDefaultChartType(options) {\n  if (options.type) {\n    return options;\n  }\n  // If chart type is not specified, try to infer it from the type of first series.\n  var series = options.series && options.series[0];\n  if (series && series.type) {\n    outerLoop: for (var chartType in mappings) {\n      for (var seriesType in mappings[chartType].series) {\n        if (series.type === seriesType) {\n          options = Object.create(options);\n          options.type = chartType;\n          break outerLoop;\n        }\n      }\n    }\n  }\n  if (!options.type) {\n    options = Object.create(options);\n    options.type = 'cartesian';\n  }\n  return options;\n}\nfunction provideDefaultType(options, path) {\n  if (!path) {\n    // if `path` is undefined, `options` is a top-level (chart) config\n    path = '';\n    options = provideDefaultChartType(options);\n  }\n  if (!options.type) {\n    var seriesType = pathToSeriesTypeMap[path];\n    if (seriesType) {\n      options = Object.create(options);\n      options.type = seriesType;\n    }\n  }\n  return options;\n}\nfunction skipThemeKey(key) {\n  return ['axes', 'series'].indexOf(key) >= 0;\n}\nvar enabledKey = 'enabled';\n/**\n * If certain options were not provided by the user, use the defaults from the theme and the mapping.\n * All three objects are provided for the current path in the config tree, not necessarily top-level.\n */\nfunction provideDefaultOptions(path, options, mapping, theme) {\n  var isChartConfig = path.indexOf('.') < 0;\n  var themeDefaults = theme && theme.getConfig(path);\n  var defaults = mapping && mapping.meta && mapping.meta.defaults;\n  var isExplicitlyDisabled = options.enabled === false; // by the user\n  if (defaults || themeDefaults) {\n    options = Object.create(options);\n  }\n  // Fill in the gaps for properties not configured by the user using theme provided values.\n  for (var key in themeDefaults) {\n    // The default values for these special chart configs always come from the mappings, not theme.\n    if (isChartConfig && skipThemeKey(key)) {\n      continue;\n    }\n    if (!(key in options)) {\n      options[key] = themeDefaults[key];\n    }\n  }\n  // Fill in the gaps for properties not configured by the user, nor theme using chart mappings.\n  for (var key in defaults) {\n    if ((!themeDefaults || !(key in themeDefaults) || skipThemeKey(key)) && !(key in options)) {\n      options[key] = defaults[key];\n    }\n  }\n  // Special handling for the 'enabled' property. For example:\n  // title: { text: 'Quarterly Revenue' } // means title is enabled\n  // legend: {} // means legend is enabled\n  var hasEnabledKey = themeDefaults && enabledKey in themeDefaults || defaults && enabledKey in defaults;\n  if (hasEnabledKey && !isExplicitlyDisabled) {\n    options[enabledKey] = true;\n  }\n  return options;\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","Series","LegendMarker","ChartTheme","DarkTheme","MaterialLight","MaterialDark","PastelLight","PastelDark","SolarLight","SolarDark","VividLight","VividDark","find","getValue","isObject","mappings","lightTheme","darkTheme","lightThemes","darkThemes","themes","getChartTheme","value","stockTheme","baseTheme","overrides","palette","constructor","firstColorIndex","AgChart","create","options","container","data","autoSize","theme","chart","undefined","update","createComponent","pathToSeriesTypeMap","actualSeriesTypeMap","map","actualSeries","forEach","series","path","component","_a","type","shape","provideDefaultType","mapping","provideDefaultOptions","meta","constructorParams","skipKeys","concat","constructorParamValues","param","filter","bind","setSeriesColors","_loop_1","key","indexOf","setAsIs","isArray","subComponents","config","instance","subComponent","listeners","addEventListener","listener","keyPath","oldValue","updateSeries","updateAxes","layoutPending","configs","allSeries","slice","prevSeries","newSeries","removeSeries","addSeriesAfter","addSeries","axes","axesToAdd","axesToUpdate","_loop_2","axisToUpdate","axis","position","push","axisToAdd","_i","configs_1","provideDefaultChartType","outerLoop","chartType","seriesType","skipThemeKey","enabledKey","isChartConfig","themeDefaults","getConfig","defaults","isExplicitlyDisabled","enabled","hasEnabledKey"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/chart/agChart.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Series } from \"./series/series\";\nimport { LegendMarker } from \"./legend\";\nimport { ChartTheme } from \"./themes/chartTheme\";\nimport { DarkTheme } from './themes/darkTheme';\nimport { MaterialLight } from \"./themes/materialLight\";\nimport { MaterialDark } from \"./themes/materialDark\";\nimport { PastelLight } from \"./themes/pastelLight\";\nimport { PastelDark } from \"./themes/pastelDark\";\nimport { SolarLight } from \"./themes/solarLight\";\nimport { SolarDark } from \"./themes/solarDark\";\nimport { VividLight } from \"./themes/vividLight\";\nimport { VividDark } from \"./themes/vividDark\";\nimport { find } from \"../util/array\";\nimport { getValue, isObject } from \"../util/object\";\nimport mappings from './agChartMappings';\nvar lightTheme = new ChartTheme();\nvar darkTheme = new DarkTheme();\nexport var lightThemes = {\n    'undefined': lightTheme,\n    'null': lightTheme,\n    'ag-default': lightTheme,\n    'ag-material': new MaterialLight(),\n    'ag-pastel': new PastelLight(),\n    'ag-solar': new SolarLight(),\n    'ag-vivid': new VividLight(),\n};\nexport var darkThemes = {\n    'undefined': darkTheme,\n    'null': darkTheme,\n    'ag-default-dark': darkTheme,\n    'ag-material-dark': new MaterialDark(),\n    'ag-pastel-dark': new PastelDark(),\n    'ag-solar-dark': new SolarDark(),\n    'ag-vivid-dark': new VividDark(),\n};\nexport var themes = __assign(__assign({}, darkThemes), lightThemes);\nexport function getChartTheme(value) {\n    if (value instanceof ChartTheme) {\n        return value;\n    }\n    var stockTheme = themes[value];\n    if (stockTheme) {\n        return stockTheme;\n    }\n    value = value;\n    if (value.baseTheme || value.overrides || value.palette) {\n        var baseTheme = getChartTheme(value.baseTheme);\n        return new baseTheme.constructor(value);\n    }\n    return lightTheme;\n}\nvar firstColorIndex = 0;\nvar AgChart = /** @class */ (function () {\n    function AgChart() {\n    }\n    AgChart.create = function (options, container, data) {\n        options = Object.create(options); // avoid mutating user provided options\n        if (container) {\n            options.container = container;\n        }\n        if (data) {\n            options.data = data;\n        }\n        // special handling when both `autoSize` and `width` / `height` are present in the options\n        var autoSize = options && options.autoSize !== false;\n        var theme = getChartTheme(options.theme);\n        firstColorIndex = 0;\n        var chart = create(options, undefined, undefined, theme);\n        if (chart) {\n            if (autoSize) { // `autoSize` takes precedence over `width` / `height`\n                chart.autoSize = true;\n            }\n        }\n        return chart;\n    };\n    AgChart.update = function (chart, options, container, data) {\n        if (!(chart && options)) {\n            return;\n        }\n        options = Object.create(options);\n        if (container) {\n            options.container = container;\n        }\n        if (data) {\n            options.data = data;\n        }\n        var autoSize = options && options.autoSize !== false;\n        var theme = getChartTheme(options.theme);\n        firstColorIndex = 0;\n        update(chart, options, undefined, theme);\n        if (autoSize) {\n            chart.autoSize = true;\n        }\n    };\n    AgChart.createComponent = create;\n    return AgChart;\n}());\nexport { AgChart };\nvar pathToSeriesTypeMap = {\n    'cartesian.series': 'line',\n    'line.series': 'line',\n    'area.series': 'area',\n    'bar.series': 'bar',\n    'column.series': 'column',\n    'histogram.series': 'histogram',\n    'scatter.series': 'scatter',\n    'polar.series': 'pie',\n    'pie.series': 'pie'\n};\nvar actualSeriesTypeMap = (function () {\n    var map = {};\n    var actualSeries = ['area', 'bar', 'histogram', 'line', 'pie', 'scatter'];\n    actualSeries.forEach(function (series) { return map[series] = series; });\n    // Aliases:\n    map['column'] = 'bar';\n    return map;\n})();\nfunction create(options, path, component, theme) {\n    var _a;\n    // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n    options = Object.create(options);\n    if (component instanceof LegendMarker) {\n        if (options.type) {\n            options.shape = options.type;\n        }\n    }\n    else {\n        options = provideDefaultType(options, path);\n        if (path) {\n            if (options.type) {\n                path = path + '.' + options.type;\n            }\n        }\n        else {\n            path = options.type;\n        }\n    }\n    if (!path) {\n        return;\n    }\n    var mapping = getValue(mappings, path);\n    if (mapping) {\n        options = provideDefaultOptions(path, options, mapping, theme);\n        var meta = mapping.meta || {};\n        var constructorParams = meta.constructorParams || [];\n        var skipKeys = ['type', 'listeners'].concat(constructorParams);\n        // TODO: Constructor params processing could be improved, but it's good enough for current params.\n        var constructorParamValues = constructorParams\n            .map(function (param) { return options[param]; })\n            .filter(function (value) { return value !== undefined; });\n        if (!component) {\n            component = new ((_a = meta.constructor).bind.apply(_a, __spreadArrays([void 0], constructorParamValues)))();\n            if (theme && component instanceof Series) {\n                firstColorIndex = theme.setSeriesColors(component, options, firstColorIndex);\n            }\n        }\n        var _loop_1 = function (key) {\n            // Process every non-special key in the config object.\n            if (skipKeys.indexOf(key) < 0) {\n                var value = options[key];\n                if (value && key in mapping && !(meta.setAsIs && meta.setAsIs.indexOf(key) >= 0)) {\n                    if (Array.isArray(value)) {\n                        var subComponents = value\n                            .map(function (config) {\n                            return create(config, path + '.' + key, undefined, theme);\n                        })\n                            .filter(function (instance) { return !!instance; });\n                        component[key] = subComponents;\n                    }\n                    else {\n                        if (mapping[key] && component[key]) {\n                            // The instance property already exists on the component (e.g. chart.legend).\n                            // Simply configure the existing instance, without creating a new one.\n                            create(value, path + '.' + key, component[key], theme);\n                        }\n                        else {\n                            var subComponent = create(value, value.type ? path : path + '.' + key, undefined, theme);\n                            if (subComponent) {\n                                component[key] = subComponent;\n                            }\n                        }\n                    }\n                }\n                else { // if (key in meta.constructor.defaults) { // prevent users from creating custom properties\n                    component[key] = value;\n                }\n            }\n        };\n        for (var key in options) {\n            _loop_1(key);\n        }\n        var listeners = options.listeners;\n        if (component && component.addEventListener && listeners) {\n            for (var key in listeners) {\n                if (listeners.hasOwnProperty(key)) {\n                    var listener = listeners[key];\n                    if (typeof listener === 'function') {\n                        component.addEventListener(key, listener);\n                    }\n                }\n            }\n        }\n        return component;\n    }\n}\nfunction update(component, options, path, theme) {\n    if (!(options && isObject(options))) {\n        return;\n    }\n    // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n    if (component instanceof LegendMarker) {\n        if (options.type) {\n            options.shape = options.type;\n        }\n    }\n    else {\n        options = provideDefaultType(options, path);\n        if (path) {\n            if (options.type) {\n                path = path + '.' + options.type;\n            }\n        }\n        else {\n            path = options.type;\n        }\n    }\n    if (!path) {\n        return;\n    }\n    var chart = path in mappings ? component : undefined;\n    var mapping = getValue(mappings, path);\n    if (mapping) {\n        options = provideDefaultOptions(path, options, mapping, theme);\n        var meta = mapping.meta || {};\n        var constructorParams = meta && meta.constructorParams || [];\n        var skipKeys = ['type'].concat(constructorParams);\n        for (var key in options) {\n            if (skipKeys.indexOf(key) < 0) {\n                var value = options[key];\n                var keyPath = path + '.' + key;\n                if (meta.setAsIs && meta.setAsIs.indexOf(key) >= 0) {\n                    component[key] = value;\n                }\n                else {\n                    var oldValue = component[key];\n                    if (Array.isArray(oldValue) && Array.isArray(value)) {\n                        if (chart) {\n                            if (key === 'series') {\n                                updateSeries(component, value, keyPath, theme);\n                            }\n                            else if (key === 'axes') {\n                                updateAxes(component, value, keyPath, theme);\n                            }\n                        }\n                        else {\n                            component[key] = value;\n                        }\n                    }\n                    else if (isObject(oldValue)) {\n                        if (value) {\n                            update(oldValue, value, value.type ? path : keyPath, theme);\n                        }\n                        else if (key in options) {\n                            component[key] = value;\n                        }\n                    }\n                    else {\n                        var subComponent = isObject(value) && create(value, value.type ? path : keyPath, undefined, theme);\n                        if (subComponent) {\n                            component[key] = subComponent;\n                        }\n                        else {\n                            if (chart && options.autoSize && (key === 'width' || key === 'height')) {\n                                continue;\n                            }\n                            component[key] = value;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (chart) {\n        chart.layoutPending = true;\n    }\n}\nfunction updateSeries(chart, configs, keyPath, theme) {\n    var allSeries = chart.series.slice();\n    var prevSeries;\n    var i = 0;\n    for (; i < configs.length; i++) {\n        var config = configs[i];\n        var series = allSeries[i];\n        if (series) {\n            config = provideDefaultType(config, keyPath);\n            var type = actualSeriesTypeMap[config.type];\n            if (series.type === type) {\n                if (theme) {\n                    firstColorIndex = theme.setSeriesColors(series, config, firstColorIndex);\n                }\n                update(series, config, keyPath, theme);\n            }\n            else {\n                var newSeries = create(config, keyPath, undefined, theme);\n                chart.removeSeries(series);\n                chart.addSeriesAfter(newSeries, prevSeries);\n                series = newSeries;\n            }\n        }\n        else { // more new configs than existing series\n            var newSeries = create(config, keyPath, undefined, theme);\n            chart.addSeries(newSeries);\n        }\n        prevSeries = series;\n    }\n    // more existing series than new configs\n    for (; i < allSeries.length; i++) {\n        var series = allSeries[i];\n        if (series) {\n            chart.removeSeries(series);\n        }\n    }\n}\nfunction updateAxes(chart, configs, keyPath, theme) {\n    var axes = chart.axes;\n    var axesToAdd = [];\n    var axesToUpdate = [];\n    var _loop_2 = function (config) {\n        var axisToUpdate = find(axes, function (axis) {\n            return axis.type === config.type && axis.position === config.position;\n        });\n        if (axisToUpdate) {\n            axesToUpdate.push(axisToUpdate);\n            update(axisToUpdate, config, keyPath, theme);\n        }\n        else {\n            var axisToAdd = create(config, keyPath, undefined, theme);\n            if (axisToAdd) {\n                axesToAdd.push(axisToAdd);\n            }\n        }\n    };\n    for (var _i = 0, configs_1 = configs; _i < configs_1.length; _i++) {\n        var config = configs_1[_i];\n        _loop_2(config);\n    }\n    chart.axes = axesToUpdate.concat(axesToAdd);\n}\nfunction provideDefaultChartType(options) {\n    if (options.type) {\n        return options;\n    }\n    // If chart type is not specified, try to infer it from the type of first series.\n    var series = options.series && options.series[0];\n    if (series && series.type) {\n        outerLoop: for (var chartType in mappings) {\n            for (var seriesType in mappings[chartType].series) {\n                if (series.type === seriesType) {\n                    options = Object.create(options);\n                    options.type = chartType;\n                    break outerLoop;\n                }\n            }\n        }\n    }\n    if (!options.type) {\n        options = Object.create(options);\n        options.type = 'cartesian';\n    }\n    return options;\n}\nfunction provideDefaultType(options, path) {\n    if (!path) { // if `path` is undefined, `options` is a top-level (chart) config\n        path = '';\n        options = provideDefaultChartType(options);\n    }\n    if (!options.type) {\n        var seriesType = pathToSeriesTypeMap[path];\n        if (seriesType) {\n            options = Object.create(options);\n            options.type = seriesType;\n        }\n    }\n    return options;\n}\nfunction skipThemeKey(key) {\n    return ['axes', 'series'].indexOf(key) >= 0;\n}\nvar enabledKey = 'enabled';\n/**\n * If certain options were not provided by the user, use the defaults from the theme and the mapping.\n * All three objects are provided for the current path in the config tree, not necessarily top-level.\n */\nfunction provideDefaultOptions(path, options, mapping, theme) {\n    var isChartConfig = path.indexOf('.') < 0;\n    var themeDefaults = theme && theme.getConfig(path);\n    var defaults = mapping && mapping.meta && mapping.meta.defaults;\n    var isExplicitlyDisabled = options.enabled === false; // by the user\n    if (defaults || themeDefaults) {\n        options = Object.create(options);\n    }\n    // Fill in the gaps for properties not configured by the user using theme provided values.\n    for (var key in themeDefaults) {\n        // The default values for these special chart configs always come from the mappings, not theme.\n        if (isChartConfig && skipThemeKey(key)) {\n            continue;\n        }\n        if (!(key in options)) {\n            options[key] = themeDefaults[key];\n        }\n    }\n    // Fill in the gaps for properties not configured by the user, nor theme using chart mappings.\n    for (var key in defaults) {\n        if ((!themeDefaults || !(key in themeDefaults) || skipThemeKey(key)) && !(key in options)) {\n            options[key] = defaults[key];\n        }\n    }\n    // Special handling for the 'enabled' property. For example:\n    // title: { text: 'Quarterly Revenue' } // means title is enabled\n    // legend: {} // means legend is enabled\n    var hasEnabledKey = (themeDefaults && enabledKey in themeDefaults) ||\n        (defaults && enabledKey in defaults);\n    if (hasEnabledKey && !isExplicitlyDisabled) {\n        options[enabledKey] = true;\n    }\n    return options;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}