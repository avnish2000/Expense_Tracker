{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Shape } from \"./shape\";\nimport { chainObjects } from \"../../util/object\";\nimport { BBox } from \"../bbox\";\nimport { HdpiCanvas } from \"../../canvas/hdpiCanvas\";\nvar Text = /** @class */function (_super) {\n  __extends(Text, _super);\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._x = 0;\n    _this._y = 0;\n    _this.lineBreakRegex = /\\r?\\n/g;\n    _this.lines = [];\n    _this._text = '';\n    _this._dirtyFont = true;\n    _this._fontSize = 10;\n    _this._fontFamily = 'sans-serif';\n    _this._textAlign = Text.defaultStyles.textAlign;\n    _this._textBaseline = Text.defaultStyles.textBaseline;\n    _this._lineHeight = 14;\n    return _this;\n  }\n  Object.defineProperty(Text.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      if (this._x !== value) {\n        this._x = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      if (this._y !== value) {\n        this._y = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Text.prototype.splitText = function () {\n    this.lines = this._text.split(this.lineBreakRegex);\n  };\n  Object.defineProperty(Text.prototype, \"text\", {\n    get: function () {\n      return this._text;\n    },\n    set: function (value) {\n      var str = String(value); // `value` can be an object here\n      if (this._text !== str) {\n        this._text = str;\n        this.splitText();\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"font\", {\n    get: function () {\n      if (this.dirtyFont) {\n        this.dirtyFont = false;\n        this._font = [this.fontStyle || '', this.fontWeight || '', this.fontSize + 'px', this.fontFamily].join(' ').trim();\n      }\n      return this._font;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"dirtyFont\", {\n    get: function () {\n      return this._dirtyFont;\n    },\n    set: function (value) {\n      if (this._dirtyFont !== value) {\n        this._dirtyFont = value;\n        if (value) {\n          this.dirty = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontStyle\", {\n    get: function () {\n      return this._fontStyle;\n    },\n    set: function (value) {\n      if (this._fontStyle !== value) {\n        this._fontStyle = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontWeight\", {\n    get: function () {\n      return this._fontWeight;\n    },\n    set: function (value) {\n      if (this._fontWeight !== value) {\n        this._fontWeight = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontSize\", {\n    get: function () {\n      return this._fontSize;\n    },\n    set: function (value) {\n      if (!isFinite(value)) {\n        value = 10;\n      }\n      if (this._fontSize !== value) {\n        this._fontSize = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontFamily\", {\n    get: function () {\n      return this._fontFamily;\n    },\n    set: function (value) {\n      if (this._fontFamily !== value) {\n        this._fontFamily = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"textAlign\", {\n    get: function () {\n      return this._textAlign;\n    },\n    set: function (value) {\n      if (this._textAlign !== value) {\n        this._textAlign = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"textBaseline\", {\n    get: function () {\n      return this._textBaseline;\n    },\n    set: function (value) {\n      if (this._textBaseline !== value) {\n        this._textBaseline = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"lineHeight\", {\n    get: function () {\n      return this._lineHeight;\n    },\n    set: function (value) {\n      // Multi-line text is complicated because:\n      // - Canvas does not support it natively, so we have to implement it manually\n      // - need to know the height of each line -> need to parse the font shorthand ->\n      //   generally impossible to do because font size may not be in pixels\n      // - so, need to measure the text instead, each line individually -> expensive\n      // - or make the user provide the line height manually for multi-line text\n      // - computeBBox should use the lineHeight for multi-line text but ignore it otherwise\n      // - textBaseline kind of loses its meaning for multi-line text\n      if (this._lineHeight !== value) {\n        this._lineHeight = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Text.prototype.computeBBox = function () {\n    return HdpiCanvas.has.textMetrics ? this.getPreciseBBox() : this.getApproximateBBox();\n  };\n  Text.prototype.getPreciseBBox = function () {\n    var metrics = HdpiCanvas.measureText(this.text, this.font, this.textBaseline, this.textAlign);\n    return new BBox(this.x - metrics.actualBoundingBoxLeft, this.y - metrics.actualBoundingBoxAscent, metrics.width, metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n  };\n  Text.prototype.getApproximateBBox = function () {\n    var size = HdpiCanvas.getTextSize(this.text, this.font);\n    var _a = this,\n      x = _a.x,\n      y = _a.y;\n    switch (this.textAlign) {\n      case 'end':\n      case 'right':\n        x -= size.width;\n        break;\n      case 'center':\n        x -= size.width / 2;\n    }\n    switch (this.textBaseline) {\n      case 'alphabetic':\n        y -= size.height * 0.7;\n        break;\n      case 'middle':\n        y -= size.height * 0.45;\n        break;\n      case 'ideographic':\n        y -= size.height;\n        break;\n      case 'hanging':\n        y -= size.height * 0.2;\n        break;\n      case 'bottom':\n        y -= size.height;\n        break;\n    }\n    return new BBox(x, y, size.width, size.height);\n  };\n  Text.prototype.isPointInPath = function (x, y) {\n    var point = this.transformPoint(x, y);\n    var bbox = this.computeBBox();\n    return bbox ? bbox.containsPoint(point.x, point.y) : false;\n  };\n  Text.prototype.isPointInStroke = function (x, y) {\n    return false;\n  };\n  Text.prototype.render = function (ctx) {\n    if (!this.lines.length || !this.scene) {\n      return;\n    }\n    if (this.dirtyTransform) {\n      this.computeTransformMatrix();\n    }\n    // this.matrix.transformBBox(this.computeBBox!()).render(ctx); // debug\n    this.matrix.toContext(ctx);\n    var _a = this,\n      fill = _a.fill,\n      stroke = _a.stroke,\n      strokeWidth = _a.strokeWidth;\n    ctx.font = this.font;\n    ctx.textAlign = this.textAlign;\n    ctx.textBaseline = this.textBaseline;\n    var pixelRatio = this.scene.canvas.pixelRatio || 1;\n    if (fill) {\n      ctx.fillStyle = fill;\n      ctx.globalAlpha = this.opacity * this.fillOpacity;\n      var _b = this,\n        fillShadow = _b.fillShadow,\n        text = _b.text,\n        x = _b.x,\n        y = _b.y;\n      if (fillShadow && fillShadow.enabled) {\n        ctx.shadowColor = fillShadow.color;\n        ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = fillShadow.blur * pixelRatio;\n      }\n      ctx.fillText(text, x, y);\n    }\n    if (stroke && strokeWidth) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = this.opacity * this.strokeOpacity;\n      var _c = this,\n        lineDash = _c.lineDash,\n        lineDashOffset = _c.lineDashOffset,\n        lineCap = _c.lineCap,\n        lineJoin = _c.lineJoin,\n        strokeShadow = _c.strokeShadow,\n        text = _c.text,\n        x = _c.x,\n        y = _c.y;\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n      if (strokeShadow && strokeShadow.enabled) {\n        ctx.shadowColor = strokeShadow.color;\n        ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n      }\n      ctx.strokeText(text, x, y);\n    }\n    this.dirty = false;\n  };\n  Text.className = 'Text';\n  Text.defaultStyles = chainObjects(Shape.defaultStyles, {\n    textAlign: 'start',\n    fontStyle: undefined,\n    fontWeight: undefined,\n    fontSize: 10,\n    fontFamily: 'sans-serif',\n    textBaseline: 'alphabetic'\n  });\n  return Text;\n}(Shape);\nexport { Text };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Shape","chainObjects","BBox","HdpiCanvas","Text","_super","_this","apply","arguments","_x","_y","lineBreakRegex","lines","_text","_dirtyFont","_fontSize","_fontFamily","_textAlign","defaultStyles","textAlign","_textBaseline","textBaseline","_lineHeight","defineProperty","get","set","value","dirty","enumerable","configurable","splitText","split","str","String","dirtyFont","_font","fontStyle","fontWeight","fontSize","fontFamily","join","trim","_fontStyle","_fontWeight","isFinite","computeBBox","has","textMetrics","getPreciseBBox","getApproximateBBox","metrics","measureText","text","font","x","actualBoundingBoxLeft","y","actualBoundingBoxAscent","width","actualBoundingBoxDescent","size","getTextSize","_a","height","isPointInPath","point","transformPoint","bbox","containsPoint","isPointInStroke","render","ctx","length","scene","dirtyTransform","computeTransformMatrix","matrix","toContext","fill","stroke","strokeWidth","pixelRatio","canvas","fillStyle","globalAlpha","opacity","fillOpacity","_b","fillShadow","enabled","shadowColor","color","shadowOffsetX","xOffset","shadowOffsetY","yOffset","shadowBlur","blur","fillText","strokeStyle","lineWidth","strokeOpacity","_c","lineDash","lineDashOffset","lineCap","lineJoin","strokeShadow","setLineDash","strokeText","className","undefined"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scene/shape/text.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Shape } from \"./shape\";\nimport { chainObjects } from \"../../util/object\";\nimport { BBox } from \"../bbox\";\nimport { HdpiCanvas } from \"../../canvas/hdpiCanvas\";\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._x = 0;\n        _this._y = 0;\n        _this.lineBreakRegex = /\\r?\\n/g;\n        _this.lines = [];\n        _this._text = '';\n        _this._dirtyFont = true;\n        _this._fontSize = 10;\n        _this._fontFamily = 'sans-serif';\n        _this._textAlign = Text.defaultStyles.textAlign;\n        _this._textBaseline = Text.defaultStyles.textBaseline;\n        _this._lineHeight = 14;\n        return _this;\n    }\n    Object.defineProperty(Text.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        set: function (value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        set: function (value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Text.prototype.splitText = function () {\n        this.lines = this._text.split(this.lineBreakRegex);\n    };\n    Object.defineProperty(Text.prototype, \"text\", {\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            var str = String(value); // `value` can be an object here\n            if (this._text !== str) {\n                this._text = str;\n                this.splitText();\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"font\", {\n        get: function () {\n            if (this.dirtyFont) {\n                this.dirtyFont = false;\n                this._font = [\n                    this.fontStyle || '',\n                    this.fontWeight || '',\n                    this.fontSize + 'px',\n                    this.fontFamily\n                ].join(' ').trim();\n            }\n            return this._font;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"dirtyFont\", {\n        get: function () {\n            return this._dirtyFont;\n        },\n        set: function (value) {\n            if (this._dirtyFont !== value) {\n                this._dirtyFont = value;\n                if (value) {\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontStyle\", {\n        get: function () {\n            return this._fontStyle;\n        },\n        set: function (value) {\n            if (this._fontStyle !== value) {\n                this._fontStyle = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontWeight\", {\n        get: function () {\n            return this._fontWeight;\n        },\n        set: function (value) {\n            if (this._fontWeight !== value) {\n                this._fontWeight = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontSize\", {\n        get: function () {\n            return this._fontSize;\n        },\n        set: function (value) {\n            if (!isFinite(value)) {\n                value = 10;\n            }\n            if (this._fontSize !== value) {\n                this._fontSize = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontFamily\", {\n        get: function () {\n            return this._fontFamily;\n        },\n        set: function (value) {\n            if (this._fontFamily !== value) {\n                this._fontFamily = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"textAlign\", {\n        get: function () {\n            return this._textAlign;\n        },\n        set: function (value) {\n            if (this._textAlign !== value) {\n                this._textAlign = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"textBaseline\", {\n        get: function () {\n            return this._textBaseline;\n        },\n        set: function (value) {\n            if (this._textBaseline !== value) {\n                this._textBaseline = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"lineHeight\", {\n        get: function () {\n            return this._lineHeight;\n        },\n        set: function (value) {\n            // Multi-line text is complicated because:\n            // - Canvas does not support it natively, so we have to implement it manually\n            // - need to know the height of each line -> need to parse the font shorthand ->\n            //   generally impossible to do because font size may not be in pixels\n            // - so, need to measure the text instead, each line individually -> expensive\n            // - or make the user provide the line height manually for multi-line text\n            // - computeBBox should use the lineHeight for multi-line text but ignore it otherwise\n            // - textBaseline kind of loses its meaning for multi-line text\n            if (this._lineHeight !== value) {\n                this._lineHeight = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Text.prototype.computeBBox = function () {\n        return HdpiCanvas.has.textMetrics\n            ? this.getPreciseBBox()\n            : this.getApproximateBBox();\n    };\n    Text.prototype.getPreciseBBox = function () {\n        var metrics = HdpiCanvas.measureText(this.text, this.font, this.textBaseline, this.textAlign);\n        return new BBox(this.x - metrics.actualBoundingBoxLeft, this.y - metrics.actualBoundingBoxAscent, metrics.width, metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n    };\n    Text.prototype.getApproximateBBox = function () {\n        var size = HdpiCanvas.getTextSize(this.text, this.font);\n        var _a = this, x = _a.x, y = _a.y;\n        switch (this.textAlign) {\n            case 'end':\n            case 'right':\n                x -= size.width;\n                break;\n            case 'center':\n                x -= size.width / 2;\n        }\n        switch (this.textBaseline) {\n            case 'alphabetic':\n                y -= size.height * 0.7;\n                break;\n            case 'middle':\n                y -= size.height * 0.45;\n                break;\n            case 'ideographic':\n                y -= size.height;\n                break;\n            case 'hanging':\n                y -= size.height * 0.2;\n                break;\n            case 'bottom':\n                y -= size.height;\n                break;\n        }\n        return new BBox(x, y, size.width, size.height);\n    };\n    Text.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        var bbox = this.computeBBox();\n        return bbox ? bbox.containsPoint(point.x, point.y) : false;\n    };\n    Text.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Text.prototype.render = function (ctx) {\n        if (!this.lines.length || !this.scene) {\n            return;\n        }\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        // this.matrix.transformBBox(this.computeBBox!()).render(ctx); // debug\n        this.matrix.toContext(ctx);\n        var _a = this, fill = _a.fill, stroke = _a.stroke, strokeWidth = _a.strokeWidth;\n        ctx.font = this.font;\n        ctx.textAlign = this.textAlign;\n        ctx.textBaseline = this.textBaseline;\n        var pixelRatio = this.scene.canvas.pixelRatio || 1;\n        if (fill) {\n            ctx.fillStyle = fill;\n            ctx.globalAlpha = this.opacity * this.fillOpacity;\n            var _b = this, fillShadow = _b.fillShadow, text = _b.text, x = _b.x, y = _b.y;\n            if (fillShadow && fillShadow.enabled) {\n                ctx.shadowColor = fillShadow.color;\n                ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = fillShadow.blur * pixelRatio;\n            }\n            ctx.fillText(text, x, y);\n        }\n        if (stroke && strokeWidth) {\n            ctx.strokeStyle = stroke;\n            ctx.lineWidth = strokeWidth;\n            ctx.globalAlpha = this.opacity * this.strokeOpacity;\n            var _c = this, lineDash = _c.lineDash, lineDashOffset = _c.lineDashOffset, lineCap = _c.lineCap, lineJoin = _c.lineJoin, strokeShadow = _c.strokeShadow, text = _c.text, x = _c.x, y = _c.y;\n            if (lineDash) {\n                ctx.setLineDash(lineDash);\n            }\n            if (lineDashOffset) {\n                ctx.lineDashOffset = lineDashOffset;\n            }\n            if (lineCap) {\n                ctx.lineCap = lineCap;\n            }\n            if (lineJoin) {\n                ctx.lineJoin = lineJoin;\n            }\n            if (strokeShadow && strokeShadow.enabled) {\n                ctx.shadowColor = strokeShadow.color;\n                ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n            }\n            ctx.strokeText(text, x, y);\n        }\n        this.dirty = false;\n    };\n    Text.className = 'Text';\n    Text.defaultStyles = chainObjects(Shape.defaultStyles, {\n        textAlign: 'start',\n        fontStyle: undefined,\n        fontWeight: undefined,\n        fontSize: 10,\n        fontFamily: 'sans-serif',\n        textBaseline: 'alphabetic'\n    });\n    return Text;\n}(Shape));\nexport { Text };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}