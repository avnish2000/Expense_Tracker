{"ast":null,"code":"/**\n * Creates a new object with a `parent` as its prototype\n * and copies properties from the `child` into it.\n * @param parent\n * @param child\n */\nexport function chainObjects(parent, child) {\n  var obj = Object.create(parent);\n  for (var prop in child) {\n    if (child.hasOwnProperty(prop)) {\n      obj[prop] = child[prop];\n    }\n  }\n  return obj;\n}\nexport function getValue(object, path) {\n  var parts = Array.isArray(path) ? path : path.split('.');\n  var value = object;\n  parts.forEach(function (part) {\n    value = value[part];\n  });\n  return value;\n}\nfunction emptyTarget(value) {\n  return Array.isArray(value) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepMerge(emptyTarget(value), value, options) : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepMerge;\n  }\n  var customMerge = options.customMerge(key);\n  return typeof customMerge === 'function' ? customMerge : deepMerge;\n}\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n    return target.propertyIsEnumerable(symbol);\n  }) : [];\n}\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n}\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n  var destination = {};\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n  getKeys(source).forEach(function (key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\nfunction defaultIsMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n}\nfunction isNonNullObject(value) {\n  return !!value && typeof value === 'object';\n}\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]';\n}\nexport function deepMerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || defaultIsMergeableObject;\n  // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\nexport function isObject(value) {\n  return typeof value === 'object' && !Array.isArray(value);\n}","map":{"version":3,"names":["chainObjects","parent","child","obj","Object","create","prop","hasOwnProperty","getValue","object","path","parts","Array","isArray","split","value","forEach","part","emptyTarget","cloneUnlessOtherwiseSpecified","options","clone","isMergeableObject","deepMerge","defaultArrayMerge","target","source","concat","map","element","getMergeFunction","key","customMerge","getEnumerableOwnPropertySymbols","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getKeys","keys","propertyIsOnObject","property","_","propertyIsUnsafe","call","mergeObject","destination","defaultIsMergeableObject","isNonNullObject","isSpecial","stringValue","prototype","toString","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","isObject"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/util/object.js"],"sourcesContent":["/**\n * Creates a new object with a `parent` as its prototype\n * and copies properties from the `child` into it.\n * @param parent\n * @param child\n */\nexport function chainObjects(parent, child) {\n    var obj = Object.create(parent);\n    for (var prop in child) {\n        if (child.hasOwnProperty(prop)) {\n            obj[prop] = child[prop];\n        }\n    }\n    return obj;\n}\nexport function getValue(object, path) {\n    var parts = Array.isArray(path) ? path : path.split('.');\n    var value = object;\n    parts.forEach(function (part) {\n        value = value[part];\n    });\n    return value;\n}\nfunction emptyTarget(value) {\n    return Array.isArray(value) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n    return (options.clone !== false && options.isMergeableObject(value))\n        ? deepMerge(emptyTarget(value), value, options)\n        : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n    return target.concat(source).map(function (element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n    });\n}\nfunction getMergeFunction(key, options) {\n    if (!options.customMerge) {\n        return deepMerge;\n    }\n    var customMerge = options.customMerge(key);\n    return typeof customMerge === 'function' ? customMerge : deepMerge;\n}\nfunction getEnumerableOwnPropertySymbols(target) {\n    return Object.getOwnPropertySymbols\n        ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n            return target.propertyIsEnumerable(symbol);\n        })\n        : [];\n}\nfunction getKeys(target) {\n    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\nfunction propertyIsOnObject(object, property) {\n    try {\n        return property in object;\n    }\n    catch (_) {\n        return false;\n    }\n}\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n    return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n        && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n            && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\nfunction mergeObject(target, source, options) {\n    var destination = {};\n    if (options.isMergeableObject(target)) {\n        getKeys(target).forEach(function (key) {\n            destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n    }\n    getKeys(source).forEach(function (key) {\n        if (propertyIsUnsafe(target, key)) {\n            return;\n        }\n        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n            destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n        }\n        else {\n            destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        }\n    });\n    return destination;\n}\nfunction defaultIsMergeableObject(value) {\n    return isNonNullObject(value) && !isSpecial(value);\n}\nfunction isNonNullObject(value) {\n    return !!value && typeof value === 'object';\n}\nfunction isSpecial(value) {\n    var stringValue = Object.prototype.toString.call(value);\n    return stringValue === '[object RegExp]' || stringValue === '[object Date]';\n}\nexport function deepMerge(target, source, options) {\n    options = options || {};\n    options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n    options.isMergeableObject = options.isMergeableObject || defaultIsMergeableObject;\n    // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n    // implementations can use it. The caller may not replace it.\n    options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n    if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n    }\n    else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n    }\n    else {\n        return mergeObject(target, source, options);\n    }\n}\nexport function isObject(value) {\n    return typeof value === 'object' && !Array.isArray(value);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}