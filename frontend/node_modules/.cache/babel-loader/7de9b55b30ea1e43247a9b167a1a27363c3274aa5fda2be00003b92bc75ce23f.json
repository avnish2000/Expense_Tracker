{"ast":null,"code":"// @ts-ignore Suppress tsc error: Property 'sign' does not exist on type 'Math'\nvar sign = Math.sign ? Math.sign : function (x) {\n  x = +x;\n  if (x === 0 || isNaN(x)) {\n    return x;\n  }\n  return x > 0 ? 1 : -1;\n};\n/**\n * Finds the roots of a parametric linear equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n */\nexport function linearRoot(a, b) {\n  var t = -b / a;\n  return a !== 0 && t >= 0 && t <= 1 ? [t] : [];\n}\n/**\n * Finds the roots of a parametric quadratic equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n */\nexport function quadraticRoots(a, b, c) {\n  if (a === 0) {\n    return linearRoot(b, c);\n  }\n  var D = b * b - 4 * a * c; // The polynomial's discriminant.\n  var roots = [];\n  if (D === 0) {\n    // A single real root.\n    var t = -b / (2 * a);\n    if (t >= 0 && t <= 1) {\n      roots.push(t);\n    }\n  } else if (D > 0) {\n    // A pair of distinct real roots.\n    var rD = Math.sqrt(D);\n    var t1 = (-b - rD) / (2 * a);\n    var t2 = (-b + rD) / (2 * a);\n    if (t1 >= 0 && t1 <= 1) {\n      roots.push(t1);\n    }\n    if (t2 >= 0 && t2 <= 1) {\n      roots.push(t2);\n    }\n  }\n  // else -> Complex roots.\n  return roots;\n}\n/**\n * Finds the roots of a parametric cubic equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n * Returns an array of parametric intersection locations along the cubic,\n * excluding out-of-bounds intersections (before or after the end point\n * or in the imaginary plane).\n * An adaptation of http://www.particleincell.com/blog/2013/cubic-line-intersection/\n */\nexport function cubicRoots(a, b, c, d) {\n  if (a === 0) {\n    return quadraticRoots(b, c, d);\n  }\n  var A = b / a;\n  var B = c / a;\n  var C = d / a;\n  var Q = (3 * B - A * A) / 9;\n  var R = (9 * A * B - 27 * C - 2 * A * A * A) / 54;\n  var D = Q * Q * Q + R * R; // The polynomial's discriminant.\n  var third = 1 / 3;\n  var roots = [];\n  if (D >= 0) {\n    // Complex or duplicate roots.\n    var rD = Math.sqrt(D);\n    var S = sign(R + rD) * Math.pow(Math.abs(R + rD), third);\n    var T = sign(R - rD) * Math.pow(Math.abs(R - rD), third);\n    var Im = Math.abs(Math.sqrt(3) * (S - T) / 2); // Complex part of the root pair.\n    var t = -third * A + (S + T); // A real root.\n    if (t >= 0 && t <= 1) {\n      roots.push(t);\n    }\n    if (Im === 0) {\n      var t_1 = -third * A - (S + T) / 2; // The real part of a complex root.\n      if (t_1 >= 0 && t_1 <= 1) {\n        roots.push(t_1);\n      }\n    }\n  } else {\n    // Distinct real roots.\n    var theta = Math.acos(R / Math.sqrt(-Q * Q * Q));\n    var thirdA = third * A;\n    var twoSqrtQ = 2 * Math.sqrt(-Q);\n    var t1 = twoSqrtQ * Math.cos(third * theta) - thirdA;\n    var t2 = twoSqrtQ * Math.cos(third * (theta + 2 * Math.PI)) - thirdA;\n    var t3 = twoSqrtQ * Math.cos(third * (theta + 4 * Math.PI)) - thirdA;\n    if (t1 >= 0 && t1 <= 1) {\n      roots.push(t1);\n    }\n    if (t2 >= 0 && t2 <= 1) {\n      roots.push(t2);\n    }\n    if (t3 >= 0 && t3 <= 1) {\n      roots.push(t3);\n    }\n  }\n  return roots;\n}","map":{"version":3,"names":["sign","Math","x","isNaN","linearRoot","a","b","t","quadraticRoots","c","D","roots","push","rD","sqrt","t1","t2","cubicRoots","d","A","B","C","Q","R","third","S","pow","abs","T","Im","t_1","theta","acos","thirdA","twoSqrtQ","cos","PI","t3"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scene/polyRoots.js"],"sourcesContent":["// @ts-ignore Suppress tsc error: Property 'sign' does not exist on type 'Math'\nvar sign = Math.sign ? Math.sign : function (x) {\n    x = +x;\n    if (x === 0 || isNaN(x)) {\n        return x;\n    }\n    return x > 0 ? 1 : -1;\n};\n/**\n * Finds the roots of a parametric linear equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n */\nexport function linearRoot(a, b) {\n    var t = -b / a;\n    return (a !== 0 && t >= 0 && t <= 1) ? [t] : [];\n}\n/**\n * Finds the roots of a parametric quadratic equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n */\nexport function quadraticRoots(a, b, c) {\n    if (a === 0) {\n        return linearRoot(b, c);\n    }\n    var D = b * b - 4 * a * c; // The polynomial's discriminant.\n    var roots = [];\n    if (D === 0) { // A single real root.\n        var t = -b / (2 * a);\n        if (t >= 0 && t <= 1) {\n            roots.push(t);\n        }\n    }\n    else if (D > 0) { // A pair of distinct real roots.\n        var rD = Math.sqrt(D);\n        var t1 = (-b - rD) / (2 * a);\n        var t2 = (-b + rD) / (2 * a);\n        if (t1 >= 0 && t1 <= 1) {\n            roots.push(t1);\n        }\n        if (t2 >= 0 && t2 <= 1) {\n            roots.push(t2);\n        }\n    }\n    // else -> Complex roots.\n    return roots;\n}\n/**\n * Finds the roots of a parametric cubic equation in `t`,\n * where `t` lies in the interval of `[0,1]`.\n * Returns an array of parametric intersection locations along the cubic,\n * excluding out-of-bounds intersections (before or after the end point\n * or in the imaginary plane).\n * An adaptation of http://www.particleincell.com/blog/2013/cubic-line-intersection/\n */\nexport function cubicRoots(a, b, c, d) {\n    if (a === 0) {\n        return quadraticRoots(b, c, d);\n    }\n    var A = b / a;\n    var B = c / a;\n    var C = d / a;\n    var Q = (3 * B - A * A) / 9;\n    var R = (9 * A * B - 27 * C - 2 * A * A * A) / 54;\n    var D = Q * Q * Q + R * R; // The polynomial's discriminant.\n    var third = 1 / 3;\n    var roots = [];\n    if (D >= 0) { // Complex or duplicate roots.\n        var rD = Math.sqrt(D);\n        var S = sign(R + rD) * Math.pow(Math.abs(R + rD), third);\n        var T = sign(R - rD) * Math.pow(Math.abs(R - rD), third);\n        var Im = Math.abs(Math.sqrt(3) * (S - T) / 2); // Complex part of the root pair.\n        var t = -third * A + (S + T); // A real root.\n        if (t >= 0 && t <= 1) {\n            roots.push(t);\n        }\n        if (Im === 0) {\n            var t_1 = -third * A - (S + T) / 2; // The real part of a complex root.\n            if (t_1 >= 0 && t_1 <= 1) {\n                roots.push(t_1);\n            }\n        }\n    }\n    else { // Distinct real roots.\n        var theta = Math.acos(R / Math.sqrt(-Q * Q * Q));\n        var thirdA = third * A;\n        var twoSqrtQ = 2 * Math.sqrt(-Q);\n        var t1 = twoSqrtQ * Math.cos(third * theta) - thirdA;\n        var t2 = twoSqrtQ * Math.cos(third * (theta + 2 * Math.PI)) - thirdA;\n        var t3 = twoSqrtQ * Math.cos(third * (theta + 4 * Math.PI)) - thirdA;\n        if (t1 >= 0 && t1 <= 1) {\n            roots.push(t1);\n        }\n        if (t2 >= 0 && t2 <= 1) {\n            roots.push(t2);\n        }\n        if (t3 >= 0 && t3 <= 1) {\n            roots.push(t3);\n        }\n    }\n    return roots;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}