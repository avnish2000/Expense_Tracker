{"ast":null,"code":"/**\n * Maps a discrete domain to a continuous numeric range.\n * See https://github.com/d3/d3-scale#band-scales for more info.\n */\nvar BandScale = /** @class */function () {\n  function BandScale() {\n    /**\n     * Maps datum to its index in the {@link domain} array.\n     * Used to check for duplicate datums (not allowed).\n     */\n    this.index = new Map();\n    /**\n     * The output range values for datum at each index.\n     */\n    this.ordinalRange = [];\n    /**\n     * Contains unique datums only. Since `{}` is used in place of `Map`\n     * for IE11 compatibility, the datums are converted `toString` before\n     * the uniqueness check.\n     */\n    this._domain = [];\n    this._range = [0, 1];\n    this._bandwidth = 1;\n    /**\n     * The ratio of the range that is reserved for space between bands.\n     */\n    this._paddingInner = 0;\n    /**\n     * The ratio of the range that is reserved for space before the first\n     * and after the last band.\n     */\n    this._paddingOuter = 0;\n    this._round = false;\n    /**\n     * How the leftover range is distributed.\n     * `0.5` - equal distribution of space before the first and after the last band,\n     * with bands effectively centered within the range.\n     */\n    this._align = 0.5;\n  }\n  Object.defineProperty(BandScale.prototype, \"domain\", {\n    get: function () {\n      return this._domain;\n    },\n    set: function (values) {\n      var domain = this._domain;\n      domain.length = 0;\n      this.index = new Map();\n      var index = this.index;\n      // In case one wants to have duplicate domain values, for example, two 'Italy' categories,\n      // one should use objects rather than strings for domain values like so:\n      // { toString: () => 'Italy' }\n      // { toString: () => 'Italy' }\n      values.forEach(function (value) {\n        if (index.get(value) === undefined) {\n          index.set(value, domain.push(value) - 1);\n        }\n      });\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"range\", {\n    get: function () {\n      return this._range;\n    },\n    set: function (values) {\n      this._range[0] = values[0];\n      this._range[1] = values[1];\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BandScale.prototype.ticks = function () {\n    return this._domain;\n  };\n  BandScale.prototype.convert = function (d) {\n    var i = this.index.get(d);\n    if (i === undefined) {\n      return NaN;\n    }\n    var r = this.ordinalRange[i];\n    if (r === undefined) {\n      return NaN;\n    }\n    return r;\n  };\n  Object.defineProperty(BandScale.prototype, \"bandwidth\", {\n    get: function () {\n      return this._bandwidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"padding\", {\n    get: function () {\n      return this._paddingInner;\n    },\n    set: function (value) {\n      value = Math.max(0, Math.min(1, value));\n      this._paddingInner = value;\n      this._paddingOuter = value;\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"paddingInner\", {\n    get: function () {\n      return this._paddingInner;\n    },\n    set: function (value) {\n      this._paddingInner = Math.max(0, Math.min(1, value)); // [0, 1]\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"paddingOuter\", {\n    get: function () {\n      return this._paddingOuter;\n    },\n    set: function (value) {\n      this._paddingOuter = Math.max(0, Math.min(1, value)); // [0, 1]\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"round\", {\n    get: function () {\n      return this._round;\n    },\n    set: function (value) {\n      this._round = value;\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"align\", {\n    get: function () {\n      return this._align;\n    },\n    set: function (value) {\n      this._align = Math.max(0, Math.min(1, value)); // [0, 1]\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BandScale.prototype.rescale = function () {\n    var _a;\n    var n = this._domain.length;\n    if (!n) {\n      return;\n    }\n    var _b = this._range,\n      a = _b[0],\n      b = _b[1];\n    var reversed = b < a;\n    if (reversed) {\n      _a = [b, a], a = _a[0], b = _a[1];\n    }\n    var step = (b - a) / Math.max(1, n - this._paddingInner + this._paddingOuter * 2);\n    if (this._round) {\n      step = Math.floor(step);\n    }\n    a += (b - a - step * (n - this._paddingInner)) * this._align;\n    this._bandwidth = step * (1 - this._paddingInner);\n    if (this._round) {\n      a = Math.round(a);\n      this._bandwidth = Math.round(this._bandwidth);\n    }\n    var values = [];\n    for (var i = 0; i < n; i++) {\n      values.push(a + step * i);\n    }\n    this.ordinalRange = reversed ? values.reverse() : values;\n  };\n  return BandScale;\n}();\nexport { BandScale };","map":{"version":3,"names":["BandScale","index","Map","ordinalRange","_domain","_range","_bandwidth","_paddingInner","_paddingOuter","_round","_align","Object","defineProperty","prototype","get","set","values","domain","length","forEach","value","undefined","push","rescale","enumerable","configurable","ticks","convert","d","i","NaN","r","Math","max","min","_a","n","_b","a","b","reversed","step","floor","round","reverse"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scale/bandScale.js"],"sourcesContent":["/**\n * Maps a discrete domain to a continuous numeric range.\n * See https://github.com/d3/d3-scale#band-scales for more info.\n */\nvar BandScale = /** @class */ (function () {\n    function BandScale() {\n        /**\n         * Maps datum to its index in the {@link domain} array.\n         * Used to check for duplicate datums (not allowed).\n         */\n        this.index = new Map();\n        /**\n         * The output range values for datum at each index.\n         */\n        this.ordinalRange = [];\n        /**\n         * Contains unique datums only. Since `{}` is used in place of `Map`\n         * for IE11 compatibility, the datums are converted `toString` before\n         * the uniqueness check.\n         */\n        this._domain = [];\n        this._range = [0, 1];\n        this._bandwidth = 1;\n        /**\n         * The ratio of the range that is reserved for space between bands.\n         */\n        this._paddingInner = 0;\n        /**\n         * The ratio of the range that is reserved for space before the first\n         * and after the last band.\n         */\n        this._paddingOuter = 0;\n        this._round = false;\n        /**\n         * How the leftover range is distributed.\n         * `0.5` - equal distribution of space before the first and after the last band,\n         * with bands effectively centered within the range.\n         */\n        this._align = 0.5;\n    }\n    Object.defineProperty(BandScale.prototype, \"domain\", {\n        get: function () {\n            return this._domain;\n        },\n        set: function (values) {\n            var domain = this._domain;\n            domain.length = 0;\n            this.index = new Map();\n            var index = this.index;\n            // In case one wants to have duplicate domain values, for example, two 'Italy' categories,\n            // one should use objects rather than strings for domain values like so:\n            // { toString: () => 'Italy' }\n            // { toString: () => 'Italy' }\n            values.forEach(function (value) {\n                if (index.get(value) === undefined) {\n                    index.set(value, domain.push(value) - 1);\n                }\n            });\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"range\", {\n        get: function () {\n            return this._range;\n        },\n        set: function (values) {\n            this._range[0] = values[0];\n            this._range[1] = values[1];\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BandScale.prototype.ticks = function () {\n        return this._domain;\n    };\n    BandScale.prototype.convert = function (d) {\n        var i = this.index.get(d);\n        if (i === undefined) {\n            return NaN;\n        }\n        var r = this.ordinalRange[i];\n        if (r === undefined) {\n            return NaN;\n        }\n        return r;\n    };\n    Object.defineProperty(BandScale.prototype, \"bandwidth\", {\n        get: function () {\n            return this._bandwidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"padding\", {\n        get: function () {\n            return this._paddingInner;\n        },\n        set: function (value) {\n            value = Math.max(0, Math.min(1, value));\n            this._paddingInner = value;\n            this._paddingOuter = value;\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"paddingInner\", {\n        get: function () {\n            return this._paddingInner;\n        },\n        set: function (value) {\n            this._paddingInner = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"paddingOuter\", {\n        get: function () {\n            return this._paddingOuter;\n        },\n        set: function (value) {\n            this._paddingOuter = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"round\", {\n        get: function () {\n            return this._round;\n        },\n        set: function (value) {\n            this._round = value;\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"align\", {\n        get: function () {\n            return this._align;\n        },\n        set: function (value) {\n            this._align = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BandScale.prototype.rescale = function () {\n        var _a;\n        var n = this._domain.length;\n        if (!n) {\n            return;\n        }\n        var _b = this._range, a = _b[0], b = _b[1];\n        var reversed = b < a;\n        if (reversed) {\n            _a = [b, a], a = _a[0], b = _a[1];\n        }\n        var step = (b - a) / Math.max(1, n - this._paddingInner + this._paddingOuter * 2);\n        if (this._round) {\n            step = Math.floor(step);\n        }\n        a += (b - a - step * (n - this._paddingInner)) * this._align;\n        this._bandwidth = step * (1 - this._paddingInner);\n        if (this._round) {\n            a = Math.round(a);\n            this._bandwidth = Math.round(this._bandwidth);\n        }\n        var values = [];\n        for (var i = 0; i < n; i++) {\n            values.push(a + step * i);\n        }\n        this.ordinalRange = reversed ? values.reverse() : values;\n    };\n    return BandScale;\n}());\nexport { BandScale };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}