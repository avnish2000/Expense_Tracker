{"ast":null,"code":"var twoPi = Math.PI * 2;\n/**\n * Normalize the given angle to be in the [0, 2π) interval.\n * @param radians Angle in radians.\n */\nexport function normalizeAngle360(radians) {\n  radians %= twoPi;\n  radians += twoPi;\n  radians %= twoPi;\n  return radians;\n}\nexport function normalizeAngle360Inclusive(radians) {\n  radians %= twoPi;\n  radians += twoPi;\n  if (radians !== twoPi) {\n    radians %= twoPi;\n  }\n  return radians;\n}\n/**\n * Normalize the given angle to be in the [-π, π) interval.\n * @param radians Angle in radians.\n */\nexport function normalizeAngle180(radians) {\n  radians %= twoPi;\n  if (radians < -Math.PI) {\n    radians += twoPi;\n  } else if (radians >= Math.PI) {\n    radians -= twoPi;\n  }\n  return radians;\n}\nexport function toRadians(degrees) {\n  return degrees / 180 * Math.PI;\n}\nexport function toDegrees(radians) {\n  return radians / Math.PI * 180;\n}","map":{"version":3,"names":["twoPi","Math","PI","normalizeAngle360","radians","normalizeAngle360Inclusive","normalizeAngle180","toRadians","degrees","toDegrees"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/util/angle.js"],"sourcesContent":["var twoPi = Math.PI * 2;\n/**\n * Normalize the given angle to be in the [0, 2π) interval.\n * @param radians Angle in radians.\n */\nexport function normalizeAngle360(radians) {\n    radians %= twoPi;\n    radians += twoPi;\n    radians %= twoPi;\n    return radians;\n}\nexport function normalizeAngle360Inclusive(radians) {\n    radians %= twoPi;\n    radians += twoPi;\n    if (radians !== twoPi) {\n        radians %= twoPi;\n    }\n    return radians;\n}\n/**\n * Normalize the given angle to be in the [-π, π) interval.\n * @param radians Angle in radians.\n */\nexport function normalizeAngle180(radians) {\n    radians %= twoPi;\n    if (radians < -Math.PI) {\n        radians += twoPi;\n    }\n    else if (radians >= Math.PI) {\n        radians -= twoPi;\n    }\n    return radians;\n}\nexport function toRadians(degrees) {\n    return degrees / 180 * Math.PI;\n}\nexport function toDegrees(radians) {\n    return radians / Math.PI * 180;\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;AACvB;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiB,CAACC,OAAO,EAAE;EACvCA,OAAO,IAAIJ,KAAK;EAChBI,OAAO,IAAIJ,KAAK;EAChBI,OAAO,IAAIJ,KAAK;EAChB,OAAOI,OAAO;AAClB;AACA,OAAO,SAASC,0BAA0B,CAACD,OAAO,EAAE;EAChDA,OAAO,IAAIJ,KAAK;EAChBI,OAAO,IAAIJ,KAAK;EAChB,IAAII,OAAO,KAAKJ,KAAK,EAAE;IACnBI,OAAO,IAAIJ,KAAK;EACpB;EACA,OAAOI,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,iBAAiB,CAACF,OAAO,EAAE;EACvCA,OAAO,IAAIJ,KAAK;EAChB,IAAII,OAAO,GAAG,CAACH,IAAI,CAACC,EAAE,EAAE;IACpBE,OAAO,IAAIJ,KAAK;EACpB,CAAC,MACI,IAAII,OAAO,IAAIH,IAAI,CAACC,EAAE,EAAE;IACzBE,OAAO,IAAIJ,KAAK;EACpB;EACA,OAAOI,OAAO;AAClB;AACA,OAAO,SAASG,SAAS,CAACC,OAAO,EAAE;EAC/B,OAAOA,OAAO,GAAG,GAAG,GAAGP,IAAI,CAACC,EAAE;AAClC;AACA,OAAO,SAASO,SAAS,CAACL,OAAO,EAAE;EAC/B,OAAOA,OAAO,GAAGH,IAAI,CAACC,EAAE,GAAG,GAAG;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}