{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Shape } from \"./shape\";\nimport { chainObjects } from \"../../util/object\";\nimport { BBox } from \"../bbox\";\nvar Line = /** @class */function (_super) {\n  __extends(Line, _super);\n  function Line() {\n    var _this = _super.call(this) || this;\n    _this._x1 = 0;\n    _this._y1 = 0;\n    _this._x2 = 0;\n    _this._y2 = 0;\n    _this.restoreOwnStyles();\n    return _this;\n  }\n  Object.defineProperty(Line.prototype, \"x1\", {\n    get: function () {\n      // TODO: Investigate getter performance further in the context\n      //       of the scene graph.\n      //       In isolated benchmarks using a getter has the same\n      //       performance as a direct property access in Firefox 64.\n      //       But in Chrome 71 the getter is 60% slower than direct access.\n      //       Direct read is 4.5+ times slower in Chrome than it is in Firefox.\n      //       Property access and direct read have the same performance\n      //       in Safari 12, which is 2+ times faster than Firefox at this.\n      // https://jsperf.com/es5-getters-setters-versus-getter-setter-methods/18\n      // This is a know Chrome issue. They say it's not a regression, since\n      // the behavior is observed since M60, but jsperf.com history shows the\n      // 10x slowdown happened between Chrome 48 and Chrome 57.\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=908743\n      return this._x1;\n    },\n    set: function (value) {\n      if (this._x1 !== value) {\n        this._x1 = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Line.prototype, \"y1\", {\n    get: function () {\n      return this._y1;\n    },\n    set: function (value) {\n      if (this._y1 !== value) {\n        this._y1 = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Line.prototype, \"x2\", {\n    get: function () {\n      return this._x2;\n    },\n    set: function (value) {\n      if (this._x2 !== value) {\n        this._x2 = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Line.prototype, \"y2\", {\n    get: function () {\n      return this._y2;\n    },\n    set: function (value) {\n      if (this._y2 !== value) {\n        this._y2 = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Line.prototype.computeBBox = function () {\n    return new BBox(this.x1, this.y1, this.x2 - this.x1, this.y2 - this.y1);\n  };\n  Line.prototype.isPointInPath = function (x, y) {\n    return false;\n  };\n  Line.prototype.isPointInStroke = function (x, y) {\n    return false;\n  };\n  Line.prototype.render = function (ctx) {\n    if (this.dirtyTransform) {\n      this.computeTransformMatrix();\n    }\n    this.matrix.toContext(ctx);\n    var x1 = this.x1;\n    var y1 = this.y1;\n    var x2 = this.x2;\n    var y2 = this.y2;\n    // Align to the pixel grid if the line is strictly vertical\n    // or horizontal (but not both, i.e. a dot).\n    if (x1 === x2) {\n      var x = Math.round(x1) + Math.floor(this.strokeWidth) % 2 / 2;\n      x1 = x;\n      x2 = x;\n    } else if (y1 === y2) {\n      var y = Math.round(y1) + Math.floor(this.strokeWidth) % 2 / 2;\n      y1 = y;\n      y2 = y;\n    }\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    this.fillStroke(ctx);\n    this.dirty = false;\n  };\n  Line.className = 'Line';\n  Line.defaultStyles = chainObjects(Shape.defaultStyles, {\n    fill: undefined,\n    strokeWidth: 1\n  });\n  return Line;\n}(Shape);\nexport { Line };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Shape","chainObjects","BBox","Line","_super","_this","call","_x1","_y1","_x2","_y2","restoreOwnStyles","defineProperty","get","set","value","dirty","enumerable","configurable","computeBBox","x1","y1","x2","y2","isPointInPath","x","y","isPointInStroke","render","ctx","dirtyTransform","computeTransformMatrix","matrix","toContext","Math","round","floor","strokeWidth","beginPath","moveTo","lineTo","fillStroke","className","defaultStyles","fill","undefined"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scene/shape/line.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Shape } from \"./shape\";\nimport { chainObjects } from \"../../util/object\";\nimport { BBox } from \"../bbox\";\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        var _this = _super.call(this) || this;\n        _this._x1 = 0;\n        _this._y1 = 0;\n        _this._x2 = 0;\n        _this._y2 = 0;\n        _this.restoreOwnStyles();\n        return _this;\n    }\n    Object.defineProperty(Line.prototype, \"x1\", {\n        get: function () {\n            // TODO: Investigate getter performance further in the context\n            //       of the scene graph.\n            //       In isolated benchmarks using a getter has the same\n            //       performance as a direct property access in Firefox 64.\n            //       But in Chrome 71 the getter is 60% slower than direct access.\n            //       Direct read is 4.5+ times slower in Chrome than it is in Firefox.\n            //       Property access and direct read have the same performance\n            //       in Safari 12, which is 2+ times faster than Firefox at this.\n            // https://jsperf.com/es5-getters-setters-versus-getter-setter-methods/18\n            // This is a know Chrome issue. They say it's not a regression, since\n            // the behavior is observed since M60, but jsperf.com history shows the\n            // 10x slowdown happened between Chrome 48 and Chrome 57.\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=908743\n            return this._x1;\n        },\n        set: function (value) {\n            if (this._x1 !== value) {\n                this._x1 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"y1\", {\n        get: function () {\n            return this._y1;\n        },\n        set: function (value) {\n            if (this._y1 !== value) {\n                this._y1 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"x2\", {\n        get: function () {\n            return this._x2;\n        },\n        set: function (value) {\n            if (this._x2 !== value) {\n                this._x2 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"y2\", {\n        get: function () {\n            return this._y2;\n        },\n        set: function (value) {\n            if (this._y2 !== value) {\n                this._y2 = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Line.prototype.computeBBox = function () {\n        return new BBox(this.x1, this.y1, this.x2 - this.x1, this.y2 - this.y1);\n    };\n    Line.prototype.isPointInPath = function (x, y) {\n        return false;\n    };\n    Line.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Line.prototype.render = function (ctx) {\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        this.matrix.toContext(ctx);\n        var x1 = this.x1;\n        var y1 = this.y1;\n        var x2 = this.x2;\n        var y2 = this.y2;\n        // Align to the pixel grid if the line is strictly vertical\n        // or horizontal (but not both, i.e. a dot).\n        if (x1 === x2) {\n            var x = Math.round(x1) + Math.floor(this.strokeWidth) % 2 / 2;\n            x1 = x;\n            x2 = x;\n        }\n        else if (y1 === y2) {\n            var y = Math.round(y1) + Math.floor(this.strokeWidth) % 2 / 2;\n            y1 = y;\n            y2 = y;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        this.fillStroke(ctx);\n        this.dirty = false;\n    };\n    Line.className = 'Line';\n    Line.defaultStyles = chainObjects(Shape.defaultStyles, {\n        fill: undefined,\n        strokeWidth: 1\n    });\n    return Line;\n}(Shape));\nexport { Line };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}