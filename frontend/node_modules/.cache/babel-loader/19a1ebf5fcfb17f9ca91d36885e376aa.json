{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport ContinuousScale from \"./continuousScale\";\nimport timeMillisecond from \"../util/time/millisecond\";\nimport timeSecond from \"../util/time/second\";\nimport timeMinute from \"../util/time/minute\";\nimport timeHour from \"../util/time/hour\";\nimport timeDay from \"../util/time/day\";\nimport timeWeek from \"../util/time/week\";\nimport timeMonth from \"../util/time/month\";\nimport timeYear from \"../util/time/year\";\nimport { durationSecond, durationMinute, durationHour, durationDay, durationWeek, durationMonth, durationYear } from \"../util/time/duration\";\nimport { complexBisectRight } from \"../util/bisect\";\nimport { tickStep } from \"../util/ticks\";\nimport { locale } from \"../util/time/format/defaultLocale\";\n\nvar TimeScale =\n/** @class */\nfunction (_super) {\n  __extends(TimeScale, _super);\n\n  function TimeScale() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.year = timeYear;\n    _this.month = timeMonth;\n    _this.week = timeWeek;\n    _this.day = timeDay;\n    _this.hour = timeHour;\n    _this.minute = timeMinute;\n    _this.second = timeSecond;\n    _this.millisecond = timeMillisecond;\n    _this.format = locale.format;\n    /**\n     * Array of default tick intervals in the following format:\n     *\n     *     [\n     *         interval (unit of time),\n     *         number of units (step),\n     *         the length of that number of units in milliseconds\n     *     ]\n     */\n\n    _this.tickIntervals = [[_this.second, 1, durationSecond], [_this.second, 5, 5 * durationSecond], [_this.second, 15, 15 * durationSecond], [_this.second, 30, 30 * durationSecond], [_this.minute, 1, durationMinute], [_this.minute, 5, 5 * durationMinute], [_this.minute, 15, 15 * durationMinute], [_this.minute, 30, 30 * durationMinute], [_this.hour, 1, durationHour], [_this.hour, 3, 3 * durationHour], [_this.hour, 6, 6 * durationHour], [_this.hour, 12, 12 * durationHour], [_this.day, 1, durationDay], [_this.day, 2, 2 * durationDay], [_this.week, 1, durationWeek], [_this.month, 1, durationMonth], [_this.month, 3, 3 * durationMonth], [_this.year, 1, durationYear]];\n    _this.formatMillisecond = _this.format('.%L');\n    _this.formatSecond = _this.format(':%S');\n    _this.formatMinute = _this.format('%I:%M');\n    _this.formatHour = _this.format('%I %p');\n    _this.formatDay = _this.format('%a %d');\n    _this.formatWeek = _this.format('%b %d');\n    _this.formatMonth = _this.format('%B');\n    _this.formatYear = _this.format('%Y');\n    _this._domain = [new Date(2000, 0, 1), new Date(2000, 0, 2)];\n    return _this;\n  }\n\n  TimeScale.prototype.defaultTickFormat = function (date) {\n    return (this.second.floor(date) < date ? this.formatMillisecond : this.minute.floor(date) < date ? this.formatSecond : this.hour.floor(date) < date ? this.formatMinute : this.day.floor(date) < date ? this.formatHour : this.month.floor(date) < date ? this.week.floor(date) < date ? this.formatDay : this.formatWeek : this.year.floor(date) < date ? this.formatMonth : this.formatYear)(date);\n  };\n  /**\n   *\n   * @param interval If the `interval` is a number, it's interpreted as the desired tick count\n   * and the method tries to pick an appropriate interval automatically, based on the extent of the domain.\n   * If the `interval` is `undefined`, it defaults to `10`.\n   * If the `interval` is a time interval, simply use it.\n   * @param start The start time (timestamp).\n   * @param stop The end time (timestamp).\n   * @param step Number of intervals between ticks.\n   */\n\n\n  TimeScale.prototype.tickInterval = function (interval, start, stop, step) {\n    var _a;\n\n    if (interval === void 0) {\n      interval = 10;\n    }\n\n    if (typeof interval === 'number') {\n      var tickCount = interval;\n      var tickIntervals = this.tickIntervals;\n      var target = Math.abs(stop - start) / tickCount;\n      var i = complexBisectRight(tickIntervals, target, function (interval) {\n        return interval[2];\n      });\n\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, tickCount);\n        interval = this.year;\n      } else if (i) {\n        _a = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i], interval = _a[0], step = _a[1];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = this.millisecond;\n      }\n    }\n\n    return step == undefined ? interval : interval.every(step);\n  };\n\n  Object.defineProperty(TimeScale.prototype, \"domain\", {\n    get: function () {\n      return _super.prototype.getDomain.call(this).map(function (t) {\n        return new Date(t);\n      });\n    },\n    set: function (values) {\n      _super.prototype.setDomain.call(this, Array.prototype.map.call(values, function (t) {\n        return t instanceof Date ? +t : +new Date(+t);\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TimeScale.prototype.invert = function (y) {\n    return new Date(_super.prototype.invert.call(this, y));\n  };\n  /**\n   * Returns uniformly-spaced dates that represent the scale's domain.\n   * @param interval The desired tick count or a time interval object.\n   */\n\n\n  TimeScale.prototype.ticks = function (interval) {\n    if (interval === void 0) {\n      interval = 10;\n    }\n\n    var d = _super.prototype.getDomain.call(this);\n\n    var t0 = d[0];\n    var t1 = d[d.length - 1];\n    var reverse = t1 < t0;\n\n    if (reverse) {\n      var _ = t0;\n      t0 = t1;\n      t1 = _;\n    }\n\n    var t = this.tickInterval(interval, t0, t1);\n    var i = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\n    return reverse ? i.reverse() : i;\n  };\n  /**\n   * Returns a time format function suitable for displaying tick values.\n   * @param count Ignored. Used only to satisfy the {@link Scale} interface.\n   * @param specifier If the specifier string is provided, this method is equivalent to\n   * the {@link TimeLocaleObject.format} method.\n   * If no specifier is provided, this method returns the default time format function.\n   */\n\n\n  TimeScale.prototype.tickFormat = function (count, specifier) {\n    return specifier == undefined ? this.defaultTickFormat.bind(this) : this.format(specifier);\n  };\n  /**\n   * Extends the domain so that it starts and ends on nice round values.\n   * This method typically modifies the scaleâ€™s domain, and may only extend the bounds to the nearest round value.\n   * @param interval\n   */\n\n\n  TimeScale.prototype.nice = function (interval) {\n    if (interval === void 0) {\n      interval = 10;\n    }\n\n    var d = _super.prototype.getDomain.call(this);\n\n    var i = this.tickInterval(interval, d[0], d[d.length - 1]);\n\n    if (i) {\n      this.domain = this._nice(d, i);\n    }\n  };\n\n  TimeScale.prototype._nice = function (domain, interval) {\n    var _a, _b;\n\n    domain = domain.slice();\n    var i0 = 0;\n    var i1 = domain.length - 1;\n    var x0 = domain[i0];\n    var x1 = domain[i1];\n\n    if (x1 < x0) {\n      _a = [i1, i0], i0 = _a[0], i1 = _a[1];\n      _b = [x1, x0], x0 = _b[0], x1 = _b[1];\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  };\n\n  return TimeScale;\n}(ContinuousScale);\n\nexport { TimeScale };","map":{"version":3,"sources":["E:/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scale/timeScale.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ContinuousScale","timeMillisecond","timeSecond","timeMinute","timeHour","timeDay","timeWeek","timeMonth","timeYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","complexBisectRight","tickStep","locale","TimeScale","_super","_this","apply","arguments","year","month","week","day","hour","minute","second","millisecond","format","tickIntervals","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","_domain","Date","defaultTickFormat","date","floor","tickInterval","interval","start","stop","step","_a","tickCount","target","Math","abs","i","length","max","undefined","every","defineProperty","get","getDomain","call","map","t","set","values","setDomain","enumerable","configurable","invert","y","ticks","t0","t1","reverse","_","range","tickFormat","count","specifier","bind","nice","domain","_nice","_b","slice","i0","i1","x0","x1","ceil"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ContinuousScale from \"./continuousScale\";\nimport timeMillisecond from \"../util/time/millisecond\";\nimport timeSecond from \"../util/time/second\";\nimport timeMinute from \"../util/time/minute\";\nimport timeHour from \"../util/time/hour\";\nimport timeDay from \"../util/time/day\";\nimport timeWeek from \"../util/time/week\";\nimport timeMonth from \"../util/time/month\";\nimport timeYear from \"../util/time/year\";\nimport { durationSecond, durationMinute, durationHour, durationDay, durationWeek, durationMonth, durationYear } from \"../util/time/duration\";\nimport { complexBisectRight } from \"../util/bisect\";\nimport { tickStep } from \"../util/ticks\";\nimport { locale } from \"../util/time/format/defaultLocale\";\nvar TimeScale = /** @class */ (function (_super) {\n    __extends(TimeScale, _super);\n    function TimeScale() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.year = timeYear;\n        _this.month = timeMonth;\n        _this.week = timeWeek;\n        _this.day = timeDay;\n        _this.hour = timeHour;\n        _this.minute = timeMinute;\n        _this.second = timeSecond;\n        _this.millisecond = timeMillisecond;\n        _this.format = locale.format;\n        /**\n         * Array of default tick intervals in the following format:\n         *\n         *     [\n         *         interval (unit of time),\n         *         number of units (step),\n         *         the length of that number of units in milliseconds\n         *     ]\n         */\n        _this.tickIntervals = [\n            [_this.second, 1, durationSecond],\n            [_this.second, 5, 5 * durationSecond],\n            [_this.second, 15, 15 * durationSecond],\n            [_this.second, 30, 30 * durationSecond],\n            [_this.minute, 1, durationMinute],\n            [_this.minute, 5, 5 * durationMinute],\n            [_this.minute, 15, 15 * durationMinute],\n            [_this.minute, 30, 30 * durationMinute],\n            [_this.hour, 1, durationHour],\n            [_this.hour, 3, 3 * durationHour],\n            [_this.hour, 6, 6 * durationHour],\n            [_this.hour, 12, 12 * durationHour],\n            [_this.day, 1, durationDay],\n            [_this.day, 2, 2 * durationDay],\n            [_this.week, 1, durationWeek],\n            [_this.month, 1, durationMonth],\n            [_this.month, 3, 3 * durationMonth],\n            [_this.year, 1, durationYear]\n        ];\n        _this.formatMillisecond = _this.format('.%L');\n        _this.formatSecond = _this.format(':%S');\n        _this.formatMinute = _this.format('%I:%M');\n        _this.formatHour = _this.format('%I %p');\n        _this.formatDay = _this.format('%a %d');\n        _this.formatWeek = _this.format('%b %d');\n        _this.formatMonth = _this.format('%B');\n        _this.formatYear = _this.format('%Y');\n        _this._domain = [new Date(2000, 0, 1), new Date(2000, 0, 2)];\n        return _this;\n    }\n    TimeScale.prototype.defaultTickFormat = function (date) {\n        return (this.second.floor(date) < date\n            ? this.formatMillisecond\n            : this.minute.floor(date) < date\n                ? this.formatSecond\n                : this.hour.floor(date) < date\n                    ? this.formatMinute\n                    : this.day.floor(date) < date\n                        ? this.formatHour\n                        : this.month.floor(date) < date\n                            ? (this.week.floor(date) < date ? this.formatDay : this.formatWeek)\n                            : this.year.floor(date) < date\n                                ? this.formatMonth\n                                : this.formatYear)(date);\n    };\n    /**\n     *\n     * @param interval If the `interval` is a number, it's interpreted as the desired tick count\n     * and the method tries to pick an appropriate interval automatically, based on the extent of the domain.\n     * If the `interval` is `undefined`, it defaults to `10`.\n     * If the `interval` is a time interval, simply use it.\n     * @param start The start time (timestamp).\n     * @param stop The end time (timestamp).\n     * @param step Number of intervals between ticks.\n     */\n    TimeScale.prototype.tickInterval = function (interval, start, stop, step) {\n        var _a;\n        if (interval === void 0) { interval = 10; }\n        if (typeof interval === 'number') {\n            var tickCount = interval;\n            var tickIntervals = this.tickIntervals;\n            var target = Math.abs(stop - start) / tickCount;\n            var i = complexBisectRight(tickIntervals, target, function (interval) { return interval[2]; });\n            if (i === tickIntervals.length) {\n                step = tickStep(start / durationYear, stop / durationYear, tickCount);\n                interval = this.year;\n            }\n            else if (i) {\n                _a = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i], interval = _a[0], step = _a[1];\n            }\n            else {\n                step = Math.max(tickStep(start, stop, interval), 1);\n                interval = this.millisecond;\n            }\n        }\n        return step == undefined ? interval : interval.every(step);\n    };\n    Object.defineProperty(TimeScale.prototype, \"domain\", {\n        get: function () {\n            return _super.prototype.getDomain.call(this).map(function (t) { return new Date(t); });\n        },\n        set: function (values) {\n            _super.prototype.setDomain.call(this, Array.prototype.map.call(values, function (t) { return t instanceof Date ? +t : +new Date(+t); }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeScale.prototype.invert = function (y) {\n        return new Date(_super.prototype.invert.call(this, y));\n    };\n    /**\n     * Returns uniformly-spaced dates that represent the scale's domain.\n     * @param interval The desired tick count or a time interval object.\n     */\n    TimeScale.prototype.ticks = function (interval) {\n        if (interval === void 0) { interval = 10; }\n        var d = _super.prototype.getDomain.call(this);\n        var t0 = d[0];\n        var t1 = d[d.length - 1];\n        var reverse = t1 < t0;\n        if (reverse) {\n            var _ = t0;\n            t0 = t1;\n            t1 = _;\n        }\n        var t = this.tickInterval(interval, t0, t1);\n        var i = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n        return reverse ? i.reverse() : i;\n    };\n    /**\n     * Returns a time format function suitable for displaying tick values.\n     * @param count Ignored. Used only to satisfy the {@link Scale} interface.\n     * @param specifier If the specifier string is provided, this method is equivalent to\n     * the {@link TimeLocaleObject.format} method.\n     * If no specifier is provided, this method returns the default time format function.\n     */\n    TimeScale.prototype.tickFormat = function (count, specifier) {\n        return specifier == undefined ? this.defaultTickFormat.bind(this) : this.format(specifier);\n    };\n    /**\n     * Extends the domain so that it starts and ends on nice round values.\n     * This method typically modifies the scaleâ€™s domain, and may only extend the bounds to the nearest round value.\n     * @param interval\n     */\n    TimeScale.prototype.nice = function (interval) {\n        if (interval === void 0) { interval = 10; }\n        var d = _super.prototype.getDomain.call(this);\n        var i = this.tickInterval(interval, d[0], d[d.length - 1]);\n        if (i) {\n            this.domain = this._nice(d, i);\n        }\n    };\n    TimeScale.prototype._nice = function (domain, interval) {\n        var _a, _b;\n        domain = domain.slice();\n        var i0 = 0;\n        var i1 = domain.length - 1;\n        var x0 = domain[i0];\n        var x1 = domain[i1];\n        if (x1 < x0) {\n            _a = [i1, i0], i0 = _a[0], i1 = _a[1];\n            _b = [x1, x0], x0 = _b[0], x1 = _b[1];\n        }\n        domain[i0] = interval.floor(x0);\n        domain[i1] = interval.ceil(x1);\n        return domain;\n    };\n    return TimeScale;\n}(ContinuousScale));\nexport { TimeScale };\n"]},"metadata":{},"sourceType":"module"}