{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { Path } from \"../../../scene/shape/path\";\nimport { CartesianSeries, CartesianSeriesMarker } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { getMarker } from \"../../marker/util\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { findLargestMinMax, findMinMax } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nimport { interpolate } from \"../../../util/string\";\nvar AreaSeries = /** @class */function (_super) {\n  __extends(AreaSeries, _super);\n  function AreaSeries() {\n    var _this = _super.call(this) || this;\n    _this.areaGroup = _this.group.appendChild(new Group());\n    _this.strokeGroup = _this.group.appendChild(new Group());\n    _this.markerGroup = _this.group.appendChild(new Group());\n    _this.areaSelection = Selection.select(_this.areaGroup).selectAll();\n    _this.strokeSelection = Selection.select(_this.strokeGroup).selectAll();\n    _this.markerSelection = Selection.select(_this.markerGroup).selectAll();\n    _this.markerSelectionData = [];\n    /**\n     * The assumption is that the values will be reset (to `true`)\n     * in the {@link yKeys} setter.\n     */\n    _this.seriesItemEnabled = new Map();\n    _this.xData = [];\n    _this.yData = [];\n    _this.yDomain = [];\n    _this.directionKeys = {\n      x: ['xKey'],\n      y: ['yKeys']\n    };\n    _this.marker = new CartesianSeriesMarker();\n    _this.fills = ['#c16068', '#a2bf8a', '#ebcc87', '#80a0c3', '#b58dae', '#85c0d1'];\n    _this.strokes = ['#874349', '#718661', '#a48f5f', '#5a7088', '#7f637a', '#5d8692'];\n    _this.fillOpacity = 1;\n    _this.strokeOpacity = 1;\n    _this.lineDash = undefined;\n    _this.lineDashOffset = 0;\n    _this._xKey = '';\n    _this.xName = '';\n    _this._yKeys = [];\n    _this.yNames = [];\n    _this.strokeWidth = 2;\n    _this.highlightStyle = {\n      fill: 'yellow'\n    };\n    _this.addEventListener('update', _this.update);\n    _this.marker.enabled = false;\n    _this.marker.addPropertyListener('shape', _this.onMarkerShapeChange, _this);\n    _this.marker.addEventListener('change', _this.update, _this);\n    return _this;\n  }\n  AreaSeries.prototype.onMarkerShapeChange = function () {\n    this.markerSelection = this.markerSelection.setData([]);\n    this.markerSelection.exit.remove();\n    this.update();\n    this.fireEvent({\n      type: 'legendChange'\n    });\n  };\n  Object.defineProperty(AreaSeries.prototype, \"xKey\", {\n    get: function () {\n      return this._xKey;\n    },\n    set: function (value) {\n      if (this._xKey !== value) {\n        this._xKey = value;\n        this.xData = [];\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AreaSeries.prototype, \"yKeys\", {\n    get: function () {\n      return this._yKeys;\n    },\n    set: function (values) {\n      if (!equal(this._yKeys, values)) {\n        this._yKeys = values;\n        this.yData = [];\n        var seriesItemEnabled_1 = this.seriesItemEnabled;\n        seriesItemEnabled_1.clear();\n        values.forEach(function (key) {\n          return seriesItemEnabled_1.set(key, true);\n        });\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  AreaSeries.prototype.setColors = function (fills, strokes) {\n    this.fills = fills;\n    this.strokes = strokes;\n  };\n  Object.defineProperty(AreaSeries.prototype, \"normalizedTo\", {\n    get: function () {\n      return this._normalizedTo;\n    },\n    set: function (value) {\n      var absValue = value ? Math.abs(value) : undefined;\n      if (this._normalizedTo !== absValue) {\n        this._normalizedTo = absValue;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  AreaSeries.prototype.onHighlightChange = function () {\n    this.updateMarkerNodes();\n  };\n  AreaSeries.prototype.processData = function () {\n    var _a = this,\n      xKey = _a.xKey,\n      yKeys = _a.yKeys,\n      seriesItemEnabled = _a.seriesItemEnabled;\n    var data = xKey && yKeys.length && this.data ? this.data : [];\n    // if (!(chart && chart.xAxis && chart.yAxis)) {\n    //     return false;\n    // }\n    // If the data is an array of rows like so:\n    //\n    // [{\n    //   xKy: 'Jan',\n    //   yKey1: 5,\n    //   yKey2: 7,\n    //   yKey3: -9,\n    // }, {\n    //   xKey: 'Feb',\n    //   yKey1: 10,\n    //   yKey2: -15,\n    //   yKey3: 20\n    // }]\n    //\n    var keysFound = true; // only warn once\n    this.xData = data.map(function (datum) {\n      if (keysFound && !(xKey in datum)) {\n        keysFound = false;\n        console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n      }\n      return datum[xKey];\n    });\n    this.yData = data.map(function (datum) {\n      return yKeys.map(function (yKey) {\n        if (keysFound && !(yKey in datum)) {\n          keysFound = false;\n          console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n        }\n        var value = datum[yKey];\n        return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n      });\n    });\n    // xData: ['Jan', 'Feb']\n    //\n    // yData: [\n    //   [5, 7, -9],\n    //   [10, -15, 20]\n    // ]\n    var _b = this,\n      yData = _b.yData,\n      normalizedTo = _b.normalizedTo;\n    var yMinMax = yData.map(function (values) {\n      return findMinMax(values);\n    }); // used for normalization\n    var yLargestMinMax = findLargestMinMax(yMinMax);\n    var yMin;\n    var yMax;\n    if (normalizedTo && isFinite(normalizedTo)) {\n      yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n      yMax = normalizedTo;\n      yData.forEach(function (stack, i) {\n        return stack.forEach(function (y, j) {\n          if (y < 0) {\n            stack[j] = -y / yMinMax[i].min * normalizedTo;\n          } else {\n            stack[j] = y / yMinMax[i].max * normalizedTo;\n          }\n        });\n      });\n    } else {\n      yMin = yLargestMinMax.min;\n      yMax = yLargestMinMax.max;\n    }\n    if (yMin === 0 && yMax === 0) {\n      yMax = 1;\n    }\n    this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n    this.fireEvent({\n      type: 'dataProcessed'\n    });\n    return true;\n  };\n  AreaSeries.prototype.getDomain = function (direction) {\n    if (direction === ChartAxisDirection.X) {\n      return this.xData;\n    } else {\n      return this.yDomain;\n    }\n  };\n  AreaSeries.prototype.update = function () {\n    var _a = this,\n      visible = _a.visible,\n      chart = _a.chart,\n      xAxis = _a.xAxis,\n      yAxis = _a.yAxis,\n      xData = _a.xData,\n      yData = _a.yData;\n    this.group.visible = visible && !!(xData.length && yData.length);\n    if (!xAxis || !yAxis || !visible || !chart || chart.layoutPending || chart.dataPending || !xData.length || !yData.length) {\n      return;\n    }\n    var selectionData = this.generateSelectionData();\n    if (!selectionData) {\n      return;\n    }\n    var areaSelectionData = selectionData.areaSelectionData,\n      markerSelectionData = selectionData.markerSelectionData;\n    this.updateAreaSelection(areaSelectionData);\n    this.updateStrokeSelection(areaSelectionData);\n    this.updateMarkerSelection(markerSelectionData);\n    this.updateMarkerNodes();\n    this.markerSelectionData = markerSelectionData;\n  };\n  AreaSeries.prototype.generateSelectionData = function () {\n    var _this = this;\n    if (!this.data) {\n      return;\n    }\n    var _a = this,\n      yKeys = _a.yKeys,\n      data = _a.data,\n      xData = _a.xData,\n      yData = _a.yData,\n      marker = _a.marker,\n      fills = _a.fills,\n      strokes = _a.strokes,\n      xScale = _a.xAxis.scale,\n      yScale = _a.yAxis.scale;\n    var xOffset = (xScale.bandwidth || 0) / 2;\n    var yOffset = (yScale.bandwidth || 0) / 2;\n    var areaSelectionData = [];\n    var markerSelectionData = [];\n    var last = xData.length * 2 - 1;\n    xData.forEach(function (xDatum, i) {\n      var yDatum = yData[i];\n      var seriesDatum = data[i];\n      var x = xScale.convert(xDatum) + xOffset;\n      var prevMin = 0;\n      var prevMax = 0;\n      yDatum.forEach(function (curr, j) {\n        var prev = curr < 0 ? prevMin : prevMax;\n        var y = yScale.convert(prev + curr) + yOffset;\n        var yKey = yKeys[j];\n        var yValue = seriesDatum[yKey];\n        if (marker) {\n          markerSelectionData.push({\n            series: _this,\n            seriesDatum: seriesDatum,\n            yValue: yValue,\n            yKey: yKey,\n            point: {\n              x: x,\n              y: y\n            },\n            fill: fills[j % fills.length],\n            stroke: strokes[j % strokes.length]\n          });\n        }\n        var areaDatum = areaSelectionData[j] || (areaSelectionData[j] = {\n          yKey: yKey,\n          points: []\n        });\n        var areaPoints = areaDatum.points;\n        areaPoints[i] = {\n          x: x,\n          y: y\n        };\n        areaPoints[last - i] = {\n          x: x,\n          y: yScale.convert(prev) + yOffset\n        }; // bottom y\n        if (curr < 0) {\n          prevMin += curr;\n        } else {\n          prevMax += curr;\n        }\n      });\n    });\n    return {\n      areaSelectionData: areaSelectionData,\n      markerSelectionData: markerSelectionData\n    };\n  };\n  AreaSeries.prototype.updateAreaSelection = function (areaSelectionData) {\n    var _this = this;\n    var _a = this,\n      fills = _a.fills,\n      fillOpacity = _a.fillOpacity,\n      strokes = _a.strokes,\n      strokeOpacity = _a.strokeOpacity,\n      strokeWidth = _a.strokeWidth,\n      seriesItemEnabled = _a.seriesItemEnabled,\n      shadow = _a.shadow;\n    var updateAreas = this.areaSelection.setData(areaSelectionData);\n    updateAreas.exit.remove();\n    var enterAreas = updateAreas.enter.append(Path).each(function (path) {\n      path.lineJoin = 'round';\n      path.stroke = undefined;\n      path.pointerEvents = PointerEvents.None;\n    });\n    var areaSelection = updateAreas.merge(enterAreas);\n    areaSelection.each(function (shape, datum, index) {\n      var path = shape.path;\n      shape.fill = fills[index % fills.length];\n      shape.fillOpacity = fillOpacity;\n      shape.stroke = strokes[index % strokes.length];\n      shape.strokeOpacity = strokeOpacity;\n      shape.strokeWidth = strokeWidth;\n      shape.lineDash = _this.lineDash;\n      shape.lineDashOffset = _this.lineDashOffset;\n      shape.fillShadow = shadow;\n      shape.visible = !!seriesItemEnabled.get(datum.yKey);\n      path.clear();\n      var points = datum.points;\n      points.forEach(function (_a, i) {\n        var x = _a.x,\n          y = _a.y;\n        if (i > 0) {\n          path.lineTo(x, y);\n        } else {\n          path.moveTo(x, y);\n        }\n      });\n      path.closePath();\n    });\n    this.areaSelection = areaSelection;\n  };\n  AreaSeries.prototype.updateStrokeSelection = function (areaSelectionData) {\n    var _this = this;\n    if (!this.data) {\n      return;\n    }\n    var _a = this,\n      strokes = _a.strokes,\n      strokeWidth = _a.strokeWidth,\n      strokeOpacity = _a.strokeOpacity,\n      data = _a.data,\n      seriesItemEnabled = _a.seriesItemEnabled;\n    var updateStrokes = this.strokeSelection.setData(areaSelectionData);\n    updateStrokes.exit.remove();\n    var enterStrokes = updateStrokes.enter.append(Path).each(function (path) {\n      path.fill = undefined;\n      path.lineJoin = path.lineCap = 'round';\n      path.pointerEvents = PointerEvents.None;\n    });\n    var strokeSelection = updateStrokes.merge(enterStrokes);\n    strokeSelection.each(function (shape, datum, index) {\n      var path = shape.path;\n      shape.stroke = strokes[index % strokes.length];\n      shape.strokeWidth = strokeWidth;\n      shape.visible = !!seriesItemEnabled.get(datum.yKey);\n      shape.strokeOpacity = strokeOpacity;\n      shape.lineDash = _this.lineDash;\n      shape.lineDashOffset = _this.lineDashOffset;\n      path.clear();\n      var points = datum.points;\n      // The stroke doesn't go all the way around the fill, only on top,\n      // that's why we iterate until `data.length` (rather than `points.length`) and stop.\n      for (var i = 0; i < data.length; i++) {\n        var _a = points[i],\n          x = _a.x,\n          y = _a.y;\n        if (i > 0) {\n          path.lineTo(x, y);\n        } else {\n          path.moveTo(x, y);\n        }\n      }\n    });\n    this.strokeSelection = strokeSelection;\n  };\n  AreaSeries.prototype.updateMarkerSelection = function (markerSelectionData) {\n    var marker = this.marker;\n    var data = marker.shape ? markerSelectionData : [];\n    var MarkerShape = getMarker(marker.shape);\n    var updateMarkers = this.markerSelection.setData(data);\n    updateMarkers.exit.remove();\n    var enterMarkers = updateMarkers.enter.append(MarkerShape);\n    this.markerSelection = updateMarkers.merge(enterMarkers);\n  };\n  AreaSeries.prototype.updateMarkerNodes = function () {\n    if (!this.chart) {\n      return;\n    }\n    var marker = this.marker;\n    var markerFormatter = marker.formatter;\n    var markerStrokeWidth = marker.strokeWidth !== undefined ? marker.strokeWidth : this.strokeWidth;\n    var markerSize = marker.size;\n    var _a = this,\n      xKey = _a.xKey,\n      seriesItemEnabled = _a.seriesItemEnabled;\n    var highlightedDatum = this.chart.highlightedDatum;\n    var _b = this.highlightStyle,\n      highlightFill = _b.fill,\n      highlightStroke = _b.stroke;\n    this.markerSelection.each(function (node, datum) {\n      var highlighted = datum === highlightedDatum;\n      var markerFill = highlighted && highlightFill !== undefined ? highlightFill : marker.fill || datum.fill;\n      var markerStroke = highlighted && highlightStroke !== undefined ? highlightStroke : marker.stroke || datum.stroke;\n      var markerFormat = undefined;\n      if (markerFormatter) {\n        markerFormat = markerFormatter({\n          datum: datum.seriesDatum,\n          xKey: xKey,\n          yKey: datum.yKey,\n          fill: markerFill,\n          stroke: markerStroke,\n          strokeWidth: markerStrokeWidth,\n          size: markerSize,\n          highlighted: highlighted\n        });\n      }\n      node.fill = markerFormat && markerFormat.fill || markerFill;\n      node.stroke = markerFormat && markerFormat.stroke || markerStroke;\n      node.strokeWidth = markerFormat && markerFormat.strokeWidth !== undefined ? markerFormat.strokeWidth : markerStrokeWidth;\n      node.size = markerFormat && markerFormat.size !== undefined ? markerFormat.size : markerSize;\n      node.translationX = datum.point.x;\n      node.translationY = datum.point.y;\n      node.visible = marker.enabled && node.size > 0 && !!seriesItemEnabled.get(datum.yKey);\n    });\n  };\n  AreaSeries.prototype.getNodeData = function () {\n    return this.markerSelectionData;\n  };\n  AreaSeries.prototype.fireNodeClickEvent = function (datum) {\n    this.fireEvent({\n      type: 'nodeClick',\n      series: this,\n      datum: datum.seriesDatum,\n      xKey: this.xKey,\n      yKey: datum.yKey\n    });\n  };\n  AreaSeries.prototype.getTooltipHtml = function (nodeDatum) {\n    var xKey = this.xKey;\n    var yKey = nodeDatum.yKey;\n    if (!xKey || !yKey) {\n      return '';\n    }\n    var _a = this,\n      xName = _a.xName,\n      yKeys = _a.yKeys,\n      yNames = _a.yNames,\n      fills = _a.fills,\n      tooltipFormat = _a.tooltipFormat,\n      tooltipRenderer = _a.tooltipRenderer;\n    var datum = nodeDatum.seriesDatum;\n    var xValue = datum[xKey];\n    var yValue = datum[yKey];\n    var yKeyIndex = yKeys.indexOf(yKey);\n    var yName = yNames[yKeyIndex];\n    var color = fills[yKeyIndex % fills.length];\n    var xString = typeof xValue === 'number' ? toFixed(xValue) : String(xValue);\n    var yString = typeof yValue === 'number' ? toFixed(yValue) : String(yValue);\n    var title = yName;\n    var content = xString + ': ' + yString;\n    var defaults = {\n      title: title,\n      titleBackgroundColor: color,\n      content: content\n    };\n    if (tooltipFormat || tooltipRenderer) {\n      var params = {\n        datum: datum,\n        xKey: xKey,\n        xName: xName,\n        xValue: xValue,\n        yKey: yKey,\n        yValue: yValue,\n        yName: yName,\n        color: color\n      };\n      if (tooltipFormat) {\n        return toTooltipHtml({\n          content: interpolate(tooltipFormat, params)\n        }, defaults);\n      }\n      if (tooltipRenderer) {\n        return toTooltipHtml(tooltipRenderer(params), defaults);\n      }\n    }\n    return toTooltipHtml(defaults);\n  };\n  AreaSeries.prototype.listSeriesItems = function (legendData) {\n    var _a = this,\n      data = _a.data,\n      id = _a.id,\n      xKey = _a.xKey,\n      yKeys = _a.yKeys,\n      yNames = _a.yNames,\n      seriesItemEnabled = _a.seriesItemEnabled,\n      marker = _a.marker,\n      fills = _a.fills,\n      strokes = _a.strokes,\n      fillOpacity = _a.fillOpacity,\n      strokeOpacity = _a.strokeOpacity;\n    if (data && data.length && xKey && yKeys.length) {\n      yKeys.forEach(function (yKey, index) {\n        legendData.push({\n          id: id,\n          itemId: yKey,\n          enabled: seriesItemEnabled.get(yKey) || false,\n          label: {\n            text: yNames[index] || yKeys[index]\n          },\n          marker: {\n            shape: marker.shape,\n            fill: marker.fill || fills[index % fills.length],\n            stroke: marker.stroke || strokes[index % strokes.length],\n            fillOpacity: fillOpacity,\n            strokeOpacity: strokeOpacity\n          }\n        });\n      });\n    }\n  };\n  AreaSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n    this.seriesItemEnabled.set(itemId, enabled);\n    this.scheduleData();\n  };\n  AreaSeries.className = 'AreaSeries';\n  AreaSeries.type = 'area';\n  __decorate([reactive('dataChange')], AreaSeries.prototype, \"fills\", void 0);\n  __decorate([reactive('dataChange')], AreaSeries.prototype, \"strokes\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"fillOpacity\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"strokeOpacity\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"lineDash\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"lineDashOffset\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"xName\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"yNames\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"strokeWidth\", void 0);\n  __decorate([reactive('update')], AreaSeries.prototype, \"shadow\", void 0);\n  return AreaSeries;\n}(CartesianSeries);\nexport { AreaSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Group","Selection","PointerEvents","Path","CartesianSeries","CartesianSeriesMarker","ChartAxisDirection","getMarker","toTooltipHtml","findLargestMinMax","findMinMax","toFixed","equal","reactive","interpolate","AreaSeries","_super","_this","call","areaGroup","group","appendChild","strokeGroup","markerGroup","areaSelection","select","selectAll","strokeSelection","markerSelection","markerSelectionData","seriesItemEnabled","Map","xData","yData","yDomain","directionKeys","x","y","marker","fills","strokes","fillOpacity","strokeOpacity","lineDash","undefined","lineDashOffset","_xKey","xName","_yKeys","yNames","strokeWidth","highlightStyle","fill","addEventListener","update","enabled","addPropertyListener","onMarkerShapeChange","setData","exit","remove","fireEvent","type","get","set","value","scheduleData","enumerable","configurable","values","seriesItemEnabled_1","clear","forEach","setColors","_normalizedTo","absValue","Math","abs","onHighlightChange","updateMarkerNodes","processData","_a","xKey","yKeys","data","keysFound","map","datum","console","warn","yKey","isFinite","_b","normalizedTo","yMinMax","yLargestMinMax","yMin","yMax","min","stack","j","max","fixNumericExtent","getDomain","direction","X","visible","chart","xAxis","yAxis","layoutPending","dataPending","selectionData","generateSelectionData","areaSelectionData","updateAreaSelection","updateStrokeSelection","updateMarkerSelection","xScale","scale","yScale","xOffset","bandwidth","yOffset","last","xDatum","yDatum","seriesDatum","convert","prevMin","prevMax","curr","prev","yValue","push","series","point","stroke","areaDatum","points","areaPoints","shadow","updateAreas","enterAreas","enter","append","each","path","lineJoin","pointerEvents","None","merge","shape","index","fillShadow","lineTo","moveTo","closePath","updateStrokes","enterStrokes","lineCap","MarkerShape","updateMarkers","enterMarkers","markerFormatter","formatter","markerStrokeWidth","markerSize","size","highlightedDatum","highlightFill","highlightStroke","node","highlighted","markerFill","markerStroke","markerFormat","translationX","translationY","getNodeData","fireNodeClickEvent","getTooltipHtml","nodeDatum","tooltipFormat","tooltipRenderer","xValue","yKeyIndex","indexOf","yName","color","xString","String","yString","title","content","defaults","titleBackgroundColor","params","listSeriesItems","legendData","id","itemId","label","text","toggleSeriesItem","className"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/chart/series/cartesian/areaSeries.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { Path } from \"../../../scene/shape/path\";\nimport { CartesianSeries, CartesianSeriesMarker } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { getMarker } from \"../../marker/util\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { findLargestMinMax, findMinMax } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nimport { interpolate } from \"../../../util/string\";\nvar AreaSeries = /** @class */ (function (_super) {\n    __extends(AreaSeries, _super);\n    function AreaSeries() {\n        var _this = _super.call(this) || this;\n        _this.areaGroup = _this.group.appendChild(new Group);\n        _this.strokeGroup = _this.group.appendChild(new Group);\n        _this.markerGroup = _this.group.appendChild(new Group);\n        _this.areaSelection = Selection.select(_this.areaGroup).selectAll();\n        _this.strokeSelection = Selection.select(_this.strokeGroup).selectAll();\n        _this.markerSelection = Selection.select(_this.markerGroup).selectAll();\n        _this.markerSelectionData = [];\n        /**\n         * The assumption is that the values will be reset (to `true`)\n         * in the {@link yKeys} setter.\n         */\n        _this.seriesItemEnabled = new Map();\n        _this.xData = [];\n        _this.yData = [];\n        _this.yDomain = [];\n        _this.directionKeys = {\n            x: ['xKey'],\n            y: ['yKeys']\n        };\n        _this.marker = new CartesianSeriesMarker();\n        _this.fills = [\n            '#c16068',\n            '#a2bf8a',\n            '#ebcc87',\n            '#80a0c3',\n            '#b58dae',\n            '#85c0d1'\n        ];\n        _this.strokes = [\n            '#874349',\n            '#718661',\n            '#a48f5f',\n            '#5a7088',\n            '#7f637a',\n            '#5d8692'\n        ];\n        _this.fillOpacity = 1;\n        _this.strokeOpacity = 1;\n        _this.lineDash = undefined;\n        _this.lineDashOffset = 0;\n        _this._xKey = '';\n        _this.xName = '';\n        _this._yKeys = [];\n        _this.yNames = [];\n        _this.strokeWidth = 2;\n        _this.highlightStyle = { fill: 'yellow' };\n        _this.addEventListener('update', _this.update);\n        _this.marker.enabled = false;\n        _this.marker.addPropertyListener('shape', _this.onMarkerShapeChange, _this);\n        _this.marker.addEventListener('change', _this.update, _this);\n        return _this;\n    }\n    AreaSeries.prototype.onMarkerShapeChange = function () {\n        this.markerSelection = this.markerSelection.setData([]);\n        this.markerSelection.exit.remove();\n        this.update();\n        this.fireEvent({ type: 'legendChange' });\n    };\n    Object.defineProperty(AreaSeries.prototype, \"xKey\", {\n        get: function () {\n            return this._xKey;\n        },\n        set: function (value) {\n            if (this._xKey !== value) {\n                this._xKey = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AreaSeries.prototype, \"yKeys\", {\n        get: function () {\n            return this._yKeys;\n        },\n        set: function (values) {\n            if (!equal(this._yKeys, values)) {\n                this._yKeys = values;\n                this.yData = [];\n                var seriesItemEnabled_1 = this.seriesItemEnabled;\n                seriesItemEnabled_1.clear();\n                values.forEach(function (key) { return seriesItemEnabled_1.set(key, true); });\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AreaSeries.prototype.setColors = function (fills, strokes) {\n        this.fills = fills;\n        this.strokes = strokes;\n    };\n    Object.defineProperty(AreaSeries.prototype, \"normalizedTo\", {\n        get: function () {\n            return this._normalizedTo;\n        },\n        set: function (value) {\n            var absValue = value ? Math.abs(value) : undefined;\n            if (this._normalizedTo !== absValue) {\n                this._normalizedTo = absValue;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AreaSeries.prototype.onHighlightChange = function () {\n        this.updateMarkerNodes();\n    };\n    AreaSeries.prototype.processData = function () {\n        var _a = this, xKey = _a.xKey, yKeys = _a.yKeys, seriesItemEnabled = _a.seriesItemEnabled;\n        var data = xKey && yKeys.length && this.data ? this.data : [];\n        // if (!(chart && chart.xAxis && chart.yAxis)) {\n        //     return false;\n        // }\n        // If the data is an array of rows like so:\n        //\n        // [{\n        //   xKy: 'Jan',\n        //   yKey1: 5,\n        //   yKey2: 7,\n        //   yKey3: -9,\n        // }, {\n        //   xKey: 'Feb',\n        //   yKey1: 10,\n        //   yKey2: -15,\n        //   yKey3: 20\n        // }]\n        //\n        var keysFound = true; // only warn once\n        this.xData = data.map(function (datum) {\n            if (keysFound && !(xKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n            }\n            return datum[xKey];\n        });\n        this.yData = data.map(function (datum) { return yKeys.map(function (yKey) {\n            if (keysFound && !(yKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n            }\n            var value = datum[yKey];\n            return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n        }); });\n        // xData: ['Jan', 'Feb']\n        //\n        // yData: [\n        //   [5, 7, -9],\n        //   [10, -15, 20]\n        // ]\n        var _b = this, yData = _b.yData, normalizedTo = _b.normalizedTo;\n        var yMinMax = yData.map(function (values) { return findMinMax(values); }); // used for normalization\n        var yLargestMinMax = findLargestMinMax(yMinMax);\n        var yMin;\n        var yMax;\n        if (normalizedTo && isFinite(normalizedTo)) {\n            yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n            yMax = normalizedTo;\n            yData.forEach(function (stack, i) { return stack.forEach(function (y, j) {\n                if (y < 0) {\n                    stack[j] = -y / yMinMax[i].min * normalizedTo;\n                }\n                else {\n                    stack[j] = y / yMinMax[i].max * normalizedTo;\n                }\n            }); });\n        }\n        else {\n            yMin = yLargestMinMax.min;\n            yMax = yLargestMinMax.max;\n        }\n        if (yMin === 0 && yMax === 0) {\n            yMax = 1;\n        }\n        this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n        this.fireEvent({ type: 'dataProcessed' });\n        return true;\n    };\n    AreaSeries.prototype.getDomain = function (direction) {\n        if (direction === ChartAxisDirection.X) {\n            return this.xData;\n        }\n        else {\n            return this.yDomain;\n        }\n    };\n    AreaSeries.prototype.update = function () {\n        var _a = this, visible = _a.visible, chart = _a.chart, xAxis = _a.xAxis, yAxis = _a.yAxis, xData = _a.xData, yData = _a.yData;\n        this.group.visible = visible && !!(xData.length && yData.length);\n        if (!xAxis || !yAxis || !visible || !chart || chart.layoutPending || chart.dataPending || !xData.length || !yData.length) {\n            return;\n        }\n        var selectionData = this.generateSelectionData();\n        if (!selectionData) {\n            return;\n        }\n        var areaSelectionData = selectionData.areaSelectionData, markerSelectionData = selectionData.markerSelectionData;\n        this.updateAreaSelection(areaSelectionData);\n        this.updateStrokeSelection(areaSelectionData);\n        this.updateMarkerSelection(markerSelectionData);\n        this.updateMarkerNodes();\n        this.markerSelectionData = markerSelectionData;\n    };\n    AreaSeries.prototype.generateSelectionData = function () {\n        var _this = this;\n        if (!this.data) {\n            return;\n        }\n        var _a = this, yKeys = _a.yKeys, data = _a.data, xData = _a.xData, yData = _a.yData, marker = _a.marker, fills = _a.fills, strokes = _a.strokes, xScale = _a.xAxis.scale, yScale = _a.yAxis.scale;\n        var xOffset = (xScale.bandwidth || 0) / 2;\n        var yOffset = (yScale.bandwidth || 0) / 2;\n        var areaSelectionData = [];\n        var markerSelectionData = [];\n        var last = xData.length * 2 - 1;\n        xData.forEach(function (xDatum, i) {\n            var yDatum = yData[i];\n            var seriesDatum = data[i];\n            var x = xScale.convert(xDatum) + xOffset;\n            var prevMin = 0;\n            var prevMax = 0;\n            yDatum.forEach(function (curr, j) {\n                var prev = curr < 0 ? prevMin : prevMax;\n                var y = yScale.convert(prev + curr) + yOffset;\n                var yKey = yKeys[j];\n                var yValue = seriesDatum[yKey];\n                if (marker) {\n                    markerSelectionData.push({\n                        series: _this,\n                        seriesDatum: seriesDatum,\n                        yValue: yValue,\n                        yKey: yKey,\n                        point: { x: x, y: y },\n                        fill: fills[j % fills.length],\n                        stroke: strokes[j % strokes.length]\n                    });\n                }\n                var areaDatum = areaSelectionData[j] || (areaSelectionData[j] = { yKey: yKey, points: [] });\n                var areaPoints = areaDatum.points;\n                areaPoints[i] = { x: x, y: y };\n                areaPoints[last - i] = { x: x, y: yScale.convert(prev) + yOffset }; // bottom y\n                if (curr < 0) {\n                    prevMin += curr;\n                }\n                else {\n                    prevMax += curr;\n                }\n            });\n        });\n        return { areaSelectionData: areaSelectionData, markerSelectionData: markerSelectionData };\n    };\n    AreaSeries.prototype.updateAreaSelection = function (areaSelectionData) {\n        var _this = this;\n        var _a = this, fills = _a.fills, fillOpacity = _a.fillOpacity, strokes = _a.strokes, strokeOpacity = _a.strokeOpacity, strokeWidth = _a.strokeWidth, seriesItemEnabled = _a.seriesItemEnabled, shadow = _a.shadow;\n        var updateAreas = this.areaSelection.setData(areaSelectionData);\n        updateAreas.exit.remove();\n        var enterAreas = updateAreas.enter.append(Path)\n            .each(function (path) {\n            path.lineJoin = 'round';\n            path.stroke = undefined;\n            path.pointerEvents = PointerEvents.None;\n        });\n        var areaSelection = updateAreas.merge(enterAreas);\n        areaSelection.each(function (shape, datum, index) {\n            var path = shape.path;\n            shape.fill = fills[index % fills.length];\n            shape.fillOpacity = fillOpacity;\n            shape.stroke = strokes[index % strokes.length];\n            shape.strokeOpacity = strokeOpacity;\n            shape.strokeWidth = strokeWidth;\n            shape.lineDash = _this.lineDash;\n            shape.lineDashOffset = _this.lineDashOffset;\n            shape.fillShadow = shadow;\n            shape.visible = !!seriesItemEnabled.get(datum.yKey);\n            path.clear();\n            var points = datum.points;\n            points.forEach(function (_a, i) {\n                var x = _a.x, y = _a.y;\n                if (i > 0) {\n                    path.lineTo(x, y);\n                }\n                else {\n                    path.moveTo(x, y);\n                }\n            });\n            path.closePath();\n        });\n        this.areaSelection = areaSelection;\n    };\n    AreaSeries.prototype.updateStrokeSelection = function (areaSelectionData) {\n        var _this = this;\n        if (!this.data) {\n            return;\n        }\n        var _a = this, strokes = _a.strokes, strokeWidth = _a.strokeWidth, strokeOpacity = _a.strokeOpacity, data = _a.data, seriesItemEnabled = _a.seriesItemEnabled;\n        var updateStrokes = this.strokeSelection.setData(areaSelectionData);\n        updateStrokes.exit.remove();\n        var enterStrokes = updateStrokes.enter.append(Path)\n            .each(function (path) {\n            path.fill = undefined;\n            path.lineJoin = path.lineCap = 'round';\n            path.pointerEvents = PointerEvents.None;\n        });\n        var strokeSelection = updateStrokes.merge(enterStrokes);\n        strokeSelection.each(function (shape, datum, index) {\n            var path = shape.path;\n            shape.stroke = strokes[index % strokes.length];\n            shape.strokeWidth = strokeWidth;\n            shape.visible = !!seriesItemEnabled.get(datum.yKey);\n            shape.strokeOpacity = strokeOpacity;\n            shape.lineDash = _this.lineDash;\n            shape.lineDashOffset = _this.lineDashOffset;\n            path.clear();\n            var points = datum.points;\n            // The stroke doesn't go all the way around the fill, only on top,\n            // that's why we iterate until `data.length` (rather than `points.length`) and stop.\n            for (var i = 0; i < data.length; i++) {\n                var _a = points[i], x = _a.x, y = _a.y;\n                if (i > 0) {\n                    path.lineTo(x, y);\n                }\n                else {\n                    path.moveTo(x, y);\n                }\n            }\n        });\n        this.strokeSelection = strokeSelection;\n    };\n    AreaSeries.prototype.updateMarkerSelection = function (markerSelectionData) {\n        var marker = this.marker;\n        var data = marker.shape ? markerSelectionData : [];\n        var MarkerShape = getMarker(marker.shape);\n        var updateMarkers = this.markerSelection.setData(data);\n        updateMarkers.exit.remove();\n        var enterMarkers = updateMarkers.enter.append(MarkerShape);\n        this.markerSelection = updateMarkers.merge(enterMarkers);\n    };\n    AreaSeries.prototype.updateMarkerNodes = function () {\n        if (!this.chart) {\n            return;\n        }\n        var marker = this.marker;\n        var markerFormatter = marker.formatter;\n        var markerStrokeWidth = marker.strokeWidth !== undefined ? marker.strokeWidth : this.strokeWidth;\n        var markerSize = marker.size;\n        var _a = this, xKey = _a.xKey, seriesItemEnabled = _a.seriesItemEnabled;\n        var highlightedDatum = this.chart.highlightedDatum;\n        var _b = this.highlightStyle, highlightFill = _b.fill, highlightStroke = _b.stroke;\n        this.markerSelection.each(function (node, datum) {\n            var highlighted = datum === highlightedDatum;\n            var markerFill = highlighted && highlightFill !== undefined ? highlightFill : marker.fill || datum.fill;\n            var markerStroke = highlighted && highlightStroke !== undefined ? highlightStroke : marker.stroke || datum.stroke;\n            var markerFormat = undefined;\n            if (markerFormatter) {\n                markerFormat = markerFormatter({\n                    datum: datum.seriesDatum,\n                    xKey: xKey,\n                    yKey: datum.yKey,\n                    fill: markerFill,\n                    stroke: markerStroke,\n                    strokeWidth: markerStrokeWidth,\n                    size: markerSize,\n                    highlighted: highlighted\n                });\n            }\n            node.fill = markerFormat && markerFormat.fill || markerFill;\n            node.stroke = markerFormat && markerFormat.stroke || markerStroke;\n            node.strokeWidth = markerFormat && markerFormat.strokeWidth !== undefined\n                ? markerFormat.strokeWidth\n                : markerStrokeWidth;\n            node.size = markerFormat && markerFormat.size !== undefined\n                ? markerFormat.size\n                : markerSize;\n            node.translationX = datum.point.x;\n            node.translationY = datum.point.y;\n            node.visible = marker.enabled && node.size > 0 && !!seriesItemEnabled.get(datum.yKey);\n        });\n    };\n    AreaSeries.prototype.getNodeData = function () {\n        return this.markerSelectionData;\n    };\n    AreaSeries.prototype.fireNodeClickEvent = function (datum) {\n        this.fireEvent({\n            type: 'nodeClick',\n            series: this,\n            datum: datum.seriesDatum,\n            xKey: this.xKey,\n            yKey: datum.yKey\n        });\n    };\n    AreaSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var xKey = this.xKey;\n        var yKey = nodeDatum.yKey;\n        if (!xKey || !yKey) {\n            return '';\n        }\n        var _a = this, xName = _a.xName, yKeys = _a.yKeys, yNames = _a.yNames, fills = _a.fills, tooltipFormat = _a.tooltipFormat, tooltipRenderer = _a.tooltipRenderer;\n        var datum = nodeDatum.seriesDatum;\n        var xValue = datum[xKey];\n        var yValue = datum[yKey];\n        var yKeyIndex = yKeys.indexOf(yKey);\n        var yName = yNames[yKeyIndex];\n        var color = fills[yKeyIndex % fills.length];\n        var xString = typeof xValue === 'number' ? toFixed(xValue) : String(xValue);\n        var yString = typeof yValue === 'number' ? toFixed(yValue) : String(yValue);\n        var title = yName;\n        var content = xString + ': ' + yString;\n        var defaults = {\n            title: title,\n            titleBackgroundColor: color,\n            content: content\n        };\n        if (tooltipFormat || tooltipRenderer) {\n            var params = {\n                datum: datum,\n                xKey: xKey,\n                xName: xName,\n                xValue: xValue,\n                yKey: yKey,\n                yValue: yValue,\n                yName: yName,\n                color: color\n            };\n            if (tooltipFormat) {\n                return toTooltipHtml({\n                    content: interpolate(tooltipFormat, params)\n                }, defaults);\n            }\n            if (tooltipRenderer) {\n                return toTooltipHtml(tooltipRenderer(params), defaults);\n            }\n        }\n        return toTooltipHtml(defaults);\n    };\n    AreaSeries.prototype.listSeriesItems = function (legendData) {\n        var _a = this, data = _a.data, id = _a.id, xKey = _a.xKey, yKeys = _a.yKeys, yNames = _a.yNames, seriesItemEnabled = _a.seriesItemEnabled, marker = _a.marker, fills = _a.fills, strokes = _a.strokes, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity;\n        if (data && data.length && xKey && yKeys.length) {\n            yKeys.forEach(function (yKey, index) {\n                legendData.push({\n                    id: id,\n                    itemId: yKey,\n                    enabled: seriesItemEnabled.get(yKey) || false,\n                    label: {\n                        text: yNames[index] || yKeys[index]\n                    },\n                    marker: {\n                        shape: marker.shape,\n                        fill: marker.fill || fills[index % fills.length],\n                        stroke: marker.stroke || strokes[index % strokes.length],\n                        fillOpacity: fillOpacity,\n                        strokeOpacity: strokeOpacity\n                    }\n                });\n            });\n        }\n    };\n    AreaSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        this.seriesItemEnabled.set(itemId, enabled);\n        this.scheduleData();\n    };\n    AreaSeries.className = 'AreaSeries';\n    AreaSeries.type = 'area';\n    __decorate([\n        reactive('dataChange')\n    ], AreaSeries.prototype, \"fills\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], AreaSeries.prototype, \"strokes\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"fillOpacity\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"strokeOpacity\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"lineDash\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"lineDashOffset\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"xName\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"yNames\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        reactive('update')\n    ], AreaSeries.prototype, \"shadow\", void 0);\n    return AreaSeries;\n}(CartesianSeries));\nexport { AreaSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}