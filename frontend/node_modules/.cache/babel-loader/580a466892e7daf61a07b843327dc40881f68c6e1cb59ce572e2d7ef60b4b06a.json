{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avnis\\\\Documents\\\\Expense-Tracker\\\\frontend\\\\src\\\\Components\\\\Chart.js\";\nimport React, { Component } from 'react';\n\n//make API calls to backend\nimport axios from 'axios';\nimport { AgChartsReact } from 'ag-charts-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.dataPoints = [1];\n    this.state = {\n      options: {\n        type: 'line',\n        autoSize: true,\n        title: {\n          text: 'Expenses'\n        },\n        legend: {\n          enabled: false\n        },\n        data: this.dataPoints,\n        series: [{\n          xKey: 'date',\n          yKey: 'spending'\n        }]\n      }\n    };\n  }\n  componentDidMount() {\n    axios.get('http://localhost:3000/recent').then(response => {\n      var i;\n      var temp = 0;\n      /* calculation for the days with multiple expenses entered */\n      for (i = 0; i < response.data.length; i++) {\n        if (i !== response.data.length - 1 && !response.data[i + 1].date.localeCompare(response.data[i].date)) {\n          temp += response.data[i].cost;\n        } else {\n          temp += response.data[i].cost;\n          var day = response.data[i].date.substring(8, 10);\n          this.dataPoints.push({\n            date: String(day),\n            spending: Number(temp)\n          });\n          temp = 0;\n        }\n      }\n      this.setState({\n        options: {\n          ...this.state.options,\n          data: this.dataPoints\n        }\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(AgChartsReact, {\n      options: this.state.options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","AgChartsReact","Chart","constructor","props","dataPoints","state","options","type","autoSize","title","text","legend","enabled","data","series","xKey","yKey","componentDidMount","get","then","response","i","temp","length","date","localeCompare","cost","day","substring","push","String","spending","Number","setState","render"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/src/Components/Chart.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\n//make API calls to backend\r\nimport axios from 'axios';\r\n\r\nimport { AgChartsReact } from 'ag-charts-react';\r\n\r\nexport default class Chart extends Component {\r\n\tdataPoints = [1];\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options: {\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tautoSize: true,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t    text: 'Expenses',\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t    enabled: false\r\n\t\t\t\t},\r\n                data: this.dataPoints,\r\n                series: [{\r\n                    xKey: 'date',\r\n                    yKey: 'spending',\r\n                }],\r\n            },\r\n        };\r\n    }\r\n\t\r\n\tcomponentDidMount(){\r\n\t\taxios.get('http://localhost:3000/recent')\r\n\t\t.then((response) => {\r\n\t\t\tvar i;\r\n\t\t\tvar temp = 0;\r\n\t\t\t/* calculation for the days with multiple expenses entered */\r\n\t\t\tfor (i = 0; i < response.data.length; i++) {\r\n\t\t\t\tif (i !== (response.data.length - 1) && !response.data[i + 1].date.localeCompare(response.data[i].date)) {\r\n\t\t\t\t\ttemp += response.data[i].cost;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttemp += response.data[i].cost;\r\n\t\t\t\t\tvar day = response.data[i].date.substring(8, 10);\r\n\t\t\t\t\tthis.dataPoints.push({\r\n\t\t\t\t\t\tdate: String(day),\r\n\t\t\t\t\t\tspending: Number(temp),\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttemp = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\toptions: {\r\n\t\t\t    \t...this.state.options,\r\n\t\t\t    \tdata: this.dataPoints,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n    render() {\r\n        return <AgChartsReact options={this.state.options} />;\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,QAAQ,iBAAiB;AAAC;AAEhD,eAAe,MAAMC,KAAK,SAASH,SAAS,CAAC;EAG5CI,WAAW,CAACC,KAAK,EAAE;IACZ,KAAK,CAACA,KAAK,CAAC;IAAC,KAHpBC,UAAU,GAAG,CAAC,CAAC,CAAC;IAKT,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE;QACjBC,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE;UACHC,IAAI,EAAE;QACV,CAAC;QACDC,MAAM,EAAE;UACJC,OAAO,EAAE;QACb,CAAC;QACWC,IAAI,EAAE,IAAI,CAACT,UAAU;QACrBU,MAAM,EAAE,CAAC;UACLC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC;MACL;IACJ,CAAC;EACL;EAEHC,iBAAiB,GAAE;IAClBlB,KAAK,CAACmB,GAAG,CAAC,8BAA8B,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAK;MACnB,IAAIC,CAAC;MACL,IAAIC,IAAI,GAAG,CAAC;MACZ;MACA,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACP,IAAI,CAACU,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC1C,IAAIA,CAAC,KAAMD,QAAQ,CAACP,IAAI,CAACU,MAAM,GAAG,CAAE,IAAI,CAACH,QAAQ,CAACP,IAAI,CAACQ,CAAC,GAAG,CAAC,CAAC,CAACG,IAAI,CAACC,aAAa,CAACL,QAAQ,CAACP,IAAI,CAACQ,CAAC,CAAC,CAACG,IAAI,CAAC,EAAE;UACxGF,IAAI,IAAIF,QAAQ,CAACP,IAAI,CAACQ,CAAC,CAAC,CAACK,IAAI;QAC9B,CAAC,MAAM;UACNJ,IAAI,IAAIF,QAAQ,CAACP,IAAI,CAACQ,CAAC,CAAC,CAACK,IAAI;UAC7B,IAAIC,GAAG,GAAGP,QAAQ,CAACP,IAAI,CAACQ,CAAC,CAAC,CAACG,IAAI,CAACI,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;UAChD,IAAI,CAACxB,UAAU,CAACyB,IAAI,CAAC;YACpBL,IAAI,EAAEM,MAAM,CAACH,GAAG,CAAC;YACjBI,QAAQ,EAAEC,MAAM,CAACV,IAAI;UACtB,CAAC,CAAC;UACFA,IAAI,GAAG,CAAC;QACT;MACD;MAEA,IAAI,CAACW,QAAQ,CAAC;QACb3B,OAAO,EAAE;UACL,GAAG,IAAI,CAACD,KAAK,CAACC,OAAO;UACrBO,IAAI,EAAE,IAAI,CAACT;QACf;MACD,CAAC,CAAC;IACH,CAAC,CAAC;EACH;EAEG8B,MAAM,GAAG;IACL,oBAAO,QAAC,aAAa;MAAC,OAAO,EAAE,IAAI,CAAC7B,KAAK,CAACC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACzD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}