{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Shape } from \"./shape\";\nimport { chainObjects } from \"../../util/object\";\nimport { BBox } from \"../bbox\";\nimport { HdpiCanvas } from \"../../canvas/hdpiCanvas\";\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._x = 0;\n    _this._y = 0;\n    _this.lineBreakRegex = /\\r?\\n/g;\n    _this.lines = [];\n    _this._text = '';\n    _this._dirtyFont = true;\n    _this._fontSize = 10;\n    _this._fontFamily = 'sans-serif';\n    _this._textAlign = Text.defaultStyles.textAlign;\n    _this._textBaseline = Text.defaultStyles.textBaseline;\n    _this._lineHeight = 14;\n    return _this;\n  }\n\n  Object.defineProperty(Text.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      if (this._x !== value) {\n        this._x = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      if (this._y !== value) {\n        this._y = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Text.prototype.splitText = function () {\n    this.lines = this._text.split(this.lineBreakRegex);\n  };\n\n  Object.defineProperty(Text.prototype, \"text\", {\n    get: function () {\n      return this._text;\n    },\n    set: function (value) {\n      var str = String(value); // `value` can be an object here\n\n      if (this._text !== str) {\n        this._text = str;\n        this.splitText();\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"font\", {\n    get: function () {\n      if (this.dirtyFont) {\n        this.dirtyFont = false;\n        this._font = [this.fontStyle || '', this.fontWeight || '', this.fontSize + 'px', this.fontFamily].join(' ').trim();\n      }\n\n      return this._font;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"dirtyFont\", {\n    get: function () {\n      return this._dirtyFont;\n    },\n    set: function (value) {\n      if (this._dirtyFont !== value) {\n        this._dirtyFont = value;\n\n        if (value) {\n          this.dirty = true;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontStyle\", {\n    get: function () {\n      return this._fontStyle;\n    },\n    set: function (value) {\n      if (this._fontStyle !== value) {\n        this._fontStyle = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontWeight\", {\n    get: function () {\n      return this._fontWeight;\n    },\n    set: function (value) {\n      if (this._fontWeight !== value) {\n        this._fontWeight = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontSize\", {\n    get: function () {\n      return this._fontSize;\n    },\n    set: function (value) {\n      if (!isFinite(value)) {\n        value = 10;\n      }\n\n      if (this._fontSize !== value) {\n        this._fontSize = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"fontFamily\", {\n    get: function () {\n      return this._fontFamily;\n    },\n    set: function (value) {\n      if (this._fontFamily !== value) {\n        this._fontFamily = value;\n        this.dirtyFont = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"textAlign\", {\n    get: function () {\n      return this._textAlign;\n    },\n    set: function (value) {\n      if (this._textAlign !== value) {\n        this._textAlign = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"textBaseline\", {\n    get: function () {\n      return this._textBaseline;\n    },\n    set: function (value) {\n      if (this._textBaseline !== value) {\n        this._textBaseline = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Text.prototype, \"lineHeight\", {\n    get: function () {\n      return this._lineHeight;\n    },\n    set: function (value) {\n      // Multi-line text is complicated because:\n      // - Canvas does not support it natively, so we have to implement it manually\n      // - need to know the height of each line -> need to parse the font shorthand ->\n      //   generally impossible to do because font size may not be in pixels\n      // - so, need to measure the text instead, each line individually -> expensive\n      // - or make the user provide the line height manually for multi-line text\n      // - computeBBox should use the lineHeight for multi-line text but ignore it otherwise\n      // - textBaseline kind of loses its meaning for multi-line text\n      if (this._lineHeight !== value) {\n        this._lineHeight = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Text.prototype.computeBBox = function () {\n    return HdpiCanvas.has.textMetrics ? this.getPreciseBBox() : this.getApproximateBBox();\n  };\n\n  Text.prototype.getPreciseBBox = function () {\n    var metrics = HdpiCanvas.measureText(this.text, this.font, this.textBaseline, this.textAlign);\n    return new BBox(this.x - metrics.actualBoundingBoxLeft, this.y - metrics.actualBoundingBoxAscent, metrics.width, metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n  };\n\n  Text.prototype.getApproximateBBox = function () {\n    var size = HdpiCanvas.getTextSize(this.text, this.font);\n\n    var _a = this,\n        x = _a.x,\n        y = _a.y;\n\n    switch (this.textAlign) {\n      case 'end':\n      case 'right':\n        x -= size.width;\n        break;\n\n      case 'center':\n        x -= size.width / 2;\n    }\n\n    switch (this.textBaseline) {\n      case 'alphabetic':\n        y -= size.height * 0.7;\n        break;\n\n      case 'middle':\n        y -= size.height * 0.45;\n        break;\n\n      case 'ideographic':\n        y -= size.height;\n        break;\n\n      case 'hanging':\n        y -= size.height * 0.2;\n        break;\n\n      case 'bottom':\n        y -= size.height;\n        break;\n    }\n\n    return new BBox(x, y, size.width, size.height);\n  };\n\n  Text.prototype.isPointInPath = function (x, y) {\n    var point = this.transformPoint(x, y);\n    var bbox = this.computeBBox();\n    return bbox ? bbox.containsPoint(point.x, point.y) : false;\n  };\n\n  Text.prototype.isPointInStroke = function (x, y) {\n    return false;\n  };\n\n  Text.prototype.render = function (ctx) {\n    if (!this.lines.length || !this.scene) {\n      return;\n    }\n\n    if (this.dirtyTransform) {\n      this.computeTransformMatrix();\n    } // this.matrix.transformBBox(this.computeBBox!()).render(ctx); // debug\n\n\n    this.matrix.toContext(ctx);\n\n    var _a = this,\n        fill = _a.fill,\n        stroke = _a.stroke,\n        strokeWidth = _a.strokeWidth;\n\n    ctx.font = this.font;\n    ctx.textAlign = this.textAlign;\n    ctx.textBaseline = this.textBaseline;\n    var pixelRatio = this.scene.canvas.pixelRatio || 1;\n\n    if (fill) {\n      ctx.fillStyle = fill;\n      ctx.globalAlpha = this.opacity * this.fillOpacity;\n\n      var _b = this,\n          fillShadow = _b.fillShadow,\n          text = _b.text,\n          x = _b.x,\n          y = _b.y;\n\n      if (fillShadow && fillShadow.enabled) {\n        ctx.shadowColor = fillShadow.color;\n        ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = fillShadow.blur * pixelRatio;\n      }\n\n      ctx.fillText(text, x, y);\n    }\n\n    if (stroke && strokeWidth) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = this.opacity * this.strokeOpacity;\n\n      var _c = this,\n          lineDash = _c.lineDash,\n          lineDashOffset = _c.lineDashOffset,\n          lineCap = _c.lineCap,\n          lineJoin = _c.lineJoin,\n          strokeShadow = _c.strokeShadow,\n          text = _c.text,\n          x = _c.x,\n          y = _c.y;\n\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n\n      if (strokeShadow && strokeShadow.enabled) {\n        ctx.shadowColor = strokeShadow.color;\n        ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n      }\n\n      ctx.strokeText(text, x, y);\n    }\n\n    this.dirty = false;\n  };\n\n  Text.className = 'Text';\n  Text.defaultStyles = chainObjects(Shape.defaultStyles, {\n    textAlign: 'start',\n    fontStyle: undefined,\n    fontWeight: undefined,\n    fontSize: 10,\n    fontFamily: 'sans-serif',\n    textBaseline: 'alphabetic'\n  });\n  return Text;\n}(Shape);\n\nexport { Text };","map":{"version":3,"sources":["E:/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scene/shape/text.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Shape","chainObjects","BBox","HdpiCanvas","Text","_super","_this","apply","arguments","_x","_y","lineBreakRegex","lines","_text","_dirtyFont","_fontSize","_fontFamily","_textAlign","defaultStyles","textAlign","_textBaseline","textBaseline","_lineHeight","defineProperty","get","set","value","dirty","enumerable","configurable","splitText","split","str","String","dirtyFont","_font","fontStyle","fontWeight","fontSize","fontFamily","join","trim","_fontStyle","_fontWeight","isFinite","computeBBox","has","textMetrics","getPreciseBBox","getApproximateBBox","metrics","measureText","text","font","x","actualBoundingBoxLeft","y","actualBoundingBoxAscent","width","actualBoundingBoxDescent","size","getTextSize","_a","height","isPointInPath","point","transformPoint","bbox","containsPoint","isPointInStroke","render","ctx","length","scene","dirtyTransform","computeTransformMatrix","matrix","toContext","fill","stroke","strokeWidth","pixelRatio","canvas","fillStyle","globalAlpha","opacity","fillOpacity","_b","fillShadow","enabled","shadowColor","color","shadowOffsetX","xOffset","shadowOffsetY","yOffset","shadowBlur","blur","fillText","strokeStyle","lineWidth","strokeOpacity","_c","lineDash","lineDashOffset","lineCap","lineJoin","strokeShadow","setLineDash","strokeText","className","undefined"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,SAASI,KAAT,QAAsB,SAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AACA,IAAIC,IAAI;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACxCnB,EAAAA,SAAS,CAACkB,IAAD,EAAOC,MAAP,CAAT;;AACA,WAASD,IAAT,GAAgB;AACZ,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AACAF,IAAAA,KAAK,CAACG,EAAN,GAAW,CAAX;AACAH,IAAAA,KAAK,CAACI,EAAN,GAAW,CAAX;AACAJ,IAAAA,KAAK,CAACK,cAAN,GAAuB,QAAvB;AACAL,IAAAA,KAAK,CAACM,KAAN,GAAc,EAAd;AACAN,IAAAA,KAAK,CAACO,KAAN,GAAc,EAAd;AACAP,IAAAA,KAAK,CAACQ,UAAN,GAAmB,IAAnB;AACAR,IAAAA,KAAK,CAACS,SAAN,GAAkB,EAAlB;AACAT,IAAAA,KAAK,CAACU,WAAN,GAAoB,YAApB;AACAV,IAAAA,KAAK,CAACW,UAAN,GAAmBb,IAAI,CAACc,aAAL,CAAmBC,SAAtC;AACAb,IAAAA,KAAK,CAACc,aAAN,GAAsBhB,IAAI,CAACc,aAAL,CAAmBG,YAAzC;AACAf,IAAAA,KAAK,CAACgB,WAAN,GAAoB,EAApB;AACA,WAAOhB,KAAP;AACH;;AACDhB,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,GAAtC,EAA2C;AACvC0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKf,EAAZ;AACH,KAHsC;AAIvCgB,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKjB,EAAL,KAAYiB,KAAhB,EAAuB;AACnB,aAAKjB,EAAL,GAAUiB,KAAV;AACA,aAAKC,KAAL,GAAa,IAAb;AACH;AACJ,KATsC;AAUvCC,IAAAA,UAAU,EAAE,IAV2B;AAWvCC,IAAAA,YAAY,EAAE;AAXyB,GAA3C;AAaAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,GAAtC,EAA2C;AACvC0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKd,EAAZ;AACH,KAHsC;AAIvCe,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKhB,EAAL,KAAYgB,KAAhB,EAAuB;AACnB,aAAKhB,EAAL,GAAUgB,KAAV;AACA,aAAKC,KAAL,GAAa,IAAb;AACH;AACJ,KATsC;AAUvCC,IAAAA,UAAU,EAAE,IAV2B;AAWvCC,IAAAA,YAAY,EAAE;AAXyB,GAA3C;;AAaAzB,EAAAA,IAAI,CAACN,SAAL,CAAegC,SAAf,GAA2B,YAAY;AACnC,SAAKlB,KAAL,GAAa,KAAKC,KAAL,CAAWkB,KAAX,CAAiB,KAAKpB,cAAtB,CAAb;AACH,GAFD;;AAGArB,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,MAAtC,EAA8C;AAC1C0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKX,KAAZ;AACH,KAHyC;AAI1CY,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAIM,GAAG,GAAGC,MAAM,CAACP,KAAD,CAAhB,CADkB,CACO;;AACzB,UAAI,KAAKb,KAAL,KAAemB,GAAnB,EAAwB;AACpB,aAAKnB,KAAL,GAAamB,GAAb;AACA,aAAKF,SAAL;AACA,aAAKH,KAAL,GAAa,IAAb;AACH;AACJ,KAXyC;AAY1CC,IAAAA,UAAU,EAAE,IAZ8B;AAa1CC,IAAAA,YAAY,EAAE;AAb4B,GAA9C;AAeAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,MAAtC,EAA8C;AAC1C0B,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKU,SAAT,EAAoB;AAChB,aAAKA,SAAL,GAAiB,KAAjB;AACA,aAAKC,KAAL,GAAa,CACT,KAAKC,SAAL,IAAkB,EADT,EAET,KAAKC,UAAL,IAAmB,EAFV,EAGT,KAAKC,QAAL,GAAgB,IAHP,EAIT,KAAKC,UAJI,EAKXC,IALW,CAKN,GALM,EAKDC,IALC,EAAb;AAMH;;AACD,aAAO,KAAKN,KAAZ;AACH,KAZyC;AAa1CP,IAAAA,UAAU,EAAE,IAb8B;AAc1CC,IAAAA,YAAY,EAAE;AAd4B,GAA9C;AAgBAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,WAAtC,EAAmD;AAC/C0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKV,UAAZ;AACH,KAH8C;AAI/CW,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKZ,UAAL,KAAoBY,KAAxB,EAA+B;AAC3B,aAAKZ,UAAL,GAAkBY,KAAlB;;AACA,YAAIA,KAAJ,EAAW;AACP,eAAKC,KAAL,GAAa,IAAb;AACH;AACJ;AACJ,KAX8C;AAY/CC,IAAAA,UAAU,EAAE,IAZmC;AAa/CC,IAAAA,YAAY,EAAE;AAbiC,GAAnD;AAeAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,WAAtC,EAAmD;AAC/C0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKkB,UAAZ;AACH,KAH8C;AAI/CjB,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKgB,UAAL,KAAoBhB,KAAxB,EAA+B;AAC3B,aAAKgB,UAAL,GAAkBhB,KAAlB;AACA,aAAKQ,SAAL,GAAiB,IAAjB;AACH;AACJ,KAT8C;AAU/CN,IAAAA,UAAU,EAAE,IAVmC;AAW/CC,IAAAA,YAAY,EAAE;AAXiC,GAAnD;AAaAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,YAAtC,EAAoD;AAChD0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKmB,WAAZ;AACH,KAH+C;AAIhDlB,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKiB,WAAL,KAAqBjB,KAAzB,EAAgC;AAC5B,aAAKiB,WAAL,GAAmBjB,KAAnB;AACA,aAAKQ,SAAL,GAAiB,IAAjB;AACH;AACJ,KAT+C;AAUhDN,IAAAA,UAAU,EAAE,IAVoC;AAWhDC,IAAAA,YAAY,EAAE;AAXkC,GAApD;AAaAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,UAAtC,EAAkD;AAC9C0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKT,SAAZ;AACH,KAH6C;AAI9CU,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,CAACkB,QAAQ,CAAClB,KAAD,CAAb,EAAsB;AAClBA,QAAAA,KAAK,GAAG,EAAR;AACH;;AACD,UAAI,KAAKX,SAAL,KAAmBW,KAAvB,EAA8B;AAC1B,aAAKX,SAAL,GAAiBW,KAAjB;AACA,aAAKQ,SAAL,GAAiB,IAAjB;AACH;AACJ,KAZ6C;AAa9CN,IAAAA,UAAU,EAAE,IAbkC;AAc9CC,IAAAA,YAAY,EAAE;AAdgC,GAAlD;AAgBAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,YAAtC,EAAoD;AAChD0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKR,WAAZ;AACH,KAH+C;AAIhDS,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKV,WAAL,KAAqBU,KAAzB,EAAgC;AAC5B,aAAKV,WAAL,GAAmBU,KAAnB;AACA,aAAKQ,SAAL,GAAiB,IAAjB;AACH;AACJ,KAT+C;AAUhDN,IAAAA,UAAU,EAAE,IAVoC;AAWhDC,IAAAA,YAAY,EAAE;AAXkC,GAApD;AAaAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,WAAtC,EAAmD;AAC/C0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKP,UAAZ;AACH,KAH8C;AAI/CQ,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKT,UAAL,KAAoBS,KAAxB,EAA+B;AAC3B,aAAKT,UAAL,GAAkBS,KAAlB;AACA,aAAKC,KAAL,GAAa,IAAb;AACH;AACJ,KAT8C;AAU/CC,IAAAA,UAAU,EAAE,IAVmC;AAW/CC,IAAAA,YAAY,EAAE;AAXiC,GAAnD;AAaAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,cAAtC,EAAsD;AAClD0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKJ,aAAZ;AACH,KAHiD;AAIlDK,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAI,KAAKN,aAAL,KAAuBM,KAA3B,EAAkC;AAC9B,aAAKN,aAAL,GAAqBM,KAArB;AACA,aAAKC,KAAL,GAAa,IAAb;AACH;AACJ,KATiD;AAUlDC,IAAAA,UAAU,EAAE,IAVsC;AAWlDC,IAAAA,YAAY,EAAE;AAXoC,GAAtD;AAaAvC,EAAAA,MAAM,CAACiC,cAAP,CAAsBnB,IAAI,CAACN,SAA3B,EAAsC,YAAtC,EAAoD;AAChD0B,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKF,WAAZ;AACH,KAH+C;AAIhDG,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,KAAKJ,WAAL,KAAqBI,KAAzB,EAAgC;AAC5B,aAAKJ,WAAL,GAAmBI,KAAnB;AACA,aAAKC,KAAL,GAAa,IAAb;AACH;AACJ,KAjB+C;AAkBhDC,IAAAA,UAAU,EAAE,IAlBoC;AAmBhDC,IAAAA,YAAY,EAAE;AAnBkC,GAApD;;AAqBAzB,EAAAA,IAAI,CAACN,SAAL,CAAe+C,WAAf,GAA6B,YAAY;AACrC,WAAO1C,UAAU,CAAC2C,GAAX,CAAeC,WAAf,GACD,KAAKC,cAAL,EADC,GAED,KAAKC,kBAAL,EAFN;AAGH,GAJD;;AAKA7C,EAAAA,IAAI,CAACN,SAAL,CAAekD,cAAf,GAAgC,YAAY;AACxC,QAAIE,OAAO,GAAG/C,UAAU,CAACgD,WAAX,CAAuB,KAAKC,IAA5B,EAAkC,KAAKC,IAAvC,EAA6C,KAAKhC,YAAlD,EAAgE,KAAKF,SAArE,CAAd;AACA,WAAO,IAAIjB,IAAJ,CAAS,KAAKoD,CAAL,GAASJ,OAAO,CAACK,qBAA1B,EAAiD,KAAKC,CAAL,GAASN,OAAO,CAACO,uBAAlE,EAA2FP,OAAO,CAACQ,KAAnG,EAA0GR,OAAO,CAACO,uBAAR,GAAkCP,OAAO,CAACS,wBAApJ,CAAP;AACH,GAHD;;AAIAvD,EAAAA,IAAI,CAACN,SAAL,CAAemD,kBAAf,GAAoC,YAAY;AAC5C,QAAIW,IAAI,GAAGzD,UAAU,CAAC0D,WAAX,CAAuB,KAAKT,IAA5B,EAAkC,KAAKC,IAAvC,CAAX;;AACA,QAAIS,EAAE,GAAG,IAAT;AAAA,QAAeR,CAAC,GAAGQ,EAAE,CAACR,CAAtB;AAAA,QAAyBE,CAAC,GAAGM,EAAE,CAACN,CAAhC;;AACA,YAAQ,KAAKrC,SAAb;AACI,WAAK,KAAL;AACA,WAAK,OAAL;AACImC,QAAAA,CAAC,IAAIM,IAAI,CAACF,KAAV;AACA;;AACJ,WAAK,QAAL;AACIJ,QAAAA,CAAC,IAAIM,IAAI,CAACF,KAAL,GAAa,CAAlB;AANR;;AAQA,YAAQ,KAAKrC,YAAb;AACI,WAAK,YAAL;AACImC,QAAAA,CAAC,IAAII,IAAI,CAACG,MAAL,GAAc,GAAnB;AACA;;AACJ,WAAK,QAAL;AACIP,QAAAA,CAAC,IAAII,IAAI,CAACG,MAAL,GAAc,IAAnB;AACA;;AACJ,WAAK,aAAL;AACIP,QAAAA,CAAC,IAAII,IAAI,CAACG,MAAV;AACA;;AACJ,WAAK,SAAL;AACIP,QAAAA,CAAC,IAAII,IAAI,CAACG,MAAL,GAAc,GAAnB;AACA;;AACJ,WAAK,QAAL;AACIP,QAAAA,CAAC,IAAII,IAAI,CAACG,MAAV;AACA;AAfR;;AAiBA,WAAO,IAAI7D,IAAJ,CAASoD,CAAT,EAAYE,CAAZ,EAAeI,IAAI,CAACF,KAApB,EAA2BE,IAAI,CAACG,MAAhC,CAAP;AACH,GA7BD;;AA8BA3D,EAAAA,IAAI,CAACN,SAAL,CAAekE,aAAf,GAA+B,UAAUV,CAAV,EAAaE,CAAb,EAAgB;AAC3C,QAAIS,KAAK,GAAG,KAAKC,cAAL,CAAoBZ,CAApB,EAAuBE,CAAvB,CAAZ;AACA,QAAIW,IAAI,GAAG,KAAKtB,WAAL,EAAX;AACA,WAAOsB,IAAI,GAAGA,IAAI,CAACC,aAAL,CAAmBH,KAAK,CAACX,CAAzB,EAA4BW,KAAK,CAACT,CAAlC,CAAH,GAA0C,KAArD;AACH,GAJD;;AAKApD,EAAAA,IAAI,CAACN,SAAL,CAAeuE,eAAf,GAAiC,UAAUf,CAAV,EAAaE,CAAb,EAAgB;AAC7C,WAAO,KAAP;AACH,GAFD;;AAGApD,EAAAA,IAAI,CAACN,SAAL,CAAewE,MAAf,GAAwB,UAAUC,GAAV,EAAe;AACnC,QAAI,CAAC,KAAK3D,KAAL,CAAW4D,MAAZ,IAAsB,CAAC,KAAKC,KAAhC,EAAuC;AACnC;AACH;;AACD,QAAI,KAAKC,cAAT,EAAyB;AACrB,WAAKC,sBAAL;AACH,KANkC,CAOnC;;;AACA,SAAKC,MAAL,CAAYC,SAAZ,CAAsBN,GAAtB;;AACA,QAAIT,EAAE,GAAG,IAAT;AAAA,QAAegB,IAAI,GAAGhB,EAAE,CAACgB,IAAzB;AAAA,QAA+BC,MAAM,GAAGjB,EAAE,CAACiB,MAA3C;AAAA,QAAmDC,WAAW,GAAGlB,EAAE,CAACkB,WAApE;;AACAT,IAAAA,GAAG,CAAClB,IAAJ,GAAW,KAAKA,IAAhB;AACAkB,IAAAA,GAAG,CAACpD,SAAJ,GAAgB,KAAKA,SAArB;AACAoD,IAAAA,GAAG,CAAClD,YAAJ,GAAmB,KAAKA,YAAxB;AACA,QAAI4D,UAAU,GAAG,KAAKR,KAAL,CAAWS,MAAX,CAAkBD,UAAlB,IAAgC,CAAjD;;AACA,QAAIH,IAAJ,EAAU;AACNP,MAAAA,GAAG,CAACY,SAAJ,GAAgBL,IAAhB;AACAP,MAAAA,GAAG,CAACa,WAAJ,GAAkB,KAAKC,OAAL,GAAe,KAAKC,WAAtC;;AACA,UAAIC,EAAE,GAAG,IAAT;AAAA,UAAeC,UAAU,GAAGD,EAAE,CAACC,UAA/B;AAAA,UAA2CpC,IAAI,GAAGmC,EAAE,CAACnC,IAArD;AAAA,UAA2DE,CAAC,GAAGiC,EAAE,CAACjC,CAAlE;AAAA,UAAqEE,CAAC,GAAG+B,EAAE,CAAC/B,CAA5E;;AACA,UAAIgC,UAAU,IAAIA,UAAU,CAACC,OAA7B,EAAsC;AAClClB,QAAAA,GAAG,CAACmB,WAAJ,GAAkBF,UAAU,CAACG,KAA7B;AACApB,QAAAA,GAAG,CAACqB,aAAJ,GAAoBJ,UAAU,CAACK,OAAX,GAAqBZ,UAAzC;AACAV,QAAAA,GAAG,CAACuB,aAAJ,GAAoBN,UAAU,CAACO,OAAX,GAAqBd,UAAzC;AACAV,QAAAA,GAAG,CAACyB,UAAJ,GAAiBR,UAAU,CAACS,IAAX,GAAkBhB,UAAnC;AACH;;AACDV,MAAAA,GAAG,CAAC2B,QAAJ,CAAa9C,IAAb,EAAmBE,CAAnB,EAAsBE,CAAtB;AACH;;AACD,QAAIuB,MAAM,IAAIC,WAAd,EAA2B;AACvBT,MAAAA,GAAG,CAAC4B,WAAJ,GAAkBpB,MAAlB;AACAR,MAAAA,GAAG,CAAC6B,SAAJ,GAAgBpB,WAAhB;AACAT,MAAAA,GAAG,CAACa,WAAJ,GAAkB,KAAKC,OAAL,GAAe,KAAKgB,aAAtC;;AACA,UAAIC,EAAE,GAAG,IAAT;AAAA,UAAeC,QAAQ,GAAGD,EAAE,CAACC,QAA7B;AAAA,UAAuCC,cAAc,GAAGF,EAAE,CAACE,cAA3D;AAAA,UAA2EC,OAAO,GAAGH,EAAE,CAACG,OAAxF;AAAA,UAAiGC,QAAQ,GAAGJ,EAAE,CAACI,QAA/G;AAAA,UAAyHC,YAAY,GAAGL,EAAE,CAACK,YAA3I;AAAA,UAAyJvD,IAAI,GAAGkD,EAAE,CAAClD,IAAnK;AAAA,UAAyKE,CAAC,GAAGgD,EAAE,CAAChD,CAAhL;AAAA,UAAmLE,CAAC,GAAG8C,EAAE,CAAC9C,CAA1L;;AACA,UAAI+C,QAAJ,EAAc;AACVhC,QAAAA,GAAG,CAACqC,WAAJ,CAAgBL,QAAhB;AACH;;AACD,UAAIC,cAAJ,EAAoB;AAChBjC,QAAAA,GAAG,CAACiC,cAAJ,GAAqBA,cAArB;AACH;;AACD,UAAIC,OAAJ,EAAa;AACTlC,QAAAA,GAAG,CAACkC,OAAJ,GAAcA,OAAd;AACH;;AACD,UAAIC,QAAJ,EAAc;AACVnC,QAAAA,GAAG,CAACmC,QAAJ,GAAeA,QAAf;AACH;;AACD,UAAIC,YAAY,IAAIA,YAAY,CAAClB,OAAjC,EAA0C;AACtClB,QAAAA,GAAG,CAACmB,WAAJ,GAAkBiB,YAAY,CAAChB,KAA/B;AACApB,QAAAA,GAAG,CAACqB,aAAJ,GAAoBe,YAAY,CAACd,OAAb,GAAuBZ,UAA3C;AACAV,QAAAA,GAAG,CAACuB,aAAJ,GAAoBa,YAAY,CAACZ,OAAb,GAAuBd,UAA3C;AACAV,QAAAA,GAAG,CAACyB,UAAJ,GAAiBW,YAAY,CAACV,IAAb,GAAoBhB,UAArC;AACH;;AACDV,MAAAA,GAAG,CAACsC,UAAJ,CAAezD,IAAf,EAAqBE,CAArB,EAAwBE,CAAxB;AACH;;AACD,SAAK7B,KAAL,GAAa,KAAb;AACH,GApDD;;AAqDAvB,EAAAA,IAAI,CAAC0G,SAAL,GAAiB,MAAjB;AACA1G,EAAAA,IAAI,CAACc,aAAL,GAAqBjB,YAAY,CAACD,KAAK,CAACkB,aAAP,EAAsB;AACnDC,IAAAA,SAAS,EAAE,OADwC;AAEnDiB,IAAAA,SAAS,EAAE2E,SAFwC;AAGnD1E,IAAAA,UAAU,EAAE0E,SAHuC;AAInDzE,IAAAA,QAAQ,EAAE,EAJyC;AAKnDC,IAAAA,UAAU,EAAE,YALuC;AAMnDlB,IAAAA,YAAY,EAAE;AANqC,GAAtB,CAAjC;AAQA,SAAOjB,IAAP;AACH,CAhTyB,CAgTxBJ,KAhTwB,CAA1B;;AAiTA,SAASI,IAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Shape } from \"./shape\";\nimport { chainObjects } from \"../../util/object\";\nimport { BBox } from \"../bbox\";\nimport { HdpiCanvas } from \"../../canvas/hdpiCanvas\";\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._x = 0;\n        _this._y = 0;\n        _this.lineBreakRegex = /\\r?\\n/g;\n        _this.lines = [];\n        _this._text = '';\n        _this._dirtyFont = true;\n        _this._fontSize = 10;\n        _this._fontFamily = 'sans-serif';\n        _this._textAlign = Text.defaultStyles.textAlign;\n        _this._textBaseline = Text.defaultStyles.textBaseline;\n        _this._lineHeight = 14;\n        return _this;\n    }\n    Object.defineProperty(Text.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        set: function (value) {\n            if (this._x !== value) {\n                this._x = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        set: function (value) {\n            if (this._y !== value) {\n                this._y = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Text.prototype.splitText = function () {\n        this.lines = this._text.split(this.lineBreakRegex);\n    };\n    Object.defineProperty(Text.prototype, \"text\", {\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            var str = String(value); // `value` can be an object here\n            if (this._text !== str) {\n                this._text = str;\n                this.splitText();\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"font\", {\n        get: function () {\n            if (this.dirtyFont) {\n                this.dirtyFont = false;\n                this._font = [\n                    this.fontStyle || '',\n                    this.fontWeight || '',\n                    this.fontSize + 'px',\n                    this.fontFamily\n                ].join(' ').trim();\n            }\n            return this._font;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"dirtyFont\", {\n        get: function () {\n            return this._dirtyFont;\n        },\n        set: function (value) {\n            if (this._dirtyFont !== value) {\n                this._dirtyFont = value;\n                if (value) {\n                    this.dirty = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontStyle\", {\n        get: function () {\n            return this._fontStyle;\n        },\n        set: function (value) {\n            if (this._fontStyle !== value) {\n                this._fontStyle = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontWeight\", {\n        get: function () {\n            return this._fontWeight;\n        },\n        set: function (value) {\n            if (this._fontWeight !== value) {\n                this._fontWeight = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontSize\", {\n        get: function () {\n            return this._fontSize;\n        },\n        set: function (value) {\n            if (!isFinite(value)) {\n                value = 10;\n            }\n            if (this._fontSize !== value) {\n                this._fontSize = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"fontFamily\", {\n        get: function () {\n            return this._fontFamily;\n        },\n        set: function (value) {\n            if (this._fontFamily !== value) {\n                this._fontFamily = value;\n                this.dirtyFont = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"textAlign\", {\n        get: function () {\n            return this._textAlign;\n        },\n        set: function (value) {\n            if (this._textAlign !== value) {\n                this._textAlign = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"textBaseline\", {\n        get: function () {\n            return this._textBaseline;\n        },\n        set: function (value) {\n            if (this._textBaseline !== value) {\n                this._textBaseline = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text.prototype, \"lineHeight\", {\n        get: function () {\n            return this._lineHeight;\n        },\n        set: function (value) {\n            // Multi-line text is complicated because:\n            // - Canvas does not support it natively, so we have to implement it manually\n            // - need to know the height of each line -> need to parse the font shorthand ->\n            //   generally impossible to do because font size may not be in pixels\n            // - so, need to measure the text instead, each line individually -> expensive\n            // - or make the user provide the line height manually for multi-line text\n            // - computeBBox should use the lineHeight for multi-line text but ignore it otherwise\n            // - textBaseline kind of loses its meaning for multi-line text\n            if (this._lineHeight !== value) {\n                this._lineHeight = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Text.prototype.computeBBox = function () {\n        return HdpiCanvas.has.textMetrics\n            ? this.getPreciseBBox()\n            : this.getApproximateBBox();\n    };\n    Text.prototype.getPreciseBBox = function () {\n        var metrics = HdpiCanvas.measureText(this.text, this.font, this.textBaseline, this.textAlign);\n        return new BBox(this.x - metrics.actualBoundingBoxLeft, this.y - metrics.actualBoundingBoxAscent, metrics.width, metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n    };\n    Text.prototype.getApproximateBBox = function () {\n        var size = HdpiCanvas.getTextSize(this.text, this.font);\n        var _a = this, x = _a.x, y = _a.y;\n        switch (this.textAlign) {\n            case 'end':\n            case 'right':\n                x -= size.width;\n                break;\n            case 'center':\n                x -= size.width / 2;\n        }\n        switch (this.textBaseline) {\n            case 'alphabetic':\n                y -= size.height * 0.7;\n                break;\n            case 'middle':\n                y -= size.height * 0.45;\n                break;\n            case 'ideographic':\n                y -= size.height;\n                break;\n            case 'hanging':\n                y -= size.height * 0.2;\n                break;\n            case 'bottom':\n                y -= size.height;\n                break;\n        }\n        return new BBox(x, y, size.width, size.height);\n    };\n    Text.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        var bbox = this.computeBBox();\n        return bbox ? bbox.containsPoint(point.x, point.y) : false;\n    };\n    Text.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n    Text.prototype.render = function (ctx) {\n        if (!this.lines.length || !this.scene) {\n            return;\n        }\n        if (this.dirtyTransform) {\n            this.computeTransformMatrix();\n        }\n        // this.matrix.transformBBox(this.computeBBox!()).render(ctx); // debug\n        this.matrix.toContext(ctx);\n        var _a = this, fill = _a.fill, stroke = _a.stroke, strokeWidth = _a.strokeWidth;\n        ctx.font = this.font;\n        ctx.textAlign = this.textAlign;\n        ctx.textBaseline = this.textBaseline;\n        var pixelRatio = this.scene.canvas.pixelRatio || 1;\n        if (fill) {\n            ctx.fillStyle = fill;\n            ctx.globalAlpha = this.opacity * this.fillOpacity;\n            var _b = this, fillShadow = _b.fillShadow, text = _b.text, x = _b.x, y = _b.y;\n            if (fillShadow && fillShadow.enabled) {\n                ctx.shadowColor = fillShadow.color;\n                ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = fillShadow.blur * pixelRatio;\n            }\n            ctx.fillText(text, x, y);\n        }\n        if (stroke && strokeWidth) {\n            ctx.strokeStyle = stroke;\n            ctx.lineWidth = strokeWidth;\n            ctx.globalAlpha = this.opacity * this.strokeOpacity;\n            var _c = this, lineDash = _c.lineDash, lineDashOffset = _c.lineDashOffset, lineCap = _c.lineCap, lineJoin = _c.lineJoin, strokeShadow = _c.strokeShadow, text = _c.text, x = _c.x, y = _c.y;\n            if (lineDash) {\n                ctx.setLineDash(lineDash);\n            }\n            if (lineDashOffset) {\n                ctx.lineDashOffset = lineDashOffset;\n            }\n            if (lineCap) {\n                ctx.lineCap = lineCap;\n            }\n            if (lineJoin) {\n                ctx.lineJoin = lineJoin;\n            }\n            if (strokeShadow && strokeShadow.enabled) {\n                ctx.shadowColor = strokeShadow.color;\n                ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n            }\n            ctx.strokeText(text, x, y);\n        }\n        this.dirty = false;\n    };\n    Text.className = 'Text';\n    Text.defaultStyles = chainObjects(Shape.defaultStyles, {\n        textAlign: 'start',\n        fontStyle: undefined,\n        fontWeight: undefined,\n        fontSize: 10,\n        fontFamily: 'sans-serif',\n        textBaseline: 'alphabetic'\n    });\n    return Text;\n}(Shape));\nexport { Text };\n"]},"metadata":{},"sourceType":"module"}