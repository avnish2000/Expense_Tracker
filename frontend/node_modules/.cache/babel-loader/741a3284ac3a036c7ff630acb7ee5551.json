{"ast":null,"code":"import timeDay from \"../day\";\nimport year from \"../year\";\nimport { sunday as timeSunday, monday as timeMonday, thursday as timeThursday } from \"../week\";\nimport utcDay from \"../utcDay\";\nimport utcYear from \"../utcYear\";\nimport utcSunday, { utcMonday, utcThursday } from \"../utcWeek\";\n\nfunction localDate(d) {\n  // For JS Dates the [0, 100) interval is a time warp, a fast forward to the 20th century.\n  // For example, -1 is -0001 BC, 0 is already 1900 AD.\n  if (d.y >= 0 && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (d.y >= 0 && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n/**\n * Creates a lookup map for array of names to go from a name to index.\n * @param names\n */\n\n\nfunction formatLookup(names) {\n  var map = {};\n\n  for (var i = 0, n = names.length; i < n; i++) {\n    map[names[i].toLowerCase()] = i;\n  }\n\n  return map;\n}\n\nfunction newYear(y) {\n  return {\n    y: y,\n    m: 0,\n    d: 1,\n    H: 0,\n    M: 0,\n    S: 0,\n    L: 0\n  };\n}\n\nvar percentCharCode = 37;\nvar numberRe = /^\\s*\\d+/; // ignores next directive\n\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n/**\n * Prepends any character in the `requoteRe` set with a backslash.\n * @param s\n */\n\nexport var requote = function (s) {\n  return s.replace(requoteRe, '\\\\$&');\n}; // $& - matched substring\n\n/**\n * Returns a RegExp that matches any string that starts with any of the given names (case insensitive).\n * @param names\n */\n\nexport var formatRe = function (names) {\n  return new RegExp('^(?:' + names.map(requote).join('|') + ')', 'i');\n}; // A map of padding modifiers to padding strings. Default is `0`.\n\nvar pads = {\n  '-': '',\n  '_': ' ',\n  '0': '0'\n};\nexport function pad(value, fill, width) {\n  var sign = value < 0 ? '-' : '';\n  var string = String(sign ? -value : value);\n  var length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n/**\n * Create a new time-locale-based object which exposes time-formatting\n * methods for the specified locale definition.\n *\n * @param timeLocale A time locale definition.\n */\n\nexport default function formatLocale(timeLocale) {\n  var lDateTime = timeLocale.dateTime;\n  var lDate = timeLocale.date;\n  var lTime = timeLocale.time;\n  var lPeriods = timeLocale.periods;\n  var lWeekdays = timeLocale.days;\n  var lShortWeekdays = timeLocale.shortDays;\n  var lMonths = timeLocale.months;\n  var lShortMonths = timeLocale.shortMonths;\n  var periodRe = formatRe(lPeriods);\n  var periodLookup = formatLookup(lPeriods);\n  var weekdayRe = formatRe(lWeekdays);\n  var weekdayLookup = formatLookup(lWeekdays);\n  var shortWeekdayRe = formatRe(lShortWeekdays);\n  var shortWeekdayLookup = formatLookup(lShortWeekdays);\n  var monthRe = formatRe(lMonths);\n  var monthLookup = formatLookup(lMonths);\n  var shortMonthRe = formatRe(lShortMonths);\n  var shortMonthLookup = formatLookup(lShortMonths);\n  var formats = {\n    'a': formatShortWeekday,\n    'A': formatWeekday,\n    'b': formatShortMonth,\n    'B': formatMonth,\n    'c': undefined,\n    'd': formatDayOfMonth,\n    'e': formatDayOfMonth,\n    'f': formatMicroseconds,\n    'H': formatHour24,\n    'I': formatHour12,\n    'j': formatDayOfYear,\n    'L': formatMilliseconds,\n    'm': formatMonthNumber,\n    'M': formatMinutes,\n    'p': formatPeriod,\n    'Q': formatUnixTimestamp,\n    's': formatUnixTimestampSeconds,\n    'S': formatSeconds,\n    'u': formatWeekdayNumberMonday,\n    'U': formatWeekNumberSunday,\n    'V': formatWeekNumberISO,\n    'w': formatWeekdayNumberSunday,\n    'W': formatWeekNumberMonday,\n    'x': undefined,\n    'X': undefined,\n    'y': formatYear,\n    'Y': formatFullYear,\n    'Z': formatZone,\n    '%': formatLiteralPercent\n  };\n  var utcFormats = {\n    'a': formatUTCShortWeekday,\n    'A': formatUTCWeekday,\n    'b': formatUTCShortMonth,\n    'B': formatUTCMonth,\n    'c': undefined,\n    'd': formatUTCDayOfMonth,\n    'e': formatUTCDayOfMonth,\n    'f': formatUTCMicroseconds,\n    'H': formatUTCHour24,\n    'I': formatUTCHour12,\n    'j': formatUTCDayOfYear,\n    'L': formatUTCMilliseconds,\n    'm': formatUTCMonthNumber,\n    'M': formatUTCMinutes,\n    'p': formatUTCPeriod,\n    'Q': formatUnixTimestamp,\n    's': formatUnixTimestampSeconds,\n    'S': formatUTCSeconds,\n    'u': formatUTCWeekdayNumberMonday,\n    'U': formatUTCWeekNumberSunday,\n    'V': formatUTCWeekNumberISO,\n    'w': formatUTCWeekdayNumberSunday,\n    'W': formatUTCWeekNumberMonday,\n    'x': undefined,\n    'X': undefined,\n    'y': formatUTCYear,\n    'Y': formatUTCFullYear,\n    'Z': formatUTCZone,\n    '%': formatLiteralPercent\n  };\n  var parses = {\n    'a': parseShortWeekday,\n    'A': parseWeekday,\n    'b': parseShortMonth,\n    'B': parseMonth,\n    'c': parseLocaleDateTime,\n    'd': parseDayOfMonth,\n    'e': parseDayOfMonth,\n    'f': parseMicroseconds,\n    'H': parseHour24,\n    'I': parseHour24,\n    'j': parseDayOfYear,\n    'L': parseMilliseconds,\n    'm': parseMonthNumber,\n    'M': parseMinutes,\n    'p': parsePeriod,\n    'Q': parseUnixTimestamp,\n    's': parseUnixTimestampSeconds,\n    'S': parseSeconds,\n    'u': parseWeekdayNumberMonday,\n    'U': parseWeekNumberSunday,\n    'V': parseWeekNumberISO,\n    'w': parseWeekdayNumberSunday,\n    'W': parseWeekNumberMonday,\n    'x': parseLocaleDate,\n    'X': parseLocaleTime,\n    'y': parseYear,\n    'Y': parseFullYear,\n    'Z': parseZone,\n    '%': parseLiteralPercent\n  }; // Recursive definitions.\n\n  formats.x = newFormat(lDate, formats);\n  formats.X = newFormat(lTime, formats);\n  formats.c = newFormat(lDateTime, formats);\n  utcFormats.x = newFormat(lDate, utcFormats);\n  utcFormats.X = newFormat(lTime, utcFormats);\n  utcFormats.c = newFormat(lDateTime, utcFormats);\n\n  function newParse(specifier, newDate) {\n    return function (str) {\n      var d = newYear(1900);\n      var i = parseSpecifier(d, specifier, str += '', 0);\n\n      if (i != str.length) {\n        return undefined;\n      } // If a UNIX timestamp is specified, return it.\n\n\n      if ('Q' in d) {\n        return new Date(d.Q);\n      } // The am-pm flag is 0 for AM, and 1 for PM.\n\n\n      if ('p' in d) {\n        d.H = d.H % 12 + d.p * 12;\n      } // Convert day-of-week and week-of-year to day-of-year.\n\n\n      if ('V' in d) {\n        if (d.V < 1 || d.V > 53) {\n          return undefined;\n        }\n\n        if (!('w' in d)) {\n          d.w = 1;\n        }\n\n        if ('Z' in d) {\n          var week = utcDate(newYear(d.y));\n          var day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday.floor(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          var week = newDate(newYear(d.y));\n          var day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday.floor(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if ('W' in d || 'U' in d) {\n        if (!('w' in d)) {\n          d.w = 'u' in d ? d.u % 7 : 'W' in d ? 1 : 0;\n        }\n\n        var day = 'Z' in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = 'W' in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      } // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n\n\n      if ('Z' in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      } // Otherwise, all fields are in local time.\n\n\n      return newDate(d);\n    };\n  }\n  /**\n   * Creates a new function that formats the given Date or timestamp according to specifier.\n   * @param specifier\n   * @param formats\n   */\n\n\n  function newFormat(specifier, formats) {\n    return function (date) {\n      var string = [];\n      var n = specifier.length;\n      var i = -1;\n      var j = 0;\n\n      if (!(date instanceof Date)) {\n        date = new Date(+date);\n      }\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === percentCharCode) {\n          string.push(specifier.slice(j, i)); // copy the chunks of specifier with no directives as is\n\n          var c = specifier.charAt(++i);\n          var pad_1 = pads[c];\n\n          if (pad_1 != undefined) {\n            // if format directive has a padding modifier in front of it\n            c = specifier.charAt(++i); // fetch the directive itself\n          } else {\n            pad_1 = c === 'e' ? ' ' : '0'; // use the default padding modifier\n          }\n\n          var format = formats[c];\n\n          if (format) {\n            // if the directive has a corresponding formatting function\n            c = format(date, pad_1); // replace the directive with the formatted date\n          }\n\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join('');\n    };\n  } // Simultaneously walks over the specifier and the parsed string, populating the `d` map with parsed values.\n  // The returned number is expected to equal the length of the parsed `string`, if parsing succeeded.\n\n\n  function parseSpecifier(d, specifier, string, j) {\n    // i - `specifier` string index\n    // j - parsed `string` index\n    var i = 0;\n    var n = specifier.length;\n    var m = string.length;\n\n    while (i < n) {\n      if (j >= m) {\n        return -1;\n      }\n\n      var code = specifier.charCodeAt(i++);\n\n      if (code === percentCharCode) {\n        var char = specifier.charAt(i++);\n        var parse = parses[char in pads ? specifier.charAt(i++) : char];\n\n        if (!parse || (j = parse(d, string, j)) < 0) {\n          return -1;\n        }\n      } else if (code != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  } // ----------------------------- formats ----------------------------------\n\n\n  function formatMicroseconds(date, fill) {\n    return formatMilliseconds(date, fill) + '000';\n  }\n\n  function formatMilliseconds(date, fill) {\n    return pad(date.getMilliseconds(), fill, 3);\n  }\n\n  function formatSeconds(date, fill) {\n    return pad(date.getSeconds(), fill, 2);\n  }\n\n  function formatMinutes(date, fill) {\n    return pad(date.getMinutes(), fill, 2);\n  }\n\n  function formatHour12(date, fill) {\n    return pad(date.getHours() % 12 || 12, fill, 2);\n  }\n\n  function formatHour24(date, fill) {\n    return pad(date.getHours(), fill, 2);\n  }\n\n  function formatPeriod(date) {\n    return lPeriods[date.getHours() >= 12 ? 1 : 0];\n  }\n\n  function formatShortWeekday(date) {\n    return lShortWeekdays[date.getDay()];\n  }\n\n  function formatWeekday(date) {\n    return lWeekdays[date.getDay()];\n  }\n\n  function formatWeekdayNumberMonday(date) {\n    var dayOfWeek = date.getDay();\n    return dayOfWeek === 0 ? 7 : dayOfWeek;\n  }\n\n  function formatWeekNumberSunday(date, fill) {\n    return pad(timeSunday.count(year.floor(date), date), fill, 2);\n  }\n\n  function formatWeekNumberISO(date, fill) {\n    var day = date.getDay();\n    date = day >= 4 || day === 0 ? timeThursday.floor(date) : timeThursday.ceil(date);\n    var yearStart = year.floor(date);\n    return pad(timeThursday.count(yearStart, date) + (yearStart.getDay() === 4 ? 1 : 0), fill, 2);\n  }\n\n  function formatWeekdayNumberSunday(date) {\n    return date.getDay();\n  }\n\n  function formatWeekNumberMonday(date, fill) {\n    return pad(timeMonday.count(year.floor(date), date), fill, 2);\n  }\n\n  function formatDayOfMonth(date, fill) {\n    return pad(date.getDate(), fill, 2);\n  }\n\n  function formatDayOfYear(date, fill) {\n    return pad(1 + timeDay.count(year.floor(date), date), fill, 3);\n  }\n\n  function formatShortMonth(date) {\n    return lShortMonths[date.getMonth()];\n  }\n\n  function formatMonth(date) {\n    return lMonths[date.getMonth()];\n  }\n\n  function formatMonthNumber(date, fill) {\n    return pad(date.getMonth() + 1, fill, 2);\n  }\n\n  function formatYear(date, fill) {\n    return pad(date.getFullYear() % 100, fill, 2);\n  }\n\n  function formatFullYear(date, fill) {\n    return pad(date.getFullYear() % 10000, fill, 4);\n  }\n\n  function formatZone(date) {\n    var z = date.getTimezoneOffset();\n    return (z > 0 ? '-' : (z *= -1, '+')) + pad(Math.floor(z / 60), '0', 2) + pad(z % 60, '0', 2);\n  } // -------------------------- UTC formats -----------------------------------\n\n\n  function formatUTCMicroseconds(date, fill) {\n    return formatUTCMilliseconds(date, fill) + '000';\n  }\n\n  function formatUTCMilliseconds(date, fill) {\n    return pad(date.getUTCMilliseconds(), fill, 3);\n  }\n\n  function formatUTCSeconds(date, fill) {\n    return pad(date.getUTCSeconds(), fill, 2);\n  }\n\n  function formatUTCMinutes(date, fill) {\n    return pad(date.getUTCMinutes(), fill, 2);\n  }\n\n  function formatUTCHour12(date, fill) {\n    return pad(date.getUTCHours() % 12 || 12, fill, 2);\n  }\n\n  function formatUTCHour24(date, fill) {\n    return pad(date.getUTCHours(), fill, 2);\n  }\n\n  function formatUTCPeriod(date) {\n    return lPeriods[date.getUTCHours() >= 12 ? 1 : 0];\n  }\n\n  function formatUTCDayOfMonth(date, fill) {\n    return pad(date.getUTCDate(), fill, 2);\n  }\n\n  function formatUTCDayOfYear(date, fill) {\n    return pad(1 + utcDay.count(utcYear.floor(date), date), fill, 3);\n  }\n\n  function formatUTCMonthNumber(date, fill) {\n    return pad(date.getUTCMonth() + 1, fill, 2);\n  }\n\n  function formatUTCShortMonth(date) {\n    return lShortMonths[date.getUTCMonth()];\n  }\n\n  function formatUTCMonth(date) {\n    return lMonths[date.getUTCMonth()];\n  }\n\n  function formatUTCShortWeekday(date) {\n    return lShortWeekdays[date.getUTCDay()];\n  }\n\n  function formatUTCWeekday(date) {\n    return lWeekdays[date.getUTCDay()];\n  }\n\n  function formatUTCWeekdayNumberMonday(date) {\n    var dayOfWeek = date.getUTCDay();\n    return dayOfWeek === 0 ? 7 : dayOfWeek;\n  }\n\n  function formatUTCWeekNumberSunday(date, fill) {\n    return pad(utcSunday.count(utcYear.floor(date), date), fill, 2);\n  }\n\n  function formatUTCWeekNumberISO(date, fill) {\n    var day = date.getUTCDay();\n    date = day >= 4 || day === 0 ? utcThursday.floor(date) : utcThursday.ceil(date);\n    var yearStart = utcYear.floor(date);\n    return pad(utcThursday.count(yearStart, date) + (yearStart.getUTCDay() === 4 ? 1 : 0), fill, 4);\n  }\n\n  function formatUTCWeekdayNumberSunday(date) {\n    return date.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(date, fill) {\n    return pad(utcMonday.count(utcYear.floor(date), date), fill, 2);\n  }\n\n  function formatUTCYear(date, fill) {\n    return pad(date.getUTCFullYear() % 100, fill, 2);\n  }\n\n  function formatUTCFullYear(date, fill) {\n    return pad(date.getUTCFullYear() % 10000, fill, 4);\n  }\n\n  function formatUTCZone() {\n    return '+0000';\n  }\n\n  function formatLiteralPercent(date) {\n    return '%';\n  }\n\n  function formatUnixTimestamp(date) {\n    return date.getTime();\n  }\n\n  function formatUnixTimestampSeconds(date) {\n    return Math.floor(date.getTime() / 1000);\n  } // ------------------------------- parsers ------------------------------------\n\n\n  function parseMicroseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 6));\n    return n ? (d.L = Math.floor(parseFloat(n[0]) / 1000), i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekdayNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.u = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberISO(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.V = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekdayNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = parseFloat(n[0]) - 1, i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, lDateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, lDate, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, lTime, string, i);\n  }\n\n  function parseUnixTimestamp(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.Q = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseUnixTimestampSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || '00')), i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  return {\n    format: function (specifier) {\n      var f = newFormat(specifier, formats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    parse: function (specifier) {\n      var p = newParse(specifier, localDate);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    },\n    utcFormat: function (specifier) {\n      var f = newFormat(specifier, utcFormats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    utcParse: function (specifier) {\n      var p = newParse(specifier, utcDate);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    }\n  };\n}","map":{"version":3,"sources":["E:/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/util/time/format/locale.js"],"names":["timeDay","year","sunday","timeSunday","monday","timeMonday","thursday","timeThursday","utcDay","utcYear","utcSunday","utcMonday","utcThursday","localDate","d","y","date","Date","m","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","formatLookup","names","map","i","n","length","toLowerCase","newYear","percentCharCode","numberRe","percentRe","requoteRe","requote","s","replace","formatRe","RegExp","join","pads","pad","value","fill","width","sign","string","String","Array","formatLocale","timeLocale","lDateTime","dateTime","lDate","lTime","time","lPeriods","periods","lWeekdays","days","lShortWeekdays","shortDays","lMonths","months","lShortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","undefined","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatPeriod","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCPeriod","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parsePeriod","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseLocaleDate","parseLocaleTime","parseYear","parseFullYear","parseZone","parseLiteralPercent","x","newFormat","X","c","newParse","specifier","newDate","str","parseSpecifier","Q","p","V","w","week","day","getUTCDay","ceil","floor","offset","getUTCFullYear","getUTCMonth","getUTCDate","getDay","getFullYear","getMonth","getDate","u","W","U","Z","j","charCodeAt","push","slice","charAt","pad_1","format","code","char","parse","getMilliseconds","getSeconds","getMinutes","getHours","dayOfWeek","count","yearStart","z","getTimezoneOffset","Math","getUTCMilliseconds","getUTCSeconds","getUTCMinutes","getUTCHours","getTime","exec","parseFloat","f","toString","utcFormat","utcParse"],"mappings":"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","sourcesContent":["import timeDay from \"../day\";\nimport year from \"../year\";\nimport { sunday as timeSunday, monday as timeMonday, thursday as timeThursday } from \"../week\";\nimport utcDay from \"../utcDay\";\nimport utcYear from \"../utcYear\";\nimport utcSunday, { utcMonday, utcThursday } from \"../utcWeek\";\nfunction localDate(d) {\n    // For JS Dates the [0, 100) interval is a time warp, a fast forward to the 20th century.\n    // For example, -1 is -0001 BC, 0 is already 1900 AD.\n    if (d.y >= 0 && d.y < 100) {\n        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n        date.setFullYear(d.y);\n        return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\nfunction utcDate(d) {\n    if (d.y >= 0 && d.y < 100) {\n        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n        date.setUTCFullYear(d.y);\n        return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n/**\n * Creates a lookup map for array of names to go from a name to index.\n * @param names\n */\nfunction formatLookup(names) {\n    var map = {};\n    for (var i = 0, n = names.length; i < n; i++) {\n        map[names[i].toLowerCase()] = i;\n    }\n    return map;\n}\nfunction newYear(y) {\n    return {\n        y: y,\n        m: 0,\n        d: 1,\n        H: 0,\n        M: 0,\n        S: 0,\n        L: 0\n    };\n}\nvar percentCharCode = 37;\nvar numberRe = /^\\s*\\d+/; // ignores next directive\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n/**\n * Prepends any character in the `requoteRe` set with a backslash.\n * @param s\n */\nexport var requote = function (s) { return s.replace(requoteRe, '\\\\$&'); }; // $& - matched substring\n/**\n * Returns a RegExp that matches any string that starts with any of the given names (case insensitive).\n * @param names\n */\nexport var formatRe = function (names) { return new RegExp('^(?:' + names.map(requote).join('|') + ')', 'i'); };\n// A map of padding modifiers to padding strings. Default is `0`.\nvar pads = {\n    '-': '',\n    '_': ' ',\n    '0': '0'\n};\nexport function pad(value, fill, width) {\n    var sign = value < 0 ? '-' : '';\n    var string = String(sign ? -value : value);\n    var length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n/**\n * Create a new time-locale-based object which exposes time-formatting\n * methods for the specified locale definition.\n *\n * @param timeLocale A time locale definition.\n */\nexport default function formatLocale(timeLocale) {\n    var lDateTime = timeLocale.dateTime;\n    var lDate = timeLocale.date;\n    var lTime = timeLocale.time;\n    var lPeriods = timeLocale.periods;\n    var lWeekdays = timeLocale.days;\n    var lShortWeekdays = timeLocale.shortDays;\n    var lMonths = timeLocale.months;\n    var lShortMonths = timeLocale.shortMonths;\n    var periodRe = formatRe(lPeriods);\n    var periodLookup = formatLookup(lPeriods);\n    var weekdayRe = formatRe(lWeekdays);\n    var weekdayLookup = formatLookup(lWeekdays);\n    var shortWeekdayRe = formatRe(lShortWeekdays);\n    var shortWeekdayLookup = formatLookup(lShortWeekdays);\n    var monthRe = formatRe(lMonths);\n    var monthLookup = formatLookup(lMonths);\n    var shortMonthRe = formatRe(lShortMonths);\n    var shortMonthLookup = formatLookup(lShortMonths);\n    var formats = {\n        'a': formatShortWeekday,\n        'A': formatWeekday,\n        'b': formatShortMonth,\n        'B': formatMonth,\n        'c': undefined,\n        'd': formatDayOfMonth,\n        'e': formatDayOfMonth,\n        'f': formatMicroseconds,\n        'H': formatHour24,\n        'I': formatHour12,\n        'j': formatDayOfYear,\n        'L': formatMilliseconds,\n        'm': formatMonthNumber,\n        'M': formatMinutes,\n        'p': formatPeriod,\n        'Q': formatUnixTimestamp,\n        's': formatUnixTimestampSeconds,\n        'S': formatSeconds,\n        'u': formatWeekdayNumberMonday,\n        'U': formatWeekNumberSunday,\n        'V': formatWeekNumberISO,\n        'w': formatWeekdayNumberSunday,\n        'W': formatWeekNumberMonday,\n        'x': undefined,\n        'X': undefined,\n        'y': formatYear,\n        'Y': formatFullYear,\n        'Z': formatZone,\n        '%': formatLiteralPercent\n    };\n    var utcFormats = {\n        'a': formatUTCShortWeekday,\n        'A': formatUTCWeekday,\n        'b': formatUTCShortMonth,\n        'B': formatUTCMonth,\n        'c': undefined,\n        'd': formatUTCDayOfMonth,\n        'e': formatUTCDayOfMonth,\n        'f': formatUTCMicroseconds,\n        'H': formatUTCHour24,\n        'I': formatUTCHour12,\n        'j': formatUTCDayOfYear,\n        'L': formatUTCMilliseconds,\n        'm': formatUTCMonthNumber,\n        'M': formatUTCMinutes,\n        'p': formatUTCPeriod,\n        'Q': formatUnixTimestamp,\n        's': formatUnixTimestampSeconds,\n        'S': formatUTCSeconds,\n        'u': formatUTCWeekdayNumberMonday,\n        'U': formatUTCWeekNumberSunday,\n        'V': formatUTCWeekNumberISO,\n        'w': formatUTCWeekdayNumberSunday,\n        'W': formatUTCWeekNumberMonday,\n        'x': undefined,\n        'X': undefined,\n        'y': formatUTCYear,\n        'Y': formatUTCFullYear,\n        'Z': formatUTCZone,\n        '%': formatLiteralPercent\n    };\n    var parses = {\n        'a': parseShortWeekday,\n        'A': parseWeekday,\n        'b': parseShortMonth,\n        'B': parseMonth,\n        'c': parseLocaleDateTime,\n        'd': parseDayOfMonth,\n        'e': parseDayOfMonth,\n        'f': parseMicroseconds,\n        'H': parseHour24,\n        'I': parseHour24,\n        'j': parseDayOfYear,\n        'L': parseMilliseconds,\n        'm': parseMonthNumber,\n        'M': parseMinutes,\n        'p': parsePeriod,\n        'Q': parseUnixTimestamp,\n        's': parseUnixTimestampSeconds,\n        'S': parseSeconds,\n        'u': parseWeekdayNumberMonday,\n        'U': parseWeekNumberSunday,\n        'V': parseWeekNumberISO,\n        'w': parseWeekdayNumberSunday,\n        'W': parseWeekNumberMonday,\n        'x': parseLocaleDate,\n        'X': parseLocaleTime,\n        'y': parseYear,\n        'Y': parseFullYear,\n        'Z': parseZone,\n        '%': parseLiteralPercent\n    };\n    // Recursive definitions.\n    formats.x = newFormat(lDate, formats);\n    formats.X = newFormat(lTime, formats);\n    formats.c = newFormat(lDateTime, formats);\n    utcFormats.x = newFormat(lDate, utcFormats);\n    utcFormats.X = newFormat(lTime, utcFormats);\n    utcFormats.c = newFormat(lDateTime, utcFormats);\n    function newParse(specifier, newDate) {\n        return function (str) {\n            var d = newYear(1900);\n            var i = parseSpecifier(d, specifier, str += '', 0);\n            if (i != str.length) {\n                return undefined;\n            }\n            // If a UNIX timestamp is specified, return it.\n            if ('Q' in d) {\n                return new Date(d.Q);\n            }\n            // The am-pm flag is 0 for AM, and 1 for PM.\n            if ('p' in d) {\n                d.H = d.H % 12 + d.p * 12;\n            }\n            // Convert day-of-week and week-of-year to day-of-year.\n            if ('V' in d) {\n                if (d.V < 1 || d.V > 53) {\n                    return undefined;\n                }\n                if (!('w' in d)) {\n                    d.w = 1;\n                }\n                if ('Z' in d) {\n                    var week = utcDate(newYear(d.y));\n                    var day = week.getUTCDay();\n                    week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday.floor(week);\n                    week = utcDay.offset(week, (d.V - 1) * 7);\n                    d.y = week.getUTCFullYear();\n                    d.m = week.getUTCMonth();\n                    d.d = week.getUTCDate() + (d.w + 6) % 7;\n                }\n                else {\n                    var week = newDate(newYear(d.y));\n                    var day = week.getDay();\n                    week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday.floor(week);\n                    week = timeDay.offset(week, (d.V - 1) * 7);\n                    d.y = week.getFullYear();\n                    d.m = week.getMonth();\n                    d.d = week.getDate() + (d.w + 6) % 7;\n                }\n            }\n            else if ('W' in d || 'U' in d) {\n                if (!('w' in d)) {\n                    d.w = 'u' in d\n                        ? d.u % 7\n                        : 'W' in d ? 1 : 0;\n                }\n                var day = 'Z' in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n                d.m = 0;\n                d.d = 'W' in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n            }\n            // If a time zone is specified, all fields are interpreted as UTC and then\n            // offset according to the specified time zone.\n            if ('Z' in d) {\n                d.H += d.Z / 100 | 0;\n                d.M += d.Z % 100;\n                return utcDate(d);\n            }\n            // Otherwise, all fields are in local time.\n            return newDate(d);\n        };\n    }\n    /**\n     * Creates a new function that formats the given Date or timestamp according to specifier.\n     * @param specifier\n     * @param formats\n     */\n    function newFormat(specifier, formats) {\n        return function (date) {\n            var string = [];\n            var n = specifier.length;\n            var i = -1;\n            var j = 0;\n            if (!(date instanceof Date)) {\n                date = new Date(+date);\n            }\n            while (++i < n) {\n                if (specifier.charCodeAt(i) === percentCharCode) {\n                    string.push(specifier.slice(j, i)); // copy the chunks of specifier with no directives as is\n                    var c = specifier.charAt(++i);\n                    var pad_1 = pads[c];\n                    if (pad_1 != undefined) { // if format directive has a padding modifier in front of it\n                        c = specifier.charAt(++i); // fetch the directive itself\n                    }\n                    else {\n                        pad_1 = c === 'e' ? ' ' : '0'; // use the default padding modifier\n                    }\n                    var format = formats[c];\n                    if (format) { // if the directive has a corresponding formatting function\n                        c = format(date, pad_1); // replace the directive with the formatted date\n                    }\n                    string.push(c);\n                    j = i + 1;\n                }\n            }\n            string.push(specifier.slice(j, i));\n            return string.join('');\n        };\n    }\n    // Simultaneously walks over the specifier and the parsed string, populating the `d` map with parsed values.\n    // The returned number is expected to equal the length of the parsed `string`, if parsing succeeded.\n    function parseSpecifier(d, specifier, string, j) {\n        // i - `specifier` string index\n        // j - parsed `string` index\n        var i = 0;\n        var n = specifier.length;\n        var m = string.length;\n        while (i < n) {\n            if (j >= m) {\n                return -1;\n            }\n            var code = specifier.charCodeAt(i++);\n            if (code === percentCharCode) {\n                var char = specifier.charAt(i++);\n                var parse = parses[(char in pads ? specifier.charAt(i++) : char)];\n                if (!parse || ((j = parse(d, string, j)) < 0)) {\n                    return -1;\n                }\n            }\n            else if (code != string.charCodeAt(j++)) {\n                return -1;\n            }\n        }\n        return j;\n    }\n    // ----------------------------- formats ----------------------------------\n    function formatMicroseconds(date, fill) {\n        return formatMilliseconds(date, fill) + '000';\n    }\n    function formatMilliseconds(date, fill) {\n        return pad(date.getMilliseconds(), fill, 3);\n    }\n    function formatSeconds(date, fill) {\n        return pad(date.getSeconds(), fill, 2);\n    }\n    function formatMinutes(date, fill) {\n        return pad(date.getMinutes(), fill, 2);\n    }\n    function formatHour12(date, fill) {\n        return pad(date.getHours() % 12 || 12, fill, 2);\n    }\n    function formatHour24(date, fill) {\n        return pad(date.getHours(), fill, 2);\n    }\n    function formatPeriod(date) {\n        return lPeriods[date.getHours() >= 12 ? 1 : 0];\n    }\n    function formatShortWeekday(date) {\n        return lShortWeekdays[date.getDay()];\n    }\n    function formatWeekday(date) {\n        return lWeekdays[date.getDay()];\n    }\n    function formatWeekdayNumberMonday(date) {\n        var dayOfWeek = date.getDay();\n        return dayOfWeek === 0 ? 7 : dayOfWeek;\n    }\n    function formatWeekNumberSunday(date, fill) {\n        return pad(timeSunday.count(year.floor(date), date), fill, 2);\n    }\n    function formatWeekNumberISO(date, fill) {\n        var day = date.getDay();\n        date = (day >= 4 || day === 0) ? timeThursday.floor(date) : timeThursday.ceil(date);\n        var yearStart = year.floor(date);\n        return pad(timeThursday.count(yearStart, date) + (yearStart.getDay() === 4 ? 1 : 0), fill, 2);\n    }\n    function formatWeekdayNumberSunday(date) {\n        return date.getDay();\n    }\n    function formatWeekNumberMonday(date, fill) {\n        return pad(timeMonday.count(year.floor(date), date), fill, 2);\n    }\n    function formatDayOfMonth(date, fill) {\n        return pad(date.getDate(), fill, 2);\n    }\n    function formatDayOfYear(date, fill) {\n        return pad(1 + timeDay.count(year.floor(date), date), fill, 3);\n    }\n    function formatShortMonth(date) {\n        return lShortMonths[date.getMonth()];\n    }\n    function formatMonth(date) {\n        return lMonths[date.getMonth()];\n    }\n    function formatMonthNumber(date, fill) {\n        return pad(date.getMonth() + 1, fill, 2);\n    }\n    function formatYear(date, fill) {\n        return pad(date.getFullYear() % 100, fill, 2);\n    }\n    function formatFullYear(date, fill) {\n        return pad(date.getFullYear() % 10000, fill, 4);\n    }\n    function formatZone(date) {\n        var z = date.getTimezoneOffset();\n        return (z > 0 ? '-' : (z *= -1, '+')) + pad(Math.floor(z / 60), '0', 2) + pad(z % 60, '0', 2);\n    }\n    // -------------------------- UTC formats -----------------------------------\n    function formatUTCMicroseconds(date, fill) {\n        return formatUTCMilliseconds(date, fill) + '000';\n    }\n    function formatUTCMilliseconds(date, fill) {\n        return pad(date.getUTCMilliseconds(), fill, 3);\n    }\n    function formatUTCSeconds(date, fill) {\n        return pad(date.getUTCSeconds(), fill, 2);\n    }\n    function formatUTCMinutes(date, fill) {\n        return pad(date.getUTCMinutes(), fill, 2);\n    }\n    function formatUTCHour12(date, fill) {\n        return pad(date.getUTCHours() % 12 || 12, fill, 2);\n    }\n    function formatUTCHour24(date, fill) {\n        return pad(date.getUTCHours(), fill, 2);\n    }\n    function formatUTCPeriod(date) {\n        return lPeriods[date.getUTCHours() >= 12 ? 1 : 0];\n    }\n    function formatUTCDayOfMonth(date, fill) {\n        return pad(date.getUTCDate(), fill, 2);\n    }\n    function formatUTCDayOfYear(date, fill) {\n        return pad(1 + utcDay.count(utcYear.floor(date), date), fill, 3);\n    }\n    function formatUTCMonthNumber(date, fill) {\n        return pad(date.getUTCMonth() + 1, fill, 2);\n    }\n    function formatUTCShortMonth(date) {\n        return lShortMonths[date.getUTCMonth()];\n    }\n    function formatUTCMonth(date) {\n        return lMonths[date.getUTCMonth()];\n    }\n    function formatUTCShortWeekday(date) {\n        return lShortWeekdays[date.getUTCDay()];\n    }\n    function formatUTCWeekday(date) {\n        return lWeekdays[date.getUTCDay()];\n    }\n    function formatUTCWeekdayNumberMonday(date) {\n        var dayOfWeek = date.getUTCDay();\n        return dayOfWeek === 0 ? 7 : dayOfWeek;\n    }\n    function formatUTCWeekNumberSunday(date, fill) {\n        return pad(utcSunday.count(utcYear.floor(date), date), fill, 2);\n    }\n    function formatUTCWeekNumberISO(date, fill) {\n        var day = date.getUTCDay();\n        date = (day >= 4 || day === 0) ? utcThursday.floor(date) : utcThursday.ceil(date);\n        var yearStart = utcYear.floor(date);\n        return pad(utcThursday.count(yearStart, date) + (yearStart.getUTCDay() === 4 ? 1 : 0), fill, 4);\n    }\n    function formatUTCWeekdayNumberSunday(date) {\n        return date.getUTCDay();\n    }\n    function formatUTCWeekNumberMonday(date, fill) {\n        return pad(utcMonday.count(utcYear.floor(date), date), fill, 2);\n    }\n    function formatUTCYear(date, fill) {\n        return pad(date.getUTCFullYear() % 100, fill, 2);\n    }\n    function formatUTCFullYear(date, fill) {\n        return pad(date.getUTCFullYear() % 10000, fill, 4);\n    }\n    function formatUTCZone() {\n        return '+0000';\n    }\n    function formatLiteralPercent(date) {\n        return '%';\n    }\n    function formatUnixTimestamp(date) {\n        return date.getTime();\n    }\n    function formatUnixTimestampSeconds(date) {\n        return Math.floor(date.getTime() / 1000);\n    }\n    // ------------------------------- parsers ------------------------------------\n    function parseMicroseconds(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 6));\n        return n ? (d.L = Math.floor(parseFloat(n[0]) / 1000), i + n[0].length) : -1;\n    }\n    function parseMilliseconds(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 3));\n        return n ? (d.L = +n[0], i + n[0].length) : -1;\n    }\n    function parseSeconds(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.S = +n[0], i + n[0].length) : -1;\n    }\n    function parseMinutes(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.M = +n[0], i + n[0].length) : -1;\n    }\n    function parseHour24(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.H = +n[0], i + n[0].length) : -1;\n    }\n    function parsePeriod(d, string, i) {\n        var n = periodRe.exec(string.slice(i));\n        return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n    function parseDayOfMonth(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.d = +n[0], i + n[0].length) : -1;\n    }\n    function parseDayOfYear(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 3));\n        return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n    }\n    function parseShortWeekday(d, string, i) {\n        var n = shortWeekdayRe.exec(string.slice(i));\n        return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n    function parseWeekday(d, string, i) {\n        var n = weekdayRe.exec(string.slice(i));\n        return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n    function parseWeekdayNumberMonday(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 1));\n        return n ? (d.u = +n[0], i + n[0].length) : -1;\n    }\n    function parseWeekNumberSunday(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.U = +n[0], i + n[0].length) : -1;\n    }\n    function parseWeekNumberISO(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.V = +n[0], i + n[0].length) : -1;\n    }\n    function parseWeekNumberMonday(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.W = +n[0], i + n[0].length) : -1;\n    }\n    function parseWeekdayNumberSunday(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 1));\n        return n ? (d.w = +n[0], i + n[0].length) : -1;\n    }\n    function parseShortMonth(d, string, i) {\n        var n = shortMonthRe.exec(string.slice(i));\n        return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n    function parseMonth(d, string, i) {\n        var n = monthRe.exec(string.slice(i));\n        return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n    function parseMonthNumber(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.m = parseFloat(n[0]) - 1, i + n[0].length) : -1;\n    }\n    function parseLocaleDateTime(d, string, i) {\n        return parseSpecifier(d, lDateTime, string, i);\n    }\n    function parseLocaleDate(d, string, i) {\n        return parseSpecifier(d, lDate, string, i);\n    }\n    function parseLocaleTime(d, string, i) {\n        return parseSpecifier(d, lTime, string, i);\n    }\n    function parseUnixTimestamp(d, string, i) {\n        var n = numberRe.exec(string.slice(i));\n        return n ? (d.Q = +n[0], i + n[0].length) : -1;\n    }\n    function parseUnixTimestampSeconds(d, string, i) {\n        var n = numberRe.exec(string.slice(i));\n        return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n    }\n    function parseYear(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 2));\n        return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n    }\n    function parseFullYear(d, string, i) {\n        var n = numberRe.exec(string.slice(i, i + 4));\n        return n ? (d.y = +n[0], i + n[0].length) : -1;\n    }\n    function parseZone(d, string, i) {\n        var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n        return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || '00')), i + n[0].length) : -1;\n    }\n    function parseLiteralPercent(d, string, i) {\n        var n = percentRe.exec(string.slice(i, i + 1));\n        return n ? i + n[0].length : -1;\n    }\n    return {\n        format: function (specifier) {\n            var f = newFormat(specifier, formats);\n            f.toString = function () { return specifier; };\n            return f;\n        },\n        parse: function (specifier) {\n            var p = newParse(specifier, localDate);\n            p.toString = function () { return specifier; };\n            return p;\n        },\n        utcFormat: function (specifier) {\n            var f = newFormat(specifier, utcFormats);\n            f.toString = function () { return specifier; };\n            return f;\n        },\n        utcParse: function (specifier) {\n            var p = newParse(specifier, utcDate);\n            p.toString = function () { return specifier; };\n            return p;\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}