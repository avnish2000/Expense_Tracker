{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { numericExtent, finiteExtent } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { reactive } from \"../../../util/observable\";\nimport ticks, { tickStep } from \"../../../util/ticks\";\nvar HistogramSeriesNodeTag;\n(function (HistogramSeriesNodeTag) {\n  HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Bin\"] = 0] = \"Bin\";\n  HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(HistogramSeriesNodeTag || (HistogramSeriesNodeTag = {}));\nvar HistogramSeriesLabel = /** @class */function (_super) {\n  __extends(HistogramSeriesLabel, _super);\n  function HistogramSeriesLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([reactive('change')], HistogramSeriesLabel.prototype, \"formatter\", void 0);\n  return HistogramSeriesLabel;\n}(Label);\nvar defaultBinCount = 10;\nvar aggregationFunctions = {\n  count: function (bin) {\n    return bin.data.length;\n  },\n  sum: function (bin, yKey) {\n    return bin.data.reduce(function (acc, datum) {\n      return acc + datum[yKey];\n    }, 0);\n  },\n  mean: function (bin, yKey) {\n    return aggregationFunctions.sum(bin, yKey) / aggregationFunctions.count(bin, yKey);\n  }\n};\nvar HistogramBin = /** @class */function () {\n  function HistogramBin(_a) {\n    var domainMin = _a[0],\n      domainMax = _a[1];\n    this.data = [];\n    this.aggregatedValue = 0;\n    this.frequency = 0;\n    this.domain = [domainMin, domainMax];\n  }\n  ;\n  HistogramBin.prototype.addDatum = function (datum) {\n    this.data.push(datum);\n    this.frequency++;\n  };\n  ;\n  Object.defineProperty(HistogramBin.prototype, \"domainWidth\", {\n    get: function () {\n      var _a = this.domain,\n        domainMin = _a[0],\n        domainMax = _a[1];\n      return domainMax - domainMin;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramBin.prototype, \"relativeHeight\", {\n    get: function () {\n      return this.aggregatedValue / this.domainWidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ;\n  HistogramBin.prototype.calculateAggregatedValue = function (aggregationName, yKey) {\n    if (!yKey) {\n      // not having a yKey forces us into a frequency plot\n      aggregationName = 'count';\n    }\n    var aggregationFunction = aggregationFunctions[aggregationName];\n    this.aggregatedValue = aggregationFunction(this, yKey);\n  };\n  HistogramBin.prototype.getY = function (areaPlot) {\n    return areaPlot ? this.relativeHeight : this.aggregatedValue;\n  };\n  return HistogramBin;\n}();\nexport { HistogramBin };\n;\nvar HistogramSeries = /** @class */function (_super) {\n  __extends(HistogramSeries, _super);\n  function HistogramSeries() {\n    var _a;\n    var _this = _super.call(this) || this;\n    // Need to put column and label nodes into separate groups, because even though label nodes are\n    // created after the column nodes, this only guarantees that labels will always be on top of columns\n    // on the first run. If on the next run more columns are added, they might clip the labels\n    // rendered during the previous run.\n    _this.rectGroup = _this.group.appendChild(new Group());\n    _this.textGroup = _this.group.appendChild(new Group());\n    _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n    _this.textSelection = Selection.select(_this.textGroup).selectAll();\n    _this.binnedData = [];\n    _this.xDomain = [];\n    _this.yDomain = [];\n    _this.label = new HistogramSeriesLabel();\n    _this.seriesItemEnabled = true;\n    _this.fill = undefined;\n    _this.stroke = undefined;\n    _this.fillOpacity = 1;\n    _this.strokeOpacity = 1;\n    _this.lineDash = undefined;\n    _this.lineDashOffset = 0;\n    _this.directionKeys = (_a = {}, _a[ChartAxisDirection.X] = ['xKey'], _a[ChartAxisDirection.Y] = ['yKey'], _a);\n    _this._xKey = '';\n    _this._areaPlot = false;\n    _this._xName = '';\n    _this._yKey = '';\n    _this._yName = '';\n    _this._strokeWidth = 1;\n    _this.highlightStyle = {\n      fill: 'yellow'\n    };\n    _this.label.enabled = false;\n    _this.label.addEventListener('change', _this.update, _this);\n    return _this;\n  }\n  HistogramSeries.prototype.getKeys = function (direction) {\n    var _this = this;\n    var directionKeys = this.directionKeys;\n    var keys = directionKeys && directionKeys[direction];\n    var values = [];\n    if (keys) {\n      keys.forEach(function (key) {\n        var value = _this[key];\n        if (value) {\n          if (Array.isArray(value)) {\n            values.push.apply(values, value);\n          } else {\n            values.push(value);\n          }\n        }\n      });\n    }\n    return values;\n  };\n  Object.defineProperty(HistogramSeries.prototype, \"xKey\", {\n    get: function () {\n      return this._xKey;\n    },\n    set: function (value) {\n      if (this._xKey !== value) {\n        this._xKey = value;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"areaPlot\", {\n    get: function () {\n      return this._areaPlot;\n    },\n    set: function (c) {\n      this._areaPlot = c;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"bins\", {\n    get: function () {\n      return this._bins;\n    },\n    set: function (bins) {\n      this._bins = bins;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"aggregation\", {\n    get: function () {\n      return this._aggregation;\n    },\n    set: function (aggregation) {\n      this._aggregation = aggregation;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"binCount\", {\n    get: function () {\n      return this._binCount;\n    },\n    set: function (binCount) {\n      this._binCount = binCount;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"xName\", {\n    get: function () {\n      return this._xName;\n    },\n    set: function (value) {\n      if (this._xName !== value) {\n        this._xName = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"yKey\", {\n    get: function () {\n      return this._yKey;\n    },\n    set: function (yKey) {\n      this._yKey = yKey;\n      this.seriesItemEnabled = true;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"yName\", {\n    get: function () {\n      return this._yName;\n    },\n    set: function (values) {\n      this._yName = values;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"strokeWidth\", {\n    get: function () {\n      return this._strokeWidth;\n    },\n    set: function (value) {\n      if (this._strokeWidth !== value) {\n        this._strokeWidth = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HistogramSeries.prototype, \"shadow\", {\n    get: function () {\n      return this._shadow;\n    },\n    set: function (value) {\n      if (this._shadow !== value) {\n        this._shadow = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HistogramSeries.prototype.onHighlightChange = function () {\n    this.updateRectNodes();\n  };\n  HistogramSeries.prototype.setColors = function (fills, strokes) {\n    this.fill = fills[0];\n    this.stroke = strokes[0];\n  };\n  /*  during processData phase, used to unify different ways of the user specifying\n      the bins. Returns bins in format [[min1, max1], [min2, max2] ... ] */\n  HistogramSeries.prototype.deriveBins = function () {\n    var _this = this;\n    var _a = this,\n      bins = _a.bins,\n      binCount = _a.binCount;\n    if (!this.data) {\n      return [];\n    }\n    if (bins && binCount) {\n      console.warn('bin domain and bin count both specified - these are mutually exclusive properties');\n    }\n    if (bins) {\n      // we have explicity set bins from user. Use those.\n      return bins;\n    }\n    var xData = this.data.map(function (datum) {\n      return datum[_this.xKey];\n    });\n    var xDomain = this.fixNumericExtent(finiteExtent(xData), 'x');\n    var binStarts = ticks(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n    var binSize = tickStep(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n    var firstBinEnd = binStarts[0];\n    var expandStartToBin = function (n) {\n      return [n, n + binSize];\n    };\n    return __spreadArrays([[firstBinEnd - binSize, firstBinEnd]], binStarts.map(expandStartToBin));\n  };\n  HistogramSeries.prototype.placeDataInBins = function (data) {\n    var _this = this;\n    var xKey = this.xKey;\n    var derivedBins = this.deriveBins();\n    // creating a sorted copy allows binning in O(n) rather than O(n²)\n    // but at the expense of more temporary memory\n    var sortedData = data.slice().sort(function (a, b) {\n      if (a[xKey] < b[xKey]) {\n        return -1;\n      }\n      if (a[xKey] > b[xKey]) {\n        return 1;\n      }\n      return 0;\n    });\n    var currentBin = 0;\n    var bins = [new HistogramBin(derivedBins[0])];\n    sortedData.forEach(function (datum) {\n      while (datum[xKey] > derivedBins[currentBin][1]) {\n        currentBin++;\n        bins.push(new HistogramBin(derivedBins[currentBin]));\n      }\n      bins[currentBin].addDatum(datum);\n    });\n    bins.forEach(function (b) {\n      return b.calculateAggregatedValue(_this._aggregation, _this.yKey);\n    });\n    return bins;\n  };\n  Object.defineProperty(HistogramSeries.prototype, \"xMax\", {\n    get: function () {\n      var _this = this;\n      return this.data && this.data.reduce(function (acc, datum) {\n        return Math.max(acc, datum[_this.xKey]);\n      }, Number.NEGATIVE_INFINITY);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HistogramSeries.prototype.processData = function () {\n    var _this = this;\n    var _a = this,\n      xKey = _a.xKey,\n      data = _a.data;\n    this.binnedData = this.placeDataInBins(xKey && data ? data : []);\n    var yData = this.binnedData.map(function (b) {\n      return b.getY(_this.areaPlot);\n    });\n    var yMinMax = numericExtent(yData);\n    this.yDomain = this.fixNumericExtent([0, yMinMax ? yMinMax[1] : 1], 'y');\n    var firstBin = this.binnedData[0];\n    var lastBin = this.binnedData[this.binnedData.length - 1];\n    var xMin = firstBin.domain[0];\n    var xMax = lastBin.domain[1];\n    this.xDomain = [xMin, xMax];\n    this.fireEvent({\n      type: 'dataProcessed'\n    });\n    return true;\n  };\n  HistogramSeries.prototype.getDomain = function (direction) {\n    if (direction === ChartAxisDirection.X) {\n      return this.xDomain;\n    } else {\n      return this.yDomain;\n    }\n  };\n  HistogramSeries.prototype.fireNodeClickEvent = function (datum) {\n    this.fireEvent({\n      type: 'nodeClick',\n      series: this,\n      datum: datum.seriesDatum,\n      xKey: this.xKey\n    });\n  };\n  HistogramSeries.prototype.update = function () {\n    var _a = this,\n      visible = _a.visible,\n      chart = _a.chart,\n      xAxis = _a.xAxis,\n      yAxis = _a.yAxis;\n    this.group.visible = visible;\n    if (!xAxis || !yAxis || !visible || !chart || chart.layoutPending || chart.dataPending) {\n      return;\n    }\n    var nodeData = this.generateNodeData();\n    this.updateRectSelection(nodeData);\n    this.updateRectNodes();\n    this.updateTextSelection(nodeData);\n    this.updateTextNodes();\n  };\n  HistogramSeries.prototype.generateNodeData = function () {\n    var _this = this;\n    if (!this.seriesItemEnabled) {\n      return [];\n    }\n    var _a = this,\n      xScale = _a.xAxis.scale,\n      yScale = _a.yAxis.scale,\n      fill = _a.fill,\n      stroke = _a.stroke,\n      strokeWidth = _a.strokeWidth;\n    var nodeData = [];\n    var defaultLabelFormatter = function (params) {\n      return String(params.value);\n    };\n    var _b = this.label,\n      _c = _b.formatter,\n      labelFormatter = _c === void 0 ? defaultLabelFormatter : _c,\n      labelFontStyle = _b.fontStyle,\n      labelFontWeight = _b.fontWeight,\n      labelFontSize = _b.fontSize,\n      labelFontFamily = _b.fontFamily,\n      labelColor = _b.color;\n    this.binnedData.forEach(function (binOfData) {\n      var total = binOfData.aggregatedValue,\n        frequency = binOfData.frequency,\n        _a = binOfData.domain,\n        xDomainMin = _a[0],\n        xDomainMax = _a[1],\n        relativeHeight = binOfData.relativeHeight;\n      var xMinPx = xScale.convert(xDomainMin),\n        xMaxPx = xScale.convert(xDomainMax),\n        // note: assuming can't be negative:\n        y = _this.areaPlot ? relativeHeight : _this.yKey ? total : frequency,\n        yZeroPx = yScale.convert(0),\n        yMaxPx = yScale.convert(y),\n        w = xMaxPx - xMinPx,\n        h = Math.abs(yMaxPx - yZeroPx);\n      var selectionDatumLabel = y !== 0 ? {\n        text: labelFormatter({\n          value: binOfData.aggregatedValue\n        }),\n        fontStyle: labelFontStyle,\n        fontWeight: labelFontWeight,\n        fontSize: labelFontSize,\n        fontFamily: labelFontFamily,\n        fill: labelColor,\n        x: xMinPx + w / 2,\n        y: yMaxPx + h / 2\n      } : undefined;\n      nodeData.push({\n        series: _this,\n        seriesDatum: binOfData,\n        // since each selection is an aggregation of multiple data.\n        x: xMinPx,\n        y: yMaxPx,\n        width: w,\n        height: h,\n        fill: fill,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        label: selectionDatumLabel\n      });\n    });\n    return nodeData;\n  };\n  HistogramSeries.prototype.updateRectSelection = function (nodeData) {\n    var updateRects = this.rectSelection.setData(nodeData);\n    updateRects.exit.remove();\n    var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n      rect.tag = HistogramSeriesNodeTag.Bin;\n      rect.crisp = true;\n    });\n    this.rectSelection = updateRects.merge(enterRects);\n  };\n  HistogramSeries.prototype.updateRectNodes = function () {\n    var _this = this;\n    if (!this.chart) {\n      return;\n    }\n    var highlightedDatum = this.chart.highlightedDatum;\n    var _a = this,\n      fillOpacity = _a.fillOpacity,\n      strokeOpacity = _a.strokeOpacity,\n      shadow = _a.shadow,\n      _b = _a.highlightStyle,\n      fill = _b.fill,\n      stroke = _b.stroke;\n    this.rectSelection.each(function (rect, datum) {\n      var highlighted = datum === highlightedDatum;\n      rect.x = datum.x;\n      rect.y = datum.y;\n      rect.width = datum.width;\n      rect.height = datum.height;\n      rect.fill = highlighted && fill !== undefined ? fill : datum.fill;\n      rect.stroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n      rect.fillOpacity = fillOpacity;\n      rect.strokeOpacity = strokeOpacity;\n      rect.strokeWidth = datum.strokeWidth;\n      rect.lineDash = _this.lineDash;\n      rect.lineDashOffset = _this.lineDashOffset;\n      rect.fillShadow = shadow;\n      rect.visible = datum.height > 0; // prevent stroke from rendering for zero height columns\n    });\n  };\n\n  HistogramSeries.prototype.updateTextSelection = function (nodeData) {\n    var updateTexts = this.textSelection.setData(nodeData);\n    updateTexts.exit.remove();\n    var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n      text.tag = HistogramSeriesNodeTag.Label;\n      text.pointerEvents = PointerEvents.None;\n      text.textAlign = 'center';\n      text.textBaseline = 'middle';\n    });\n    this.textSelection = updateTexts.merge(enterTexts);\n  };\n  HistogramSeries.prototype.updateTextNodes = function () {\n    var labelEnabled = this.label.enabled;\n    this.textSelection.each(function (text, datum) {\n      var label = datum.label;\n      if (label && labelEnabled) {\n        text.text = label.text;\n        text.x = label.x;\n        text.y = label.y;\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.fill = label.fill;\n        text.visible = true;\n      } else {\n        text.visible = false;\n      }\n    });\n  };\n  HistogramSeries.prototype.getTooltipHtml = function (nodeDatum) {\n    var _a = this,\n      xKey = _a.xKey,\n      yKey = _a.yKey;\n    if (!xKey) {\n      return '';\n    }\n    var _b = this,\n      xName = _b.xName,\n      yName = _b.yName,\n      color = _b.fill,\n      tooltipRenderer = _b.tooltipRenderer,\n      aggregation = _b.aggregation;\n    var bin = nodeDatum.seriesDatum;\n    var aggregatedValue = bin.aggregatedValue,\n      frequency = bin.frequency,\n      _c = bin.domain,\n      rangeMin = _c[0],\n      rangeMax = _c[1];\n    var title = (xName || xKey) + \" \" + toFixed(rangeMin) + \" - \" + toFixed(rangeMax);\n    var content = yKey ? \"<b>\" + (yName || yKey) + \" (\" + aggregation + \")</b>: \" + toFixed(aggregatedValue) + \"<br>\" : '';\n    content += \"<b>Frequency</b>: \" + frequency;\n    var defaults = {\n      title: title,\n      titleBackgroundColor: color,\n      content: content\n    };\n    if (tooltipRenderer) {\n      return toTooltipHtml(tooltipRenderer({\n        datum: bin,\n        xKey: xKey,\n        xValue: bin.domain,\n        xName: xName,\n        yKey: yKey,\n        yValue: bin.aggregatedValue,\n        yName: yName,\n        color: color\n      }), defaults);\n    }\n    return toTooltipHtml(defaults);\n  };\n  HistogramSeries.prototype.listSeriesItems = function (legendData) {\n    var _a = this,\n      id = _a.id,\n      data = _a.data,\n      yKey = _a.yKey,\n      yName = _a.yName,\n      seriesItemEnabled = _a.seriesItemEnabled,\n      fill = _a.fill,\n      stroke = _a.stroke,\n      fillOpacity = _a.fillOpacity,\n      strokeOpacity = _a.strokeOpacity;\n    if (data && data.length) {\n      legendData.push({\n        id: id,\n        itemId: yKey,\n        enabled: seriesItemEnabled,\n        label: {\n          text: yName || yKey || 'Frequency'\n        },\n        marker: {\n          fill: fill || 'rgba(0, 0, 0, 0)',\n          stroke: stroke || 'rgba(0, 0, 0, 0)',\n          fillOpacity: fillOpacity,\n          strokeOpacity: strokeOpacity\n        }\n      });\n    }\n  };\n  HistogramSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n    if (itemId === this.yKey) {\n      this.seriesItemEnabled = enabled;\n    }\n    this.scheduleData();\n  };\n  HistogramSeries.className = 'HistogramSeries';\n  HistogramSeries.type = 'histogram';\n  __decorate([reactive('dataChange')], HistogramSeries.prototype, \"fill\", void 0);\n  __decorate([reactive('dataChange')], HistogramSeries.prototype, \"stroke\", void 0);\n  __decorate([reactive('layoutChange')], HistogramSeries.prototype, \"fillOpacity\", void 0);\n  __decorate([reactive('layoutChange')], HistogramSeries.prototype, \"strokeOpacity\", void 0);\n  __decorate([reactive('update')], HistogramSeries.prototype, \"lineDash\", void 0);\n  __decorate([reactive('update')], HistogramSeries.prototype, \"lineDashOffset\", void 0);\n  return HistogramSeries;\n}(CartesianSeries);\nexport { HistogramSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","Group","Selection","Rect","Text","Label","PointerEvents","CartesianSeries","ChartAxisDirection","toTooltipHtml","numericExtent","finiteExtent","toFixed","reactive","ticks","tickStep","HistogramSeriesNodeTag","HistogramSeriesLabel","_super","apply","defaultBinCount","aggregationFunctions","count","bin","data","sum","yKey","reduce","acc","datum","mean","HistogramBin","_a","domainMin","domainMax","aggregatedValue","frequency","domain","addDatum","push","get","enumerable","configurable","domainWidth","calculateAggregatedValue","aggregationName","aggregationFunction","getY","areaPlot","relativeHeight","HistogramSeries","_this","call","rectGroup","group","appendChild","textGroup","rectSelection","select","selectAll","textSelection","binnedData","xDomain","yDomain","label","seriesItemEnabled","fill","undefined","stroke","fillOpacity","strokeOpacity","lineDash","lineDashOffset","directionKeys","X","Y","_xKey","_areaPlot","_xName","_yKey","_yName","_strokeWidth","highlightStyle","enabled","addEventListener","update","getKeys","direction","keys","values","forEach","value","isArray","set","scheduleData","_bins","bins","_aggregation","aggregation","_binCount","binCount","_shadow","onHighlightChange","updateRectNodes","setColors","fills","strokes","deriveBins","console","warn","xData","map","xKey","fixNumericExtent","binStarts","binSize","firstBinEnd","expandStartToBin","n","placeDataInBins","derivedBins","sortedData","slice","sort","currentBin","Math","max","Number","NEGATIVE_INFINITY","processData","yData","yMinMax","firstBin","lastBin","xMin","xMax","fireEvent","type","getDomain","fireNodeClickEvent","series","seriesDatum","visible","chart","xAxis","yAxis","layoutPending","dataPending","nodeData","generateNodeData","updateRectSelection","updateTextSelection","updateTextNodes","xScale","scale","yScale","strokeWidth","defaultLabelFormatter","params","String","_b","_c","formatter","labelFormatter","labelFontStyle","fontStyle","labelFontWeight","fontWeight","labelFontSize","fontSize","labelFontFamily","fontFamily","labelColor","color","binOfData","total","xDomainMin","xDomainMax","xMinPx","convert","xMaxPx","y","yZeroPx","yMaxPx","w","h","abs","selectionDatumLabel","text","x","width","height","updateRects","setData","exit","remove","enterRects","enter","append","each","rect","tag","Bin","crisp","merge","highlightedDatum","shadow","highlighted","fillShadow","updateTexts","enterTexts","pointerEvents","None","textAlign","textBaseline","labelEnabled","getTooltipHtml","nodeDatum","xName","yName","tooltipRenderer","rangeMin","rangeMax","title","content","defaults","titleBackgroundColor","xValue","yValue","listSeriesItems","legendData","id","itemId","marker","toggleSeriesItem","className"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/chart/series/cartesian/histogramSeries.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection } from \"../../chartAxis\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { numericExtent, finiteExtent } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { reactive } from \"../../../util/observable\";\nimport ticks, { tickStep } from \"../../../util/ticks\";\nvar HistogramSeriesNodeTag;\n(function (HistogramSeriesNodeTag) {\n    HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Bin\"] = 0] = \"Bin\";\n    HistogramSeriesNodeTag[HistogramSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(HistogramSeriesNodeTag || (HistogramSeriesNodeTag = {}));\nvar HistogramSeriesLabel = /** @class */ (function (_super) {\n    __extends(HistogramSeriesLabel, _super);\n    function HistogramSeriesLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], HistogramSeriesLabel.prototype, \"formatter\", void 0);\n    return HistogramSeriesLabel;\n}(Label));\nvar defaultBinCount = 10;\nvar aggregationFunctions = {\n    count: function (bin) { return bin.data.length; },\n    sum: function (bin, yKey) { return bin.data.reduce(function (acc, datum) { return acc + datum[yKey]; }, 0); },\n    mean: function (bin, yKey) { return aggregationFunctions.sum(bin, yKey) / aggregationFunctions.count(bin, yKey); }\n};\nvar HistogramBin = /** @class */ (function () {\n    function HistogramBin(_a) {\n        var domainMin = _a[0], domainMax = _a[1];\n        this.data = [];\n        this.aggregatedValue = 0;\n        this.frequency = 0;\n        this.domain = [domainMin, domainMax];\n    }\n    ;\n    HistogramBin.prototype.addDatum = function (datum) {\n        this.data.push(datum);\n        this.frequency++;\n    };\n    ;\n    Object.defineProperty(HistogramBin.prototype, \"domainWidth\", {\n        get: function () {\n            var _a = this.domain, domainMin = _a[0], domainMax = _a[1];\n            return domainMax - domainMin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramBin.prototype, \"relativeHeight\", {\n        get: function () {\n            return this.aggregatedValue / this.domainWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    HistogramBin.prototype.calculateAggregatedValue = function (aggregationName, yKey) {\n        if (!yKey) {\n            // not having a yKey forces us into a frequency plot\n            aggregationName = 'count';\n        }\n        var aggregationFunction = aggregationFunctions[aggregationName];\n        this.aggregatedValue = aggregationFunction(this, yKey);\n    };\n    HistogramBin.prototype.getY = function (areaPlot) {\n        return areaPlot ? this.relativeHeight : this.aggregatedValue;\n    };\n    return HistogramBin;\n}());\nexport { HistogramBin };\n;\nvar HistogramSeries = /** @class */ (function (_super) {\n    __extends(HistogramSeries, _super);\n    function HistogramSeries() {\n        var _a;\n        var _this = _super.call(this) || this;\n        // Need to put column and label nodes into separate groups, because even though label nodes are\n        // created after the column nodes, this only guarantees that labels will always be on top of columns\n        // on the first run. If on the next run more columns are added, they might clip the labels\n        // rendered during the previous run.\n        _this.rectGroup = _this.group.appendChild(new Group());\n        _this.textGroup = _this.group.appendChild(new Group());\n        _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n        _this.textSelection = Selection.select(_this.textGroup).selectAll();\n        _this.binnedData = [];\n        _this.xDomain = [];\n        _this.yDomain = [];\n        _this.label = new HistogramSeriesLabel();\n        _this.seriesItemEnabled = true;\n        _this.fill = undefined;\n        _this.stroke = undefined;\n        _this.fillOpacity = 1;\n        _this.strokeOpacity = 1;\n        _this.lineDash = undefined;\n        _this.lineDashOffset = 0;\n        _this.directionKeys = (_a = {},\n            _a[ChartAxisDirection.X] = ['xKey'],\n            _a[ChartAxisDirection.Y] = ['yKey'],\n            _a);\n        _this._xKey = '';\n        _this._areaPlot = false;\n        _this._xName = '';\n        _this._yKey = '';\n        _this._yName = '';\n        _this._strokeWidth = 1;\n        _this.highlightStyle = { fill: 'yellow' };\n        _this.label.enabled = false;\n        _this.label.addEventListener('change', _this.update, _this);\n        return _this;\n    }\n    HistogramSeries.prototype.getKeys = function (direction) {\n        var _this = this;\n        var directionKeys = this.directionKeys;\n        var keys = directionKeys && directionKeys[direction];\n        var values = [];\n        if (keys) {\n            keys.forEach(function (key) {\n                var value = _this[key];\n                if (value) {\n                    if (Array.isArray(value)) {\n                        values.push.apply(values, value);\n                    }\n                    else {\n                        values.push(value);\n                    }\n                }\n            });\n        }\n        return values;\n    };\n    Object.defineProperty(HistogramSeries.prototype, \"xKey\", {\n        get: function () {\n            return this._xKey;\n        },\n        set: function (value) {\n            if (this._xKey !== value) {\n                this._xKey = value;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"areaPlot\", {\n        get: function () {\n            return this._areaPlot;\n        },\n        set: function (c) {\n            this._areaPlot = c;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"bins\", {\n        get: function () {\n            return this._bins;\n        },\n        set: function (bins) {\n            this._bins = bins;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"aggregation\", {\n        get: function () {\n            return this._aggregation;\n        },\n        set: function (aggregation) {\n            this._aggregation = aggregation;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"binCount\", {\n        get: function () {\n            return this._binCount;\n        },\n        set: function (binCount) {\n            this._binCount = binCount;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"xName\", {\n        get: function () {\n            return this._xName;\n        },\n        set: function (value) {\n            if (this._xName !== value) {\n                this._xName = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"yKey\", {\n        get: function () {\n            return this._yKey;\n        },\n        set: function (yKey) {\n            this._yKey = yKey;\n            this.seriesItemEnabled = true;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"yName\", {\n        get: function () {\n            return this._yName;\n        },\n        set: function (values) {\n            this._yName = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HistogramSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HistogramSeries.prototype.onHighlightChange = function () {\n        this.updateRectNodes();\n    };\n    HistogramSeries.prototype.setColors = function (fills, strokes) {\n        this.fill = fills[0];\n        this.stroke = strokes[0];\n    };\n    /*  during processData phase, used to unify different ways of the user specifying\n        the bins. Returns bins in format [[min1, max1], [min2, max2] ... ] */\n    HistogramSeries.prototype.deriveBins = function () {\n        var _this = this;\n        var _a = this, bins = _a.bins, binCount = _a.binCount;\n        if (!this.data) {\n            return [];\n        }\n        if (bins && binCount) {\n            console.warn('bin domain and bin count both specified - these are mutually exclusive properties');\n        }\n        if (bins) {\n            // we have explicity set bins from user. Use those.\n            return bins;\n        }\n        var xData = this.data.map(function (datum) { return datum[_this.xKey]; });\n        var xDomain = this.fixNumericExtent(finiteExtent(xData), 'x');\n        var binStarts = ticks(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n        var binSize = tickStep(xDomain[0], xDomain[1], this.binCount || defaultBinCount);\n        var firstBinEnd = binStarts[0];\n        var expandStartToBin = function (n) { return [n, n + binSize]; };\n        return __spreadArrays([\n            [firstBinEnd - binSize, firstBinEnd]\n        ], binStarts.map(expandStartToBin));\n    };\n    HistogramSeries.prototype.placeDataInBins = function (data) {\n        var _this = this;\n        var xKey = this.xKey;\n        var derivedBins = this.deriveBins();\n        // creating a sorted copy allows binning in O(n) rather than O(n²)\n        // but at the expense of more temporary memory\n        var sortedData = data.slice().sort(function (a, b) {\n            if (a[xKey] < b[xKey]) {\n                return -1;\n            }\n            if (a[xKey] > b[xKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        var currentBin = 0;\n        var bins = [new HistogramBin(derivedBins[0])];\n        sortedData.forEach(function (datum) {\n            while (datum[xKey] > derivedBins[currentBin][1]) {\n                currentBin++;\n                bins.push(new HistogramBin(derivedBins[currentBin]));\n            }\n            bins[currentBin].addDatum(datum);\n        });\n        bins.forEach(function (b) { return b.calculateAggregatedValue(_this._aggregation, _this.yKey); });\n        return bins;\n    };\n    Object.defineProperty(HistogramSeries.prototype, \"xMax\", {\n        get: function () {\n            var _this = this;\n            return this.data && this.data.reduce(function (acc, datum) {\n                return Math.max(acc, datum[_this.xKey]);\n            }, Number.NEGATIVE_INFINITY);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HistogramSeries.prototype.processData = function () {\n        var _this = this;\n        var _a = this, xKey = _a.xKey, data = _a.data;\n        this.binnedData = this.placeDataInBins(xKey && data ? data : []);\n        var yData = this.binnedData.map(function (b) { return b.getY(_this.areaPlot); });\n        var yMinMax = numericExtent(yData);\n        this.yDomain = this.fixNumericExtent([0, yMinMax ? yMinMax[1] : 1], 'y');\n        var firstBin = this.binnedData[0];\n        var lastBin = this.binnedData[this.binnedData.length - 1];\n        var xMin = firstBin.domain[0];\n        var xMax = lastBin.domain[1];\n        this.xDomain = [xMin, xMax];\n        this.fireEvent({ type: 'dataProcessed' });\n        return true;\n    };\n    HistogramSeries.prototype.getDomain = function (direction) {\n        if (direction === ChartAxisDirection.X) {\n            return this.xDomain;\n        }\n        else {\n            return this.yDomain;\n        }\n    };\n    HistogramSeries.prototype.fireNodeClickEvent = function (datum) {\n        this.fireEvent({\n            type: 'nodeClick',\n            series: this,\n            datum: datum.seriesDatum,\n            xKey: this.xKey\n        });\n    };\n    HistogramSeries.prototype.update = function () {\n        var _a = this, visible = _a.visible, chart = _a.chart, xAxis = _a.xAxis, yAxis = _a.yAxis;\n        this.group.visible = visible;\n        if (!xAxis || !yAxis || !visible || !chart || chart.layoutPending || chart.dataPending) {\n            return;\n        }\n        var nodeData = this.generateNodeData();\n        this.updateRectSelection(nodeData);\n        this.updateRectNodes();\n        this.updateTextSelection(nodeData);\n        this.updateTextNodes();\n    };\n    HistogramSeries.prototype.generateNodeData = function () {\n        var _this = this;\n        if (!this.seriesItemEnabled) {\n            return [];\n        }\n        var _a = this, xScale = _a.xAxis.scale, yScale = _a.yAxis.scale, fill = _a.fill, stroke = _a.stroke, strokeWidth = _a.strokeWidth;\n        var nodeData = [];\n        var defaultLabelFormatter = function (params) { return String(params.value); };\n        var _b = this.label, _c = _b.formatter, labelFormatter = _c === void 0 ? defaultLabelFormatter : _c, labelFontStyle = _b.fontStyle, labelFontWeight = _b.fontWeight, labelFontSize = _b.fontSize, labelFontFamily = _b.fontFamily, labelColor = _b.color;\n        this.binnedData.forEach(function (binOfData) {\n            var total = binOfData.aggregatedValue, frequency = binOfData.frequency, _a = binOfData.domain, xDomainMin = _a[0], xDomainMax = _a[1], relativeHeight = binOfData.relativeHeight;\n            var xMinPx = xScale.convert(xDomainMin), xMaxPx = xScale.convert(xDomainMax), \n            // note: assuming can't be negative:\n            y = _this.areaPlot ? relativeHeight : (_this.yKey ? total : frequency), yZeroPx = yScale.convert(0), yMaxPx = yScale.convert(y), w = xMaxPx - xMinPx, h = Math.abs(yMaxPx - yZeroPx);\n            var selectionDatumLabel = y !== 0 ? {\n                text: labelFormatter({ value: binOfData.aggregatedValue }),\n                fontStyle: labelFontStyle,\n                fontWeight: labelFontWeight,\n                fontSize: labelFontSize,\n                fontFamily: labelFontFamily,\n                fill: labelColor,\n                x: xMinPx + w / 2,\n                y: yMaxPx + h / 2\n            } : undefined;\n            nodeData.push({\n                series: _this,\n                seriesDatum: binOfData,\n                // since each selection is an aggregation of multiple data.\n                x: xMinPx,\n                y: yMaxPx,\n                width: w,\n                height: h,\n                fill: fill,\n                stroke: stroke,\n                strokeWidth: strokeWidth,\n                label: selectionDatumLabel,\n            });\n        });\n        return nodeData;\n    };\n    HistogramSeries.prototype.updateRectSelection = function (nodeData) {\n        var updateRects = this.rectSelection.setData(nodeData);\n        updateRects.exit.remove();\n        var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n            rect.tag = HistogramSeriesNodeTag.Bin;\n            rect.crisp = true;\n        });\n        this.rectSelection = updateRects.merge(enterRects);\n    };\n    HistogramSeries.prototype.updateRectNodes = function () {\n        var _this = this;\n        if (!this.chart) {\n            return;\n        }\n        var highlightedDatum = this.chart.highlightedDatum;\n        var _a = this, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity, shadow = _a.shadow, _b = _a.highlightStyle, fill = _b.fill, stroke = _b.stroke;\n        this.rectSelection.each(function (rect, datum) {\n            var highlighted = datum === highlightedDatum;\n            rect.x = datum.x;\n            rect.y = datum.y;\n            rect.width = datum.width;\n            rect.height = datum.height;\n            rect.fill = highlighted && fill !== undefined ? fill : datum.fill;\n            rect.stroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n            rect.fillOpacity = fillOpacity;\n            rect.strokeOpacity = strokeOpacity;\n            rect.strokeWidth = datum.strokeWidth;\n            rect.lineDash = _this.lineDash;\n            rect.lineDashOffset = _this.lineDashOffset;\n            rect.fillShadow = shadow;\n            rect.visible = datum.height > 0; // prevent stroke from rendering for zero height columns\n        });\n    };\n    HistogramSeries.prototype.updateTextSelection = function (nodeData) {\n        var updateTexts = this.textSelection.setData(nodeData);\n        updateTexts.exit.remove();\n        var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n            text.tag = HistogramSeriesNodeTag.Label;\n            text.pointerEvents = PointerEvents.None;\n            text.textAlign = 'center';\n            text.textBaseline = 'middle';\n        });\n        this.textSelection = updateTexts.merge(enterTexts);\n    };\n    HistogramSeries.prototype.updateTextNodes = function () {\n        var labelEnabled = this.label.enabled;\n        this.textSelection.each(function (text, datum) {\n            var label = datum.label;\n            if (label && labelEnabled) {\n                text.text = label.text;\n                text.x = label.x;\n                text.y = label.y;\n                text.fontStyle = label.fontStyle;\n                text.fontWeight = label.fontWeight;\n                text.fontSize = label.fontSize;\n                text.fontFamily = label.fontFamily;\n                text.fill = label.fill;\n                text.visible = true;\n            }\n            else {\n                text.visible = false;\n            }\n        });\n    };\n    HistogramSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var _a = this, xKey = _a.xKey, yKey = _a.yKey;\n        if (!xKey) {\n            return '';\n        }\n        var _b = this, xName = _b.xName, yName = _b.yName, color = _b.fill, tooltipRenderer = _b.tooltipRenderer, aggregation = _b.aggregation;\n        var bin = nodeDatum.seriesDatum;\n        var aggregatedValue = bin.aggregatedValue, frequency = bin.frequency, _c = bin.domain, rangeMin = _c[0], rangeMax = _c[1];\n        var title = (xName || xKey) + \" \" + toFixed(rangeMin) + \" - \" + toFixed(rangeMax);\n        var content = yKey ?\n            \"<b>\" + (yName || yKey) + \" (\" + aggregation + \")</b>: \" + toFixed(aggregatedValue) + \"<br>\" :\n            '';\n        content += \"<b>Frequency</b>: \" + frequency;\n        var defaults = {\n            title: title,\n            titleBackgroundColor: color,\n            content: content\n        };\n        if (tooltipRenderer) {\n            return toTooltipHtml(tooltipRenderer({\n                datum: bin,\n                xKey: xKey,\n                xValue: bin.domain,\n                xName: xName,\n                yKey: yKey,\n                yValue: bin.aggregatedValue,\n                yName: yName,\n                color: color\n            }), defaults);\n        }\n        return toTooltipHtml(defaults);\n    };\n    HistogramSeries.prototype.listSeriesItems = function (legendData) {\n        var _a = this, id = _a.id, data = _a.data, yKey = _a.yKey, yName = _a.yName, seriesItemEnabled = _a.seriesItemEnabled, fill = _a.fill, stroke = _a.stroke, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity;\n        if (data && data.length) {\n            legendData.push({\n                id: id,\n                itemId: yKey,\n                enabled: seriesItemEnabled,\n                label: {\n                    text: yName || yKey || 'Frequency'\n                },\n                marker: {\n                    fill: fill || 'rgba(0, 0, 0, 0)',\n                    stroke: stroke || 'rgba(0, 0, 0, 0)',\n                    fillOpacity: fillOpacity,\n                    strokeOpacity: strokeOpacity\n                }\n            });\n        }\n    };\n    HistogramSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        if (itemId === this.yKey) {\n            this.seriesItemEnabled = enabled;\n        }\n        this.scheduleData();\n    };\n    HistogramSeries.className = 'HistogramSeries';\n    HistogramSeries.type = 'histogram';\n    __decorate([\n        reactive('dataChange')\n    ], HistogramSeries.prototype, \"fill\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], HistogramSeries.prototype, \"stroke\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], HistogramSeries.prototype, \"fillOpacity\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], HistogramSeries.prototype, \"strokeOpacity\", void 0);\n    __decorate([\n        reactive('update')\n    ], HistogramSeries.prototype, \"lineDash\", void 0);\n    __decorate([\n        reactive('update')\n    ], HistogramSeries.prototype, \"lineDashOffset\", void 0);\n    return HistogramSeries;\n}(CartesianSeries));\nexport { HistogramSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}