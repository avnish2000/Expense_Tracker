{"ast":null,"code":"import { HdpiCanvas } from \"../canvas/hdpiCanvas\";\nimport { createId } from \"../util/id\";\n\nvar Scene =\n/** @class */\nfunction () {\n  // As a rule of thumb, constructors with no parameters are preferred.\n  // A few exceptions are:\n  // - we absolutely need to know something at construction time (document)\n  // - knowing something at construction time meaningfully improves performance (width, height)\n  function Scene(document, width, height) {\n    var _this = this;\n\n    if (document === void 0) {\n      document = window.document;\n    }\n\n    this.id = createId(this);\n    this._dirty = false;\n    this.animationFrameId = 0;\n    this._root = null;\n    this.debug = {\n      renderFrameIndex: false,\n      renderBoundingBoxes: false\n    };\n    this._frameIndex = 0;\n\n    this.render = function () {\n      var _a;\n\n      var _b = _this,\n          ctx = _b.ctx,\n          root = _b.root,\n          pendingSize = _b.pendingSize;\n      _this.animationFrameId = 0;\n\n      if (pendingSize) {\n        (_a = _this.canvas).resize.apply(_a, pendingSize);\n\n        _this.pendingSize = undefined;\n      }\n\n      if (root && !root.visible) {\n        _this.dirty = false;\n        return;\n      } // start with a blank canvas, clear previous drawing\n\n\n      ctx.clearRect(0, 0, _this.width, _this.height);\n\n      if (root) {\n        ctx.save();\n\n        if (root.visible) {\n          root.render(ctx);\n        }\n\n        ctx.restore();\n      }\n\n      _this._frameIndex++;\n\n      if (_this.debug.renderFrameIndex) {\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, 40, 15);\n        ctx.fillStyle = 'black';\n        ctx.fillText(_this.frameIndex.toString(), 2, 10);\n      }\n\n      _this.dirty = false;\n    };\n\n    this.canvas = new HdpiCanvas(document, width, height);\n    this.ctx = this.canvas.context;\n  }\n\n  Object.defineProperty(Scene.prototype, \"container\", {\n    get: function () {\n      return this.canvas.container;\n    },\n    set: function (value) {\n      this.canvas.container = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Scene.prototype.download = function (fileName) {\n    this.canvas.download(fileName);\n  };\n\n  Scene.prototype.getDataURL = function (type) {\n    return this.canvas.getDataURL(type);\n  };\n\n  Object.defineProperty(Scene.prototype, \"width\", {\n    get: function () {\n      return this.pendingSize ? this.pendingSize[0] : this.canvas.width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Scene.prototype, \"height\", {\n    get: function () {\n      return this.pendingSize ? this.pendingSize[1] : this.canvas.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Scene.prototype.resize = function (width, height) {\n    width = Math.round(width);\n    height = Math.round(height);\n\n    if (width === this.width && height === this.height) {\n      return;\n    }\n\n    this.pendingSize = [width, height];\n    this.dirty = true;\n  };\n\n  Object.defineProperty(Scene.prototype, \"dirty\", {\n    get: function () {\n      return this._dirty;\n    },\n    set: function (dirty) {\n      if (dirty && !this._dirty) {\n        this.animationFrameId = requestAnimationFrame(this.render);\n      }\n\n      this._dirty = dirty;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Scene.prototype.cancelRender = function () {\n    if (this.animationFrameId) {\n      cancelAnimationFrame(this.animationFrameId);\n      this.animationFrameId = 0;\n      this._dirty = false;\n    }\n  };\n\n  Object.defineProperty(Scene.prototype, \"root\", {\n    get: function () {\n      return this._root;\n    },\n    set: function (node) {\n      if (node === this._root) {\n        return;\n      }\n\n      if (this._root) {\n        this._root._setScene(undefined);\n      }\n\n      this._root = node;\n\n      if (node) {\n        // If `node` is the root node of another scene ...\n        if (node.parent === null && node.scene && node.scene !== this) {\n          node.scene.root = null;\n        }\n\n        node._setScene(this);\n      }\n\n      this.dirty = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Scene.prototype.appendPath = function (path) {\n    var ctx = this.ctx;\n    var commands = path.commands;\n    var params = path.params;\n    var n = commands.length;\n    var j = 0;\n    ctx.beginPath();\n\n    for (var i = 0; i < n; i++) {\n      switch (commands[i]) {\n        case 'M':\n          ctx.moveTo(params[j++], params[j++]);\n          break;\n\n        case 'L':\n          ctx.lineTo(params[j++], params[j++]);\n          break;\n\n        case 'C':\n          ctx.bezierCurveTo(params[j++], params[j++], params[j++], params[j++], params[j++], params[j++]);\n          break;\n\n        case 'Z':\n          ctx.closePath();\n          break;\n      }\n    }\n  };\n\n  Object.defineProperty(Scene.prototype, \"frameIndex\", {\n    get: function () {\n      return this._frameIndex;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Scene.className = 'Scene';\n  return Scene;\n}();\n\nexport { Scene };","map":{"version":3,"sources":["E:/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scene/scene.js"],"names":["HdpiCanvas","createId","Scene","document","width","height","_this","window","id","_dirty","animationFrameId","_root","debug","renderFrameIndex","renderBoundingBoxes","_frameIndex","render","_a","_b","ctx","root","pendingSize","canvas","resize","apply","undefined","visible","dirty","clearRect","save","restore","fillStyle","fillRect","fillText","frameIndex","toString","context","Object","defineProperty","prototype","get","container","set","value","enumerable","configurable","download","fileName","getDataURL","type","Math","round","requestAnimationFrame","cancelRender","cancelAnimationFrame","node","_setScene","parent","scene","appendPath","path","commands","params","n","length","j","beginPath","i","moveTo","lineTo","bezierCurveTo","closePath","className"],"mappings":"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","sourcesContent":["import { HdpiCanvas } from \"../canvas/hdpiCanvas\";\nimport { createId } from \"../util/id\";\nvar Scene = /** @class */ (function () {\n    // As a rule of thumb, constructors with no parameters are preferred.\n    // A few exceptions are:\n    // - we absolutely need to know something at construction time (document)\n    // - knowing something at construction time meaningfully improves performance (width, height)\n    function Scene(document, width, height) {\n        var _this = this;\n        if (document === void 0) { document = window.document; }\n        this.id = createId(this);\n        this._dirty = false;\n        this.animationFrameId = 0;\n        this._root = null;\n        this.debug = {\n            renderFrameIndex: false,\n            renderBoundingBoxes: false\n        };\n        this._frameIndex = 0;\n        this.render = function () {\n            var _a;\n            var _b = _this, ctx = _b.ctx, root = _b.root, pendingSize = _b.pendingSize;\n            _this.animationFrameId = 0;\n            if (pendingSize) {\n                (_a = _this.canvas).resize.apply(_a, pendingSize);\n                _this.pendingSize = undefined;\n            }\n            if (root && !root.visible) {\n                _this.dirty = false;\n                return;\n            }\n            // start with a blank canvas, clear previous drawing\n            ctx.clearRect(0, 0, _this.width, _this.height);\n            if (root) {\n                ctx.save();\n                if (root.visible) {\n                    root.render(ctx);\n                }\n                ctx.restore();\n            }\n            _this._frameIndex++;\n            if (_this.debug.renderFrameIndex) {\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, 40, 15);\n                ctx.fillStyle = 'black';\n                ctx.fillText(_this.frameIndex.toString(), 2, 10);\n            }\n            _this.dirty = false;\n        };\n        this.canvas = new HdpiCanvas(document, width, height);\n        this.ctx = this.canvas.context;\n    }\n    Object.defineProperty(Scene.prototype, \"container\", {\n        get: function () {\n            return this.canvas.container;\n        },\n        set: function (value) {\n            this.canvas.container = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.prototype.download = function (fileName) {\n        this.canvas.download(fileName);\n    };\n    Scene.prototype.getDataURL = function (type) {\n        return this.canvas.getDataURL(type);\n    };\n    Object.defineProperty(Scene.prototype, \"width\", {\n        get: function () {\n            return this.pendingSize ? this.pendingSize[0] : this.canvas.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"height\", {\n        get: function () {\n            return this.pendingSize ? this.pendingSize[1] : this.canvas.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.prototype.resize = function (width, height) {\n        width = Math.round(width);\n        height = Math.round(height);\n        if (width === this.width && height === this.height) {\n            return;\n        }\n        this.pendingSize = [width, height];\n        this.dirty = true;\n    };\n    Object.defineProperty(Scene.prototype, \"dirty\", {\n        get: function () {\n            return this._dirty;\n        },\n        set: function (dirty) {\n            if (dirty && !this._dirty) {\n                this.animationFrameId = requestAnimationFrame(this.render);\n            }\n            this._dirty = dirty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.prototype.cancelRender = function () {\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = 0;\n            this._dirty = false;\n        }\n    };\n    Object.defineProperty(Scene.prototype, \"root\", {\n        get: function () {\n            return this._root;\n        },\n        set: function (node) {\n            if (node === this._root) {\n                return;\n            }\n            if (this._root) {\n                this._root._setScene(undefined);\n            }\n            this._root = node;\n            if (node) {\n                // If `node` is the root node of another scene ...\n                if (node.parent === null && node.scene && node.scene !== this) {\n                    node.scene.root = null;\n                }\n                node._setScene(this);\n            }\n            this.dirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.prototype.appendPath = function (path) {\n        var ctx = this.ctx;\n        var commands = path.commands;\n        var params = path.params;\n        var n = commands.length;\n        var j = 0;\n        ctx.beginPath();\n        for (var i = 0; i < n; i++) {\n            switch (commands[i]) {\n                case 'M':\n                    ctx.moveTo(params[j++], params[j++]);\n                    break;\n                case 'L':\n                    ctx.lineTo(params[j++], params[j++]);\n                    break;\n                case 'C':\n                    ctx.bezierCurveTo(params[j++], params[j++], params[j++], params[j++], params[j++], params[j++]);\n                    break;\n                case 'Z':\n                    ctx.closePath();\n                    break;\n            }\n        }\n    };\n    Object.defineProperty(Scene.prototype, \"frameIndex\", {\n        get: function () {\n            return this._frameIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Scene.className = 'Scene';\n    return Scene;\n}());\nexport { Scene };\n"]},"metadata":{},"sourceType":"module"}