{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Series } from \"./series/series\";\nimport { LegendMarker } from \"./legend\";\nimport { ChartTheme } from \"./themes/chartTheme\";\nimport { DarkTheme } from './themes/darkTheme';\nimport { MaterialLight } from \"./themes/materialLight\";\nimport { MaterialDark } from \"./themes/materialDark\";\nimport { PastelLight } from \"./themes/pastelLight\";\nimport { PastelDark } from \"./themes/pastelDark\";\nimport { SolarLight } from \"./themes/solarLight\";\nimport { SolarDark } from \"./themes/solarDark\";\nimport { VividLight } from \"./themes/vividLight\";\nimport { VividDark } from \"./themes/vividDark\";\nimport { find } from \"../util/array\";\nimport { getValue, isObject } from \"../util/object\";\nimport mappings from './agChartMappings';\nvar lightTheme = new ChartTheme();\nvar darkTheme = new DarkTheme();\nexport var lightThemes = {\n  'undefined': lightTheme,\n  'null': lightTheme,\n  'ag-default': lightTheme,\n  'ag-material': new MaterialLight(),\n  'ag-pastel': new PastelLight(),\n  'ag-solar': new SolarLight(),\n  'ag-vivid': new VividLight()\n};\nexport var darkThemes = {\n  'undefined': darkTheme,\n  'null': darkTheme,\n  'ag-default-dark': darkTheme,\n  'ag-material-dark': new MaterialDark(),\n  'ag-pastel-dark': new PastelDark(),\n  'ag-solar-dark': new SolarDark(),\n  'ag-vivid-dark': new VividDark()\n};\nexport var themes = __assign(__assign({}, darkThemes), lightThemes);\nexport function getChartTheme(value) {\n  if (value instanceof ChartTheme) {\n    return value;\n  }\n\n  var stockTheme = themes[value];\n\n  if (stockTheme) {\n    return stockTheme;\n  }\n\n  value = value;\n\n  if (value.baseTheme || value.overrides || value.palette) {\n    var baseTheme = getChartTheme(value.baseTheme);\n    return new baseTheme.constructor(value);\n  }\n\n  return lightTheme;\n}\nvar firstColorIndex = 0;\n\nvar AgChart =\n/** @class */\nfunction () {\n  function AgChart() {}\n\n  AgChart.create = function (options, container, data) {\n    options = Object.create(options); // avoid mutating user provided options\n\n    if (container) {\n      options.container = container;\n    }\n\n    if (data) {\n      options.data = data;\n    } // special handling when both `autoSize` and `width` / `height` are present in the options\n\n\n    var autoSize = options && options.autoSize !== false;\n    var theme = getChartTheme(options.theme);\n    firstColorIndex = 0;\n    var chart = create(options, undefined, undefined, theme);\n\n    if (chart) {\n      if (autoSize) {\n        // `autoSize` takes precedence over `width` / `height`\n        chart.autoSize = true;\n      }\n    }\n\n    return chart;\n  };\n\n  AgChart.update = function (chart, options, container, data) {\n    if (!(chart && options)) {\n      return;\n    }\n\n    options = Object.create(options);\n\n    if (container) {\n      options.container = container;\n    }\n\n    if (data) {\n      options.data = data;\n    }\n\n    var autoSize = options && options.autoSize !== false;\n    var theme = getChartTheme(options.theme);\n    firstColorIndex = 0;\n    update(chart, options, undefined, theme);\n\n    if (autoSize) {\n      chart.autoSize = true;\n    }\n  };\n\n  AgChart.createComponent = create;\n  return AgChart;\n}();\n\nexport { AgChart };\nvar pathToSeriesTypeMap = {\n  'cartesian.series': 'line',\n  'line.series': 'line',\n  'area.series': 'area',\n  'bar.series': 'bar',\n  'column.series': 'column',\n  'histogram.series': 'histogram',\n  'scatter.series': 'scatter',\n  'polar.series': 'pie',\n  'pie.series': 'pie'\n};\n\nvar actualSeriesTypeMap = function () {\n  var map = {};\n  var actualSeries = ['area', 'bar', 'histogram', 'line', 'pie', 'scatter'];\n  actualSeries.forEach(function (series) {\n    return map[series] = series;\n  }); // Aliases:\n\n  map['column'] = 'bar';\n  return map;\n}();\n\nfunction create(options, path, component, theme) {\n  var _a; // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n\n\n  options = Object.create(options);\n\n  if (component instanceof LegendMarker) {\n    if (options.type) {\n      options.shape = options.type;\n    }\n  } else {\n    options = provideDefaultType(options, path);\n\n    if (path) {\n      if (options.type) {\n        path = path + '.' + options.type;\n      }\n    } else {\n      path = options.type;\n    }\n  }\n\n  if (!path) {\n    return;\n  }\n\n  var mapping = getValue(mappings, path);\n\n  if (mapping) {\n    options = provideDefaultOptions(path, options, mapping, theme);\n    var meta = mapping.meta || {};\n    var constructorParams = meta.constructorParams || [];\n    var skipKeys = ['type', 'listeners'].concat(constructorParams); // TODO: Constructor params processing could be improved, but it's good enough for current params.\n\n    var constructorParamValues = constructorParams.map(function (param) {\n      return options[param];\n    }).filter(function (value) {\n      return value !== undefined;\n    });\n\n    if (!component) {\n      component = new ((_a = meta.constructor).bind.apply(_a, __spreadArrays([void 0], constructorParamValues)))();\n\n      if (theme && component instanceof Series) {\n        firstColorIndex = theme.setSeriesColors(component, options, firstColorIndex);\n      }\n    }\n\n    var _loop_1 = function (key) {\n      // Process every non-special key in the config object.\n      if (skipKeys.indexOf(key) < 0) {\n        var value = options[key];\n\n        if (value && key in mapping && !(meta.setAsIs && meta.setAsIs.indexOf(key) >= 0)) {\n          if (Array.isArray(value)) {\n            var subComponents = value.map(function (config) {\n              return create(config, path + '.' + key, undefined, theme);\n            }).filter(function (instance) {\n              return !!instance;\n            });\n            component[key] = subComponents;\n          } else {\n            if (mapping[key] && component[key]) {\n              // The instance property already exists on the component (e.g. chart.legend).\n              // Simply configure the existing instance, without creating a new one.\n              create(value, path + '.' + key, component[key], theme);\n            } else {\n              var subComponent = create(value, value.type ? path : path + '.' + key, undefined, theme);\n\n              if (subComponent) {\n                component[key] = subComponent;\n              }\n            }\n          }\n        } else {\n          // if (key in meta.constructor.defaults) { // prevent users from creating custom properties\n          component[key] = value;\n        }\n      }\n    };\n\n    for (var key in options) {\n      _loop_1(key);\n    }\n\n    var listeners = options.listeners;\n\n    if (component && component.addEventListener && listeners) {\n      for (var key in listeners) {\n        if (listeners.hasOwnProperty(key)) {\n          var listener = listeners[key];\n\n          if (typeof listener === 'function') {\n            component.addEventListener(key, listener);\n          }\n        }\n      }\n    }\n\n    return component;\n  }\n}\n\nfunction update(component, options, path, theme) {\n  if (!(options && isObject(options))) {\n    return;\n  } // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n\n\n  if (component instanceof LegendMarker) {\n    if (options.type) {\n      options.shape = options.type;\n    }\n  } else {\n    options = provideDefaultType(options, path);\n\n    if (path) {\n      if (options.type) {\n        path = path + '.' + options.type;\n      }\n    } else {\n      path = options.type;\n    }\n  }\n\n  if (!path) {\n    return;\n  }\n\n  var chart = path in mappings ? component : undefined;\n  var mapping = getValue(mappings, path);\n\n  if (mapping) {\n    options = provideDefaultOptions(path, options, mapping, theme);\n    var meta = mapping.meta || {};\n    var constructorParams = meta && meta.constructorParams || [];\n    var skipKeys = ['type'].concat(constructorParams);\n\n    for (var key in options) {\n      if (skipKeys.indexOf(key) < 0) {\n        var value = options[key];\n        var keyPath = path + '.' + key;\n\n        if (meta.setAsIs && meta.setAsIs.indexOf(key) >= 0) {\n          component[key] = value;\n        } else {\n          var oldValue = component[key];\n\n          if (Array.isArray(oldValue) && Array.isArray(value)) {\n            if (chart) {\n              if (key === 'series') {\n                updateSeries(component, value, keyPath, theme);\n              } else if (key === 'axes') {\n                updateAxes(component, value, keyPath, theme);\n              }\n            } else {\n              component[key] = value;\n            }\n          } else if (isObject(oldValue)) {\n            if (value) {\n              update(oldValue, value, value.type ? path : keyPath, theme);\n            } else if (key in options) {\n              component[key] = value;\n            }\n          } else {\n            var subComponent = isObject(value) && create(value, value.type ? path : keyPath, undefined, theme);\n\n            if (subComponent) {\n              component[key] = subComponent;\n            } else {\n              if (chart && options.autoSize && (key === 'width' || key === 'height')) {\n                continue;\n              }\n\n              component[key] = value;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (chart) {\n    chart.layoutPending = true;\n  }\n}\n\nfunction updateSeries(chart, configs, keyPath, theme) {\n  var allSeries = chart.series.slice();\n  var prevSeries;\n  var i = 0;\n\n  for (; i < configs.length; i++) {\n    var config = configs[i];\n    var series = allSeries[i];\n\n    if (series) {\n      config = provideDefaultType(config, keyPath);\n      var type = actualSeriesTypeMap[config.type];\n\n      if (series.type === type) {\n        if (theme) {\n          firstColorIndex = theme.setSeriesColors(series, config, firstColorIndex);\n        }\n\n        update(series, config, keyPath, theme);\n      } else {\n        var newSeries = create(config, keyPath, undefined, theme);\n        chart.removeSeries(series);\n        chart.addSeriesAfter(newSeries, prevSeries);\n        series = newSeries;\n      }\n    } else {\n      // more new configs than existing series\n      var newSeries = create(config, keyPath, undefined, theme);\n      chart.addSeries(newSeries);\n    }\n\n    prevSeries = series;\n  } // more existing series than new configs\n\n\n  for (; i < allSeries.length; i++) {\n    var series = allSeries[i];\n\n    if (series) {\n      chart.removeSeries(series);\n    }\n  }\n}\n\nfunction updateAxes(chart, configs, keyPath, theme) {\n  var axes = chart.axes;\n  var axesToAdd = [];\n  var axesToUpdate = [];\n\n  var _loop_2 = function (config) {\n    var axisToUpdate = find(axes, function (axis) {\n      return axis.type === config.type && axis.position === config.position;\n    });\n\n    if (axisToUpdate) {\n      axesToUpdate.push(axisToUpdate);\n      update(axisToUpdate, config, keyPath, theme);\n    } else {\n      var axisToAdd = create(config, keyPath, undefined, theme);\n\n      if (axisToAdd) {\n        axesToAdd.push(axisToAdd);\n      }\n    }\n  };\n\n  for (var _i = 0, configs_1 = configs; _i < configs_1.length; _i++) {\n    var config = configs_1[_i];\n\n    _loop_2(config);\n  }\n\n  chart.axes = axesToUpdate.concat(axesToAdd);\n}\n\nfunction provideDefaultChartType(options) {\n  if (options.type) {\n    return options;\n  } // If chart type is not specified, try to infer it from the type of first series.\n\n\n  var series = options.series && options.series[0];\n\n  if (series && series.type) {\n    outerLoop: for (var chartType in mappings) {\n      for (var seriesType in mappings[chartType].series) {\n        if (series.type === seriesType) {\n          options = Object.create(options);\n          options.type = chartType;\n          break outerLoop;\n        }\n      }\n    }\n  }\n\n  if (!options.type) {\n    options = Object.create(options);\n    options.type = 'cartesian';\n  }\n\n  return options;\n}\n\nfunction provideDefaultType(options, path) {\n  if (!path) {\n    // if `path` is undefined, `options` is a top-level (chart) config\n    path = '';\n    options = provideDefaultChartType(options);\n  }\n\n  if (!options.type) {\n    var seriesType = pathToSeriesTypeMap[path];\n\n    if (seriesType) {\n      options = Object.create(options);\n      options.type = seriesType;\n    }\n  }\n\n  return options;\n}\n\nfunction skipThemeKey(key) {\n  return ['axes', 'series'].indexOf(key) >= 0;\n}\n\nvar enabledKey = 'enabled';\n/**\n * If certain options were not provided by the user, use the defaults from the theme and the mapping.\n * All three objects are provided for the current path in the config tree, not necessarily top-level.\n */\n\nfunction provideDefaultOptions(path, options, mapping, theme) {\n  var isChartConfig = path.indexOf('.') < 0;\n  var themeDefaults = theme && theme.getConfig(path);\n  var defaults = mapping && mapping.meta && mapping.meta.defaults;\n  var isExplicitlyDisabled = options.enabled === false; // by the user\n\n  if (defaults || themeDefaults) {\n    options = Object.create(options);\n  } // Fill in the gaps for properties not configured by the user using theme provided values.\n\n\n  for (var key in themeDefaults) {\n    // The default values for these special chart configs always come from the mappings, not theme.\n    if (isChartConfig && skipThemeKey(key)) {\n      continue;\n    }\n\n    if (!(key in options)) {\n      options[key] = themeDefaults[key];\n    }\n  } // Fill in the gaps for properties not configured by the user, nor theme using chart mappings.\n\n\n  for (var key in defaults) {\n    if ((!themeDefaults || !(key in themeDefaults) || skipThemeKey(key)) && !(key in options)) {\n      options[key] = defaults[key];\n    }\n  } // Special handling for the 'enabled' property. For example:\n  // title: { text: 'Quarterly Revenue' } // means title is enabled\n  // legend: {} // means legend is enabled\n\n\n  var hasEnabledKey = themeDefaults && enabledKey in themeDefaults || defaults && enabledKey in defaults;\n\n  if (hasEnabledKey && !isExplicitlyDisabled) {\n    options[enabledKey] = true;\n  }\n\n  return options;\n}","map":{"version":3,"sources":["E:/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/chart/agChart.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","Series","LegendMarker","ChartTheme","DarkTheme","MaterialLight","MaterialDark","PastelLight","PastelDark","SolarLight","SolarDark","VividLight","VividDark","find","getValue","isObject","mappings","lightTheme","darkTheme","lightThemes","darkThemes","themes","getChartTheme","value","stockTheme","baseTheme","overrides","palette","constructor","firstColorIndex","AgChart","create","options","container","data","autoSize","theme","chart","undefined","update","createComponent","pathToSeriesTypeMap","actualSeriesTypeMap","map","actualSeries","forEach","series","path","component","_a","type","shape","provideDefaultType","mapping","provideDefaultOptions","meta","constructorParams","skipKeys","concat","constructorParamValues","param","filter","bind","setSeriesColors","_loop_1","key","indexOf","setAsIs","isArray","subComponents","config","instance","subComponent","listeners","addEventListener","listener","keyPath","oldValue","updateSeries","updateAxes","layoutPending","configs","allSeries","slice","prevSeries","newSeries","removeSeries","addSeriesAfter","addSeries","axes","axesToAdd","axesToUpdate","_loop_2","axisToUpdate","axis","position","push","axisToAdd","_i","configs_1","provideDefaultChartType","outerLoop","chartType","seriesType","skipThemeKey","enabledKey","isChartConfig","themeDefaults","getConfig","defaults","isExplicitlyDisabled","enabled","hasEnabledKey"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Series } from \"./series/series\";\nimport { LegendMarker } from \"./legend\";\nimport { ChartTheme } from \"./themes/chartTheme\";\nimport { DarkTheme } from './themes/darkTheme';\nimport { MaterialLight } from \"./themes/materialLight\";\nimport { MaterialDark } from \"./themes/materialDark\";\nimport { PastelLight } from \"./themes/pastelLight\";\nimport { PastelDark } from \"./themes/pastelDark\";\nimport { SolarLight } from \"./themes/solarLight\";\nimport { SolarDark } from \"./themes/solarDark\";\nimport { VividLight } from \"./themes/vividLight\";\nimport { VividDark } from \"./themes/vividDark\";\nimport { find } from \"../util/array\";\nimport { getValue, isObject } from \"../util/object\";\nimport mappings from './agChartMappings';\nvar lightTheme = new ChartTheme();\nvar darkTheme = new DarkTheme();\nexport var lightThemes = {\n    'undefined': lightTheme,\n    'null': lightTheme,\n    'ag-default': lightTheme,\n    'ag-material': new MaterialLight(),\n    'ag-pastel': new PastelLight(),\n    'ag-solar': new SolarLight(),\n    'ag-vivid': new VividLight(),\n};\nexport var darkThemes = {\n    'undefined': darkTheme,\n    'null': darkTheme,\n    'ag-default-dark': darkTheme,\n    'ag-material-dark': new MaterialDark(),\n    'ag-pastel-dark': new PastelDark(),\n    'ag-solar-dark': new SolarDark(),\n    'ag-vivid-dark': new VividDark(),\n};\nexport var themes = __assign(__assign({}, darkThemes), lightThemes);\nexport function getChartTheme(value) {\n    if (value instanceof ChartTheme) {\n        return value;\n    }\n    var stockTheme = themes[value];\n    if (stockTheme) {\n        return stockTheme;\n    }\n    value = value;\n    if (value.baseTheme || value.overrides || value.palette) {\n        var baseTheme = getChartTheme(value.baseTheme);\n        return new baseTheme.constructor(value);\n    }\n    return lightTheme;\n}\nvar firstColorIndex = 0;\nvar AgChart = /** @class */ (function () {\n    function AgChart() {\n    }\n    AgChart.create = function (options, container, data) {\n        options = Object.create(options); // avoid mutating user provided options\n        if (container) {\n            options.container = container;\n        }\n        if (data) {\n            options.data = data;\n        }\n        // special handling when both `autoSize` and `width` / `height` are present in the options\n        var autoSize = options && options.autoSize !== false;\n        var theme = getChartTheme(options.theme);\n        firstColorIndex = 0;\n        var chart = create(options, undefined, undefined, theme);\n        if (chart) {\n            if (autoSize) { // `autoSize` takes precedence over `width` / `height`\n                chart.autoSize = true;\n            }\n        }\n        return chart;\n    };\n    AgChart.update = function (chart, options, container, data) {\n        if (!(chart && options)) {\n            return;\n        }\n        options = Object.create(options);\n        if (container) {\n            options.container = container;\n        }\n        if (data) {\n            options.data = data;\n        }\n        var autoSize = options && options.autoSize !== false;\n        var theme = getChartTheme(options.theme);\n        firstColorIndex = 0;\n        update(chart, options, undefined, theme);\n        if (autoSize) {\n            chart.autoSize = true;\n        }\n    };\n    AgChart.createComponent = create;\n    return AgChart;\n}());\nexport { AgChart };\nvar pathToSeriesTypeMap = {\n    'cartesian.series': 'line',\n    'line.series': 'line',\n    'area.series': 'area',\n    'bar.series': 'bar',\n    'column.series': 'column',\n    'histogram.series': 'histogram',\n    'scatter.series': 'scatter',\n    'polar.series': 'pie',\n    'pie.series': 'pie'\n};\nvar actualSeriesTypeMap = (function () {\n    var map = {};\n    var actualSeries = ['area', 'bar', 'histogram', 'line', 'pie', 'scatter'];\n    actualSeries.forEach(function (series) { return map[series] = series; });\n    // Aliases:\n    map['column'] = 'bar';\n    return map;\n})();\nfunction create(options, path, component, theme) {\n    var _a;\n    // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n    options = Object.create(options);\n    if (component instanceof LegendMarker) {\n        if (options.type) {\n            options.shape = options.type;\n        }\n    }\n    else {\n        options = provideDefaultType(options, path);\n        if (path) {\n            if (options.type) {\n                path = path + '.' + options.type;\n            }\n        }\n        else {\n            path = options.type;\n        }\n    }\n    if (!path) {\n        return;\n    }\n    var mapping = getValue(mappings, path);\n    if (mapping) {\n        options = provideDefaultOptions(path, options, mapping, theme);\n        var meta = mapping.meta || {};\n        var constructorParams = meta.constructorParams || [];\n        var skipKeys = ['type', 'listeners'].concat(constructorParams);\n        // TODO: Constructor params processing could be improved, but it's good enough for current params.\n        var constructorParamValues = constructorParams\n            .map(function (param) { return options[param]; })\n            .filter(function (value) { return value !== undefined; });\n        if (!component) {\n            component = new ((_a = meta.constructor).bind.apply(_a, __spreadArrays([void 0], constructorParamValues)))();\n            if (theme && component instanceof Series) {\n                firstColorIndex = theme.setSeriesColors(component, options, firstColorIndex);\n            }\n        }\n        var _loop_1 = function (key) {\n            // Process every non-special key in the config object.\n            if (skipKeys.indexOf(key) < 0) {\n                var value = options[key];\n                if (value && key in mapping && !(meta.setAsIs && meta.setAsIs.indexOf(key) >= 0)) {\n                    if (Array.isArray(value)) {\n                        var subComponents = value\n                            .map(function (config) {\n                            return create(config, path + '.' + key, undefined, theme);\n                        })\n                            .filter(function (instance) { return !!instance; });\n                        component[key] = subComponents;\n                    }\n                    else {\n                        if (mapping[key] && component[key]) {\n                            // The instance property already exists on the component (e.g. chart.legend).\n                            // Simply configure the existing instance, without creating a new one.\n                            create(value, path + '.' + key, component[key], theme);\n                        }\n                        else {\n                            var subComponent = create(value, value.type ? path : path + '.' + key, undefined, theme);\n                            if (subComponent) {\n                                component[key] = subComponent;\n                            }\n                        }\n                    }\n                }\n                else { // if (key in meta.constructor.defaults) { // prevent users from creating custom properties\n                    component[key] = value;\n                }\n            }\n        };\n        for (var key in options) {\n            _loop_1(key);\n        }\n        var listeners = options.listeners;\n        if (component && component.addEventListener && listeners) {\n            for (var key in listeners) {\n                if (listeners.hasOwnProperty(key)) {\n                    var listener = listeners[key];\n                    if (typeof listener === 'function') {\n                        component.addEventListener(key, listener);\n                    }\n                }\n            }\n        }\n        return component;\n    }\n}\nfunction update(component, options, path, theme) {\n    if (!(options && isObject(options))) {\n        return;\n    }\n    // Deprecate `chart.legend.item.marker.type` in integrated chart options.\n    if (component instanceof LegendMarker) {\n        if (options.type) {\n            options.shape = options.type;\n        }\n    }\n    else {\n        options = provideDefaultType(options, path);\n        if (path) {\n            if (options.type) {\n                path = path + '.' + options.type;\n            }\n        }\n        else {\n            path = options.type;\n        }\n    }\n    if (!path) {\n        return;\n    }\n    var chart = path in mappings ? component : undefined;\n    var mapping = getValue(mappings, path);\n    if (mapping) {\n        options = provideDefaultOptions(path, options, mapping, theme);\n        var meta = mapping.meta || {};\n        var constructorParams = meta && meta.constructorParams || [];\n        var skipKeys = ['type'].concat(constructorParams);\n        for (var key in options) {\n            if (skipKeys.indexOf(key) < 0) {\n                var value = options[key];\n                var keyPath = path + '.' + key;\n                if (meta.setAsIs && meta.setAsIs.indexOf(key) >= 0) {\n                    component[key] = value;\n                }\n                else {\n                    var oldValue = component[key];\n                    if (Array.isArray(oldValue) && Array.isArray(value)) {\n                        if (chart) {\n                            if (key === 'series') {\n                                updateSeries(component, value, keyPath, theme);\n                            }\n                            else if (key === 'axes') {\n                                updateAxes(component, value, keyPath, theme);\n                            }\n                        }\n                        else {\n                            component[key] = value;\n                        }\n                    }\n                    else if (isObject(oldValue)) {\n                        if (value) {\n                            update(oldValue, value, value.type ? path : keyPath, theme);\n                        }\n                        else if (key in options) {\n                            component[key] = value;\n                        }\n                    }\n                    else {\n                        var subComponent = isObject(value) && create(value, value.type ? path : keyPath, undefined, theme);\n                        if (subComponent) {\n                            component[key] = subComponent;\n                        }\n                        else {\n                            if (chart && options.autoSize && (key === 'width' || key === 'height')) {\n                                continue;\n                            }\n                            component[key] = value;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (chart) {\n        chart.layoutPending = true;\n    }\n}\nfunction updateSeries(chart, configs, keyPath, theme) {\n    var allSeries = chart.series.slice();\n    var prevSeries;\n    var i = 0;\n    for (; i < configs.length; i++) {\n        var config = configs[i];\n        var series = allSeries[i];\n        if (series) {\n            config = provideDefaultType(config, keyPath);\n            var type = actualSeriesTypeMap[config.type];\n            if (series.type === type) {\n                if (theme) {\n                    firstColorIndex = theme.setSeriesColors(series, config, firstColorIndex);\n                }\n                update(series, config, keyPath, theme);\n            }\n            else {\n                var newSeries = create(config, keyPath, undefined, theme);\n                chart.removeSeries(series);\n                chart.addSeriesAfter(newSeries, prevSeries);\n                series = newSeries;\n            }\n        }\n        else { // more new configs than existing series\n            var newSeries = create(config, keyPath, undefined, theme);\n            chart.addSeries(newSeries);\n        }\n        prevSeries = series;\n    }\n    // more existing series than new configs\n    for (; i < allSeries.length; i++) {\n        var series = allSeries[i];\n        if (series) {\n            chart.removeSeries(series);\n        }\n    }\n}\nfunction updateAxes(chart, configs, keyPath, theme) {\n    var axes = chart.axes;\n    var axesToAdd = [];\n    var axesToUpdate = [];\n    var _loop_2 = function (config) {\n        var axisToUpdate = find(axes, function (axis) {\n            return axis.type === config.type && axis.position === config.position;\n        });\n        if (axisToUpdate) {\n            axesToUpdate.push(axisToUpdate);\n            update(axisToUpdate, config, keyPath, theme);\n        }\n        else {\n            var axisToAdd = create(config, keyPath, undefined, theme);\n            if (axisToAdd) {\n                axesToAdd.push(axisToAdd);\n            }\n        }\n    };\n    for (var _i = 0, configs_1 = configs; _i < configs_1.length; _i++) {\n        var config = configs_1[_i];\n        _loop_2(config);\n    }\n    chart.axes = axesToUpdate.concat(axesToAdd);\n}\nfunction provideDefaultChartType(options) {\n    if (options.type) {\n        return options;\n    }\n    // If chart type is not specified, try to infer it from the type of first series.\n    var series = options.series && options.series[0];\n    if (series && series.type) {\n        outerLoop: for (var chartType in mappings) {\n            for (var seriesType in mappings[chartType].series) {\n                if (series.type === seriesType) {\n                    options = Object.create(options);\n                    options.type = chartType;\n                    break outerLoop;\n                }\n            }\n        }\n    }\n    if (!options.type) {\n        options = Object.create(options);\n        options.type = 'cartesian';\n    }\n    return options;\n}\nfunction provideDefaultType(options, path) {\n    if (!path) { // if `path` is undefined, `options` is a top-level (chart) config\n        path = '';\n        options = provideDefaultChartType(options);\n    }\n    if (!options.type) {\n        var seriesType = pathToSeriesTypeMap[path];\n        if (seriesType) {\n            options = Object.create(options);\n            options.type = seriesType;\n        }\n    }\n    return options;\n}\nfunction skipThemeKey(key) {\n    return ['axes', 'series'].indexOf(key) >= 0;\n}\nvar enabledKey = 'enabled';\n/**\n * If certain options were not provided by the user, use the defaults from the theme and the mapping.\n * All three objects are provided for the current path in the config tree, not necessarily top-level.\n */\nfunction provideDefaultOptions(path, options, mapping, theme) {\n    var isChartConfig = path.indexOf('.') < 0;\n    var themeDefaults = theme && theme.getConfig(path);\n    var defaults = mapping && mapping.meta && mapping.meta.defaults;\n    var isExplicitlyDisabled = options.enabled === false; // by the user\n    if (defaults || themeDefaults) {\n        options = Object.create(options);\n    }\n    // Fill in the gaps for properties not configured by the user using theme provided values.\n    for (var key in themeDefaults) {\n        // The default values for these special chart configs always come from the mappings, not theme.\n        if (isChartConfig && skipThemeKey(key)) {\n            continue;\n        }\n        if (!(key in options)) {\n            options[key] = themeDefaults[key];\n        }\n    }\n    // Fill in the gaps for properties not configured by the user, nor theme using chart mappings.\n    for (var key in defaults) {\n        if ((!themeDefaults || !(key in themeDefaults) || skipThemeKey(key)) && !(key in options)) {\n            options[key] = defaults[key];\n        }\n    }\n    // Special handling for the 'enabled' property. For example:\n    // title: { text: 'Quarterly Revenue' } // means title is enabled\n    // legend: {} // means legend is enabled\n    var hasEnabledKey = (themeDefaults && enabledKey in themeDefaults) ||\n        (defaults && enabledKey in defaults);\n    if (hasEnabledKey && !isExplicitlyDisabled) {\n        options[enabledKey] = true;\n    }\n    return options;\n}\n"]},"metadata":{},"sourceType":"module"}