{"ast":null,"code":"var SizeMonitor =\n/** @class */\nfunction () {\n  function SizeMonitor() {}\n\n  SizeMonitor.init = function () {\n    var _this = this;\n\n    var NativeResizeObserver = window.ResizeObserver;\n\n    if (NativeResizeObserver) {\n      this.resizeObserver = new NativeResizeObserver(function (entries) {\n        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n          var entry = entries_1[_i];\n          var _a = entry.contentRect,\n              width = _a.width,\n              height = _a.height;\n\n          _this.checkSize(_this.elements.get(entry.target), entry.target, width, height);\n        }\n      });\n    } else {\n      // polyfill (more reliable even in browsers that support ResizeObserver)\n      var step = function () {\n        _this.elements.forEach(function (entry, element) {\n          var width = element.clientWidth ? element.clientWidth : 0;\n          var height = element.clientHeight ? element.clientHeight : 0;\n\n          _this.checkSize(entry, element, width, height);\n        });\n      };\n\n      window.setInterval(step, 100);\n    }\n\n    this.ready = true;\n  };\n\n  SizeMonitor.checkSize = function (entry, element, width, height) {\n    if (entry) {\n      if (!entry.size || width !== entry.size.width || height !== entry.size.height) {\n        entry.size = {\n          width: width,\n          height: height\n        };\n        entry.cb(entry.size, element);\n      }\n    }\n  }; // Only a single callback is supported.\n\n\n  SizeMonitor.observe = function (element, cb) {\n    if (!this.ready) {\n      this.init();\n    }\n\n    this.unobserve(element);\n\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(element);\n    }\n\n    this.elements.set(element, {\n      cb: cb\n    });\n  };\n\n  SizeMonitor.unobserve = function (element) {\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(element);\n    }\n\n    this.elements.delete(element);\n  };\n\n  SizeMonitor.elements = new Map();\n  SizeMonitor.requestAnimationFrameId = 0;\n  SizeMonitor.ready = false;\n  return SizeMonitor;\n}();\n\nexport { SizeMonitor };","map":{"version":3,"sources":["E:/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/util/sizeMonitor.js"],"names":["SizeMonitor","init","_this","NativeResizeObserver","window","ResizeObserver","resizeObserver","entries","_i","entries_1","length","entry","_a","contentRect","width","height","checkSize","elements","get","target","step","forEach","element","clientWidth","clientHeight","setInterval","ready","size","cb","observe","unobserve","set","delete","Map","requestAnimationFrameId"],"mappings":"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","sourcesContent":["var SizeMonitor = /** @class */ (function () {\n    function SizeMonitor() {\n    }\n    SizeMonitor.init = function () {\n        var _this = this;\n        var NativeResizeObserver = window.ResizeObserver;\n        if (NativeResizeObserver) {\n            this.resizeObserver = new NativeResizeObserver(function (entries) {\n                for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                    var entry = entries_1[_i];\n                    var _a = entry.contentRect, width = _a.width, height = _a.height;\n                    _this.checkSize(_this.elements.get(entry.target), entry.target, width, height);\n                }\n            });\n        }\n        else { // polyfill (more reliable even in browsers that support ResizeObserver)\n            var step = function () {\n                _this.elements.forEach(function (entry, element) {\n                    var width = element.clientWidth ? element.clientWidth : 0;\n                    var height = element.clientHeight ? element.clientHeight : 0;\n                    _this.checkSize(entry, element, width, height);\n                });\n            };\n            window.setInterval(step, 100);\n        }\n        this.ready = true;\n    };\n    SizeMonitor.checkSize = function (entry, element, width, height) {\n        if (entry) {\n            if (!entry.size || width !== entry.size.width || height !== entry.size.height) {\n                entry.size = { width: width, height: height };\n                entry.cb(entry.size, element);\n            }\n        }\n    };\n    // Only a single callback is supported.\n    SizeMonitor.observe = function (element, cb) {\n        if (!this.ready) {\n            this.init();\n        }\n        this.unobserve(element);\n        if (this.resizeObserver) {\n            this.resizeObserver.observe(element);\n        }\n        this.elements.set(element, { cb: cb });\n    };\n    SizeMonitor.unobserve = function (element) {\n        if (this.resizeObserver) {\n            this.resizeObserver.unobserve(element);\n        }\n        this.elements.delete(element);\n    };\n    SizeMonitor.elements = new Map();\n    SizeMonitor.requestAnimationFrameId = 0;\n    SizeMonitor.ready = false;\n    return SizeMonitor;\n}());\nexport { SizeMonitor };\n"]},"metadata":{},"sourceType":"module"}