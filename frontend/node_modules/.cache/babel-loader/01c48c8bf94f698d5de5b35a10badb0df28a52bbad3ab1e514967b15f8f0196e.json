{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { BandScale } from \"../../../scale/bandScale\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection, flipChartAxisDirection } from \"../../chartAxis\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { findLargestMinMax, findMinMax } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nvar BarSeriesNodeTag;\n(function (BarSeriesNodeTag) {\n  BarSeriesNodeTag[BarSeriesNodeTag[\"Bar\"] = 0] = \"Bar\";\n  BarSeriesNodeTag[BarSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(BarSeriesNodeTag || (BarSeriesNodeTag = {}));\nvar BarSeriesLabel = /** @class */function (_super) {\n  __extends(BarSeriesLabel, _super);\n  function BarSeriesLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([reactive('change')], BarSeriesLabel.prototype, \"formatter\", void 0);\n  return BarSeriesLabel;\n}(Label);\nvar BarSeries = /** @class */function (_super) {\n  __extends(BarSeries, _super);\n  function BarSeries() {\n    var _a;\n    var _this = _super.call(this) || this;\n    // Need to put bar and label nodes into separate groups, because even though label nodes are\n    // created after the bar nodes, this only guarantees that labels will always be on top of bars\n    // on the first run. If on the next run more bars are added, they might clip the labels\n    // rendered during the previous run.\n    _this.rectGroup = _this.group.appendChild(new Group());\n    _this.textGroup = _this.group.appendChild(new Group());\n    _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n    _this.textSelection = Selection.select(_this.textGroup).selectAll();\n    _this.xData = [];\n    _this.yData = [];\n    _this.yDomain = [];\n    _this.label = new BarSeriesLabel();\n    /**\n     * The assumption is that the values will be reset (to `true`)\n     * in the {@link yKeys} setter.\n     */\n    _this.seriesItemEnabled = new Map();\n    _this.flipXY = false;\n    _this.fills = ['#c16068', '#a2bf8a', '#ebcc87', '#80a0c3', '#b58dae', '#85c0d1'];\n    _this.strokes = ['#874349', '#718661', '#a48f5f', '#5a7088', '#7f637a', '#5d8692'];\n    _this.fillOpacity = 1;\n    _this.strokeOpacity = 1;\n    _this.lineDash = undefined;\n    _this.lineDashOffset = 0;\n    /**\n     * Used to get the position of bars within each group.\n     */\n    _this.groupScale = new BandScale();\n    _this.directionKeys = (_a = {}, _a[ChartAxisDirection.X] = ['xKey'], _a[ChartAxisDirection.Y] = ['yKeys'], _a);\n    _this._xKey = '';\n    _this._xName = '';\n    /**\n     * With a single value in the `yKeys` array we get the regular bar series.\n     * With multiple values, we get the stacked bar series.\n     * If the {@link grouped} set to `true`, we get the grouped bar series.\n     * @param values\n     */\n    _this._yKeys = [];\n    _this._yNames = [];\n    _this.grouped = false;\n    _this._strokeWidth = 1;\n    _this.highlightStyle = {\n      fill: 'yellow'\n    };\n    _this.addEventListener('update', _this.update);\n    _this.label.enabled = false;\n    _this.label.addEventListener('change', _this.update, _this);\n    return _this;\n  }\n  BarSeries.prototype.getKeys = function (direction) {\n    var _this = this;\n    var directionKeys = this.directionKeys;\n    var keys = directionKeys && directionKeys[this.flipXY ? flipChartAxisDirection(direction) : direction];\n    var values = [];\n    if (keys) {\n      keys.forEach(function (key) {\n        var value = _this[key];\n        if (value) {\n          if (Array.isArray(value)) {\n            values.push.apply(values, value);\n          } else {\n            values.push(value);\n          }\n        }\n      });\n    }\n    return values;\n  };\n  Object.defineProperty(BarSeries.prototype, \"xKey\", {\n    get: function () {\n      return this._xKey;\n    },\n    set: function (value) {\n      if (this._xKey !== value) {\n        this._xKey = value;\n        this.xData = [];\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"xName\", {\n    get: function () {\n      return this._xName;\n    },\n    set: function (value) {\n      if (this._xName !== value) {\n        this._xName = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"yKeys\", {\n    get: function () {\n      return this._yKeys;\n    },\n    set: function (values) {\n      if (!equal(this._yKeys, values)) {\n        this._yKeys = values;\n        this.yData = [];\n        var seriesItemEnabled_1 = this.seriesItemEnabled;\n        seriesItemEnabled_1.clear();\n        values.forEach(function (key) {\n          return seriesItemEnabled_1.set(key, true);\n        });\n        var groupScale = this.groupScale;\n        groupScale.domain = values;\n        groupScale.padding = 0.1;\n        groupScale.round = true;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"yNames\", {\n    get: function () {\n      return this._yNames;\n    },\n    set: function (values) {\n      this._yNames = values;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BarSeries.prototype.setColors = function (fills, strokes) {\n    this.fills = fills;\n    this.strokes = strokes;\n  };\n  Object.defineProperty(BarSeries.prototype, \"normalizedTo\", {\n    get: function () {\n      return this._normalizedTo;\n    },\n    set: function (value) {\n      var absValue = value ? Math.abs(value) : undefined;\n      if (this._normalizedTo !== absValue) {\n        this._normalizedTo = absValue;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"strokeWidth\", {\n    get: function () {\n      return this._strokeWidth;\n    },\n    set: function (value) {\n      if (this._strokeWidth !== value) {\n        this._strokeWidth = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"shadow\", {\n    get: function () {\n      return this._shadow;\n    },\n    set: function (value) {\n      if (this._shadow !== value) {\n        this._shadow = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BarSeries.prototype.onHighlightChange = function () {\n    this.updateRectNodes();\n  };\n  BarSeries.prototype.processData = function () {\n    var _a = this,\n      xKey = _a.xKey,\n      yKeys = _a.yKeys,\n      seriesItemEnabled = _a.seriesItemEnabled;\n    var data = xKey && yKeys.length && this.data ? this.data : [];\n    // If the data is an array of rows like so:\n    //\n    // [{\n    //   xKey: 'Jan',\n    //   yKey1: 5,\n    //   yKey2: 7,\n    //   yKey3: -9,\n    // }, {\n    //   xKey: 'Feb',\n    //   yKey1: 10,\n    //   yKey2: -15,\n    //   yKey3: 20\n    // }]\n    //\n    var keysFound = true; // only warn once\n    this.xData = data.map(function (datum) {\n      if (keysFound && !(xKey in datum)) {\n        keysFound = false;\n        console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n      }\n      return datum[xKey];\n    });\n    this.yData = data.map(function (datum) {\n      return yKeys.map(function (yKey) {\n        if (keysFound && !(yKey in datum)) {\n          keysFound = false;\n          console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n        }\n        var value = datum[yKey];\n        return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n      });\n    });\n    // xData: ['Jan', 'Feb']\n    //\n    // yData: [\n    //   [5, 7, -9],\n    //   [10, -15, 20]\n    // ]\n    var yMinMax = this.yData.map(function (values) {\n      return findMinMax(values);\n    }); // used for normalization of stacked bars\n    var _b = this,\n      yData = _b.yData,\n      normalizedTo = _b.normalizedTo;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    if (this.grouped) {\n      // Find the tallest positive/negative bar in each group,\n      // then find the tallest positive/negative bar overall.\n      // The `yMin` should always be <= 0,\n      // otherwise with the `yData` like [300, 200, 100] the last bar\n      // will have zero height, because the y-axis range is [100, 300].\n      yMin = Math.min.apply(Math, __spreadArrays([0], yData.map(function (values) {\n        return Math.min.apply(Math, values);\n      })));\n      yMax = Math.max.apply(Math, yData.map(function (values) {\n        return Math.max.apply(Math, values);\n      }));\n    } else {\n      // stacked or regular\n      var yLargestMinMax = findLargestMinMax(yMinMax);\n      if (normalizedTo && isFinite(normalizedTo)) {\n        yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n        yMax = normalizedTo;\n        yData.forEach(function (stackValues, i) {\n          return stackValues.forEach(function (y, j) {\n            if (y < 0) {\n              stackValues[j] = -y / yMinMax[i].min * normalizedTo;\n            } else {\n              stackValues[j] = y / yMinMax[i].max * normalizedTo;\n            }\n          });\n        });\n      } else {\n        yMin = yLargestMinMax.min;\n        yMax = yLargestMinMax.max;\n      }\n    }\n    this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n    this.fireEvent({\n      type: 'dataProcessed'\n    });\n    return true;\n  };\n  BarSeries.prototype.getDomain = function (direction) {\n    if (this.flipXY) {\n      direction = flipChartAxisDirection(direction);\n    }\n    if (direction === ChartAxisDirection.X) {\n      return this.xData;\n    } else {\n      return this.yDomain;\n    }\n  };\n  BarSeries.prototype.fireNodeClickEvent = function (datum) {\n    this.fireEvent({\n      type: 'nodeClick',\n      series: this,\n      datum: datum.seriesDatum,\n      xKey: this.xKey,\n      yKey: datum.yKey\n    });\n  };\n  BarSeries.prototype.generateNodeData = function () {\n    var _this = this;\n    if (!this.data) {\n      return [];\n    }\n    var flipXY = this.flipXY;\n    var xAxis = flipXY ? this.yAxis : this.xAxis;\n    var yAxis = flipXY ? this.xAxis : this.yAxis;\n    var xScale = xAxis.scale;\n    var yScale = yAxis.scale;\n    var _a = this,\n      groupScale = _a.groupScale,\n      yKeys = _a.yKeys,\n      fills = _a.fills,\n      strokes = _a.strokes,\n      grouped = _a.grouped,\n      strokeWidth = _a.strokeWidth,\n      seriesItemEnabled = _a.seriesItemEnabled,\n      data = _a.data,\n      xData = _a.xData,\n      yData = _a.yData;\n    var label = this.label;\n    var labelFontStyle = label.fontStyle;\n    var labelFontWeight = label.fontWeight;\n    var labelFontSize = label.fontSize;\n    var labelFontFamily = label.fontFamily;\n    var labelColor = label.color;\n    var labelFormatter = label.formatter;\n    groupScale.range = [0, xScale.bandwidth];\n    var barWidth = grouped ? groupScale.bandwidth : xScale.bandwidth;\n    var nodeData = [];\n    xData.forEach(function (category, i) {\n      var yDatum = yData[i];\n      var seriesDatum = data[i];\n      var x = xScale.convert(category);\n      var prevMin = 0;\n      var prevMax = 0;\n      for (var j = 0; j < yDatum.length; j++) {\n        var curr = yDatum[j];\n        var yKey = yKeys[j];\n        var barX = grouped ? x + groupScale.convert(yKey) : x;\n        if (!xAxis.inRange(barX, barWidth)) {\n          continue;\n        }\n        var prev = curr < 0 ? prevMin : prevMax;\n        var y = yScale.convert(grouped ? curr : prev + curr);\n        var bottomY = yScale.convert(grouped ? 0 : prev);\n        var yValue = seriesDatum[yKey]; // unprocessed y-value\n        var yValueIsNumber = typeof yValue === 'number';\n        var labelText = void 0;\n        if (labelFormatter) {\n          labelText = labelFormatter({\n            value: yValueIsNumber ? yValue : undefined\n          });\n        } else {\n          labelText = yValueIsNumber && isFinite(yValue) ? yValue.toFixed(2) : '';\n        }\n        nodeData.push({\n          series: _this,\n          seriesDatum: seriesDatum,\n          yValue: yValue,\n          yKey: yKey,\n          x: flipXY ? Math.min(y, bottomY) : barX,\n          y: flipXY ? barX : Math.min(y, bottomY),\n          width: flipXY ? Math.abs(bottomY - y) : barWidth,\n          height: flipXY ? barWidth : Math.abs(bottomY - y),\n          fill: fills[j % fills.length],\n          stroke: strokes[j % strokes.length],\n          strokeWidth: strokeWidth,\n          label: seriesItemEnabled.get(yKey) && labelText ? {\n            text: labelText,\n            fontStyle: labelFontStyle,\n            fontWeight: labelFontWeight,\n            fontSize: labelFontSize,\n            fontFamily: labelFontFamily,\n            fill: labelColor,\n            x: flipXY ? y + (yValue >= 0 ? -1 : 1) * Math.abs(bottomY - y) / 2 : barX + barWidth / 2,\n            y: flipXY ? barX + barWidth / 2 : y + (yValue >= 0 ? 1 : -1) * Math.abs(bottomY - y) / 2\n          } : undefined\n        });\n        if (!grouped) {\n          if (curr < 0) {\n            prevMin += curr;\n          } else {\n            prevMax += curr;\n          }\n        }\n      }\n    });\n    return nodeData;\n  };\n  BarSeries.prototype.update = function () {\n    var _a = this,\n      visible = _a.visible,\n      chart = _a.chart,\n      xAxis = _a.xAxis,\n      yAxis = _a.yAxis,\n      xData = _a.xData,\n      yData = _a.yData;\n    this.group.visible = visible;\n    if (!chart || chart.layoutPending || chart.dataPending || !xAxis || !yAxis || !visible || !xData.length || !yData.length) {\n      return;\n    }\n    var nodeData = this.generateNodeData();\n    this.updateRectSelection(nodeData);\n    this.updateRectNodes();\n    this.updateTextSelection(nodeData);\n    this.updateTextNodes();\n  };\n  BarSeries.prototype.updateRectSelection = function (selectionData) {\n    var updateRects = this.rectSelection.setData(selectionData);\n    updateRects.exit.remove();\n    var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n      rect.tag = BarSeriesNodeTag.Bar;\n      rect.crisp = true;\n    });\n    this.rectSelection = updateRects.merge(enterRects);\n  };\n  BarSeries.prototype.updateRectNodes = function () {\n    var _this = this;\n    if (!this.chart) {\n      return;\n    }\n    var _a = this,\n      fillOpacity = _a.fillOpacity,\n      strokeOpacity = _a.strokeOpacity,\n      _b = _a.highlightStyle,\n      fill = _b.fill,\n      stroke = _b.stroke,\n      shadow = _a.shadow,\n      formatter = _a.formatter,\n      xKey = _a.xKey,\n      flipXY = _a.flipXY;\n    var highlightedDatum = this.chart.highlightedDatum;\n    this.rectSelection.each(function (rect, datum) {\n      var highlighted = datum === highlightedDatum;\n      var rectFill = highlighted && fill !== undefined ? fill : datum.fill;\n      var rectStroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n      var format = undefined;\n      if (formatter) {\n        format = formatter({\n          datum: datum.seriesDatum,\n          fill: rectFill,\n          stroke: rectStroke,\n          strokeWidth: datum.strokeWidth,\n          highlighted: highlighted,\n          xKey: xKey,\n          yKey: datum.yKey\n        });\n      }\n      rect.x = datum.x;\n      rect.y = datum.y;\n      rect.width = datum.width;\n      rect.height = datum.height;\n      rect.fill = format && format.fill || rectFill;\n      rect.stroke = format && format.stroke || rectStroke;\n      rect.strokeWidth = format && format.strokeWidth !== undefined ? format.strokeWidth : datum.strokeWidth;\n      rect.fillOpacity = fillOpacity;\n      rect.strokeOpacity = strokeOpacity;\n      rect.lineDash = _this.lineDash;\n      rect.lineDashOffset = _this.lineDashOffset;\n      rect.fillShadow = shadow;\n      // Prevent stroke from rendering for zero height columns and zero width bars.\n      rect.visible = flipXY ? datum.width > 0 : datum.height > 0;\n    });\n  };\n  BarSeries.prototype.updateTextSelection = function (selectionData) {\n    var updateTexts = this.textSelection.setData(selectionData);\n    updateTexts.exit.remove();\n    var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n      text.tag = BarSeriesNodeTag.Label;\n      text.pointerEvents = PointerEvents.None;\n      text.textAlign = 'center';\n      text.textBaseline = 'middle';\n    });\n    this.textSelection = updateTexts.merge(enterTexts);\n  };\n  BarSeries.prototype.updateTextNodes = function () {\n    var labelEnabled = this.label.enabled;\n    this.textSelection.each(function (text, datum) {\n      var label = datum.label;\n      if (label && labelEnabled) {\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.text = label.text;\n        text.x = label.x;\n        text.y = label.y;\n        text.fill = label.fill;\n        text.visible = true;\n      } else {\n        text.visible = false;\n      }\n    });\n  };\n  BarSeries.prototype.getTooltipHtml = function (nodeDatum) {\n    var xKey = this.xKey;\n    var yKey = nodeDatum.yKey;\n    if (!xKey || !yKey) {\n      return '';\n    }\n    var _a = this,\n      xName = _a.xName,\n      yKeys = _a.yKeys,\n      yNames = _a.yNames,\n      fills = _a.fills,\n      tooltipRenderer = _a.tooltipRenderer;\n    var datum = nodeDatum.seriesDatum;\n    var yKeyIndex = yKeys.indexOf(yKey);\n    var yName = yNames[yKeyIndex];\n    var color = fills[yKeyIndex % fills.length];\n    var xValue = datum[xKey];\n    var yValue = datum[yKey];\n    var xString = typeof xValue === 'number' ? toFixed(xValue) : String(xValue);\n    var yString = typeof yValue === 'number' ? toFixed(yValue) : String(yValue);\n    var title = yName;\n    var content = xString + ': ' + yString;\n    var defaults = {\n      title: title,\n      titleBackgroundColor: color,\n      content: content\n    };\n    if (tooltipRenderer) {\n      return toTooltipHtml(tooltipRenderer({\n        datum: datum,\n        xKey: xKey,\n        xValue: xValue,\n        xName: xName,\n        yKey: yKey,\n        yValue: yValue,\n        yName: yName,\n        color: color\n      }), defaults);\n    }\n    return toTooltipHtml(defaults);\n  };\n  BarSeries.prototype.listSeriesItems = function (legendData) {\n    var _a = this,\n      id = _a.id,\n      data = _a.data,\n      xKey = _a.xKey,\n      yKeys = _a.yKeys,\n      yNames = _a.yNames,\n      seriesItemEnabled = _a.seriesItemEnabled,\n      fills = _a.fills,\n      strokes = _a.strokes,\n      fillOpacity = _a.fillOpacity,\n      strokeOpacity = _a.strokeOpacity;\n    if (data && data.length && xKey && yKeys.length) {\n      yKeys.forEach(function (yKey, index) {\n        legendData.push({\n          id: id,\n          itemId: yKey,\n          enabled: seriesItemEnabled.get(yKey) || false,\n          label: {\n            text: yNames[index] || yKeys[index]\n          },\n          marker: {\n            fill: fills[index % fills.length],\n            stroke: strokes[index % strokes.length],\n            fillOpacity: fillOpacity,\n            strokeOpacity: strokeOpacity\n          }\n        });\n      });\n    }\n  };\n  BarSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n    var seriesItemEnabled = this.seriesItemEnabled;\n    var enabledSeriesItems = [];\n    seriesItemEnabled.set(itemId, enabled);\n    seriesItemEnabled.forEach(function (enabled, yKey) {\n      if (enabled) {\n        enabledSeriesItems.push(yKey);\n      }\n    });\n    this.groupScale.domain = enabledSeriesItems;\n    this.scheduleData();\n  };\n  BarSeries.className = 'BarSeries';\n  BarSeries.type = 'bar';\n  __decorate([reactive('layoutChange')], BarSeries.prototype, \"flipXY\", void 0);\n  __decorate([reactive('dataChange')], BarSeries.prototype, \"fills\", void 0);\n  __decorate([reactive('dataChange')], BarSeries.prototype, \"strokes\", void 0);\n  __decorate([reactive('layoutChange')], BarSeries.prototype, \"fillOpacity\", void 0);\n  __decorate([reactive('layoutChange')], BarSeries.prototype, \"strokeOpacity\", void 0);\n  __decorate([reactive('update')], BarSeries.prototype, \"lineDash\", void 0);\n  __decorate([reactive('update')], BarSeries.prototype, \"lineDashOffset\", void 0);\n  __decorate([reactive('update')], BarSeries.prototype, \"formatter\", void 0);\n  __decorate([reactive('dataChange')], BarSeries.prototype, \"grouped\", void 0);\n  return BarSeries;\n}(CartesianSeries);\nexport { BarSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","Group","Selection","Rect","Text","BandScale","Label","PointerEvents","CartesianSeries","ChartAxisDirection","flipChartAxisDirection","toTooltipHtml","findLargestMinMax","findMinMax","toFixed","equal","reactive","BarSeriesNodeTag","BarSeriesLabel","_super","apply","BarSeries","_a","_this","call","rectGroup","group","appendChild","textGroup","rectSelection","select","selectAll","textSelection","xData","yData","yDomain","label","seriesItemEnabled","Map","flipXY","fills","strokes","fillOpacity","strokeOpacity","lineDash","undefined","lineDashOffset","groupScale","directionKeys","X","Y","_xKey","_xName","_yKeys","_yNames","grouped","_strokeWidth","highlightStyle","fill","addEventListener","update","enabled","getKeys","direction","keys","values","forEach","value","isArray","push","get","set","scheduleData","enumerable","configurable","seriesItemEnabled_1","clear","domain","padding","round","setColors","_normalizedTo","absValue","Math","abs","_shadow","onHighlightChange","updateRectNodes","processData","xKey","yKeys","data","keysFound","map","datum","console","warn","yKey","isFinite","yMinMax","_b","normalizedTo","yMin","Infinity","yMax","min","max","yLargestMinMax","stackValues","y","fixNumericExtent","fireEvent","type","getDomain","fireNodeClickEvent","series","seriesDatum","generateNodeData","xAxis","yAxis","xScale","scale","yScale","strokeWidth","labelFontStyle","fontStyle","labelFontWeight","fontWeight","labelFontSize","fontSize","labelFontFamily","fontFamily","labelColor","color","labelFormatter","formatter","range","bandwidth","barWidth","nodeData","category","yDatum","x","convert","prevMin","prevMax","curr","barX","inRange","prev","bottomY","yValue","yValueIsNumber","labelText","width","height","stroke","text","visible","chart","layoutPending","dataPending","updateRectSelection","updateTextSelection","updateTextNodes","selectionData","updateRects","setData","exit","remove","enterRects","enter","append","each","rect","tag","Bar","crisp","merge","shadow","highlightedDatum","highlighted","rectFill","rectStroke","format","fillShadow","updateTexts","enterTexts","pointerEvents","None","textAlign","textBaseline","labelEnabled","getTooltipHtml","nodeDatum","xName","yNames","tooltipRenderer","yKeyIndex","indexOf","yName","xValue","xString","String","yString","title","content","defaults","titleBackgroundColor","listSeriesItems","legendData","id","index","itemId","marker","toggleSeriesItem","enabledSeriesItems","className"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/chart/series/cartesian/barSeries.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { BandScale } from \"../../../scale/bandScale\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection, flipChartAxisDirection } from \"../../chartAxis\";\nimport { toTooltipHtml } from \"../../chart\";\nimport { findLargestMinMax, findMinMax } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nvar BarSeriesNodeTag;\n(function (BarSeriesNodeTag) {\n    BarSeriesNodeTag[BarSeriesNodeTag[\"Bar\"] = 0] = \"Bar\";\n    BarSeriesNodeTag[BarSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(BarSeriesNodeTag || (BarSeriesNodeTag = {}));\nvar BarSeriesLabel = /** @class */ (function (_super) {\n    __extends(BarSeriesLabel, _super);\n    function BarSeriesLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], BarSeriesLabel.prototype, \"formatter\", void 0);\n    return BarSeriesLabel;\n}(Label));\nvar BarSeries = /** @class */ (function (_super) {\n    __extends(BarSeries, _super);\n    function BarSeries() {\n        var _a;\n        var _this = _super.call(this) || this;\n        // Need to put bar and label nodes into separate groups, because even though label nodes are\n        // created after the bar nodes, this only guarantees that labels will always be on top of bars\n        // on the first run. If on the next run more bars are added, they might clip the labels\n        // rendered during the previous run.\n        _this.rectGroup = _this.group.appendChild(new Group);\n        _this.textGroup = _this.group.appendChild(new Group);\n        _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n        _this.textSelection = Selection.select(_this.textGroup).selectAll();\n        _this.xData = [];\n        _this.yData = [];\n        _this.yDomain = [];\n        _this.label = new BarSeriesLabel();\n        /**\n         * The assumption is that the values will be reset (to `true`)\n         * in the {@link yKeys} setter.\n         */\n        _this.seriesItemEnabled = new Map();\n        _this.flipXY = false;\n        _this.fills = [\n            '#c16068',\n            '#a2bf8a',\n            '#ebcc87',\n            '#80a0c3',\n            '#b58dae',\n            '#85c0d1'\n        ];\n        _this.strokes = [\n            '#874349',\n            '#718661',\n            '#a48f5f',\n            '#5a7088',\n            '#7f637a',\n            '#5d8692'\n        ];\n        _this.fillOpacity = 1;\n        _this.strokeOpacity = 1;\n        _this.lineDash = undefined;\n        _this.lineDashOffset = 0;\n        /**\n         * Used to get the position of bars within each group.\n         */\n        _this.groupScale = new BandScale();\n        _this.directionKeys = (_a = {},\n            _a[ChartAxisDirection.X] = ['xKey'],\n            _a[ChartAxisDirection.Y] = ['yKeys'],\n            _a);\n        _this._xKey = '';\n        _this._xName = '';\n        /**\n         * With a single value in the `yKeys` array we get the regular bar series.\n         * With multiple values, we get the stacked bar series.\n         * If the {@link grouped} set to `true`, we get the grouped bar series.\n         * @param values\n         */\n        _this._yKeys = [];\n        _this._yNames = [];\n        _this.grouped = false;\n        _this._strokeWidth = 1;\n        _this.highlightStyle = { fill: 'yellow' };\n        _this.addEventListener('update', _this.update);\n        _this.label.enabled = false;\n        _this.label.addEventListener('change', _this.update, _this);\n        return _this;\n    }\n    BarSeries.prototype.getKeys = function (direction) {\n        var _this = this;\n        var directionKeys = this.directionKeys;\n        var keys = directionKeys && directionKeys[this.flipXY ? flipChartAxisDirection(direction) : direction];\n        var values = [];\n        if (keys) {\n            keys.forEach(function (key) {\n                var value = _this[key];\n                if (value) {\n                    if (Array.isArray(value)) {\n                        values.push.apply(values, value);\n                    }\n                    else {\n                        values.push(value);\n                    }\n                }\n            });\n        }\n        return values;\n    };\n    Object.defineProperty(BarSeries.prototype, \"xKey\", {\n        get: function () {\n            return this._xKey;\n        },\n        set: function (value) {\n            if (this._xKey !== value) {\n                this._xKey = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"xName\", {\n        get: function () {\n            return this._xName;\n        },\n        set: function (value) {\n            if (this._xName !== value) {\n                this._xName = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"yKeys\", {\n        get: function () {\n            return this._yKeys;\n        },\n        set: function (values) {\n            if (!equal(this._yKeys, values)) {\n                this._yKeys = values;\n                this.yData = [];\n                var seriesItemEnabled_1 = this.seriesItemEnabled;\n                seriesItemEnabled_1.clear();\n                values.forEach(function (key) { return seriesItemEnabled_1.set(key, true); });\n                var groupScale = this.groupScale;\n                groupScale.domain = values;\n                groupScale.padding = 0.1;\n                groupScale.round = true;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"yNames\", {\n        get: function () {\n            return this._yNames;\n        },\n        set: function (values) {\n            this._yNames = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarSeries.prototype.setColors = function (fills, strokes) {\n        this.fills = fills;\n        this.strokes = strokes;\n    };\n    Object.defineProperty(BarSeries.prototype, \"normalizedTo\", {\n        get: function () {\n            return this._normalizedTo;\n        },\n        set: function (value) {\n            var absValue = value ? Math.abs(value) : undefined;\n            if (this._normalizedTo !== absValue) {\n                this._normalizedTo = absValue;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarSeries.prototype.onHighlightChange = function () {\n        this.updateRectNodes();\n    };\n    BarSeries.prototype.processData = function () {\n        var _a = this, xKey = _a.xKey, yKeys = _a.yKeys, seriesItemEnabled = _a.seriesItemEnabled;\n        var data = xKey && yKeys.length && this.data ? this.data : [];\n        // If the data is an array of rows like so:\n        //\n        // [{\n        //   xKey: 'Jan',\n        //   yKey1: 5,\n        //   yKey2: 7,\n        //   yKey3: -9,\n        // }, {\n        //   xKey: 'Feb',\n        //   yKey1: 10,\n        //   yKey2: -15,\n        //   yKey3: 20\n        // }]\n        //\n        var keysFound = true; // only warn once\n        this.xData = data.map(function (datum) {\n            if (keysFound && !(xKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n            }\n            return datum[xKey];\n        });\n        this.yData = data.map(function (datum) { return yKeys.map(function (yKey) {\n            if (keysFound && !(yKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n            }\n            var value = datum[yKey];\n            return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n        }); });\n        // xData: ['Jan', 'Feb']\n        //\n        // yData: [\n        //   [5, 7, -9],\n        //   [10, -15, 20]\n        // ]\n        var yMinMax = this.yData.map(function (values) { return findMinMax(values); }); // used for normalization of stacked bars\n        var _b = this, yData = _b.yData, normalizedTo = _b.normalizedTo;\n        var yMin = Infinity;\n        var yMax = -Infinity;\n        if (this.grouped) {\n            // Find the tallest positive/negative bar in each group,\n            // then find the tallest positive/negative bar overall.\n            // The `yMin` should always be <= 0,\n            // otherwise with the `yData` like [300, 200, 100] the last bar\n            // will have zero height, because the y-axis range is [100, 300].\n            yMin = Math.min.apply(Math, __spreadArrays([0], yData.map(function (values) { return Math.min.apply(Math, values); })));\n            yMax = Math.max.apply(Math, yData.map(function (values) { return Math.max.apply(Math, values); }));\n        }\n        else { // stacked or regular\n            var yLargestMinMax = findLargestMinMax(yMinMax);\n            if (normalizedTo && isFinite(normalizedTo)) {\n                yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n                yMax = normalizedTo;\n                yData.forEach(function (stackValues, i) { return stackValues.forEach(function (y, j) {\n                    if (y < 0) {\n                        stackValues[j] = -y / yMinMax[i].min * normalizedTo;\n                    }\n                    else {\n                        stackValues[j] = y / yMinMax[i].max * normalizedTo;\n                    }\n                }); });\n            }\n            else {\n                yMin = yLargestMinMax.min;\n                yMax = yLargestMinMax.max;\n            }\n        }\n        this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n        this.fireEvent({ type: 'dataProcessed' });\n        return true;\n    };\n    BarSeries.prototype.getDomain = function (direction) {\n        if (this.flipXY) {\n            direction = flipChartAxisDirection(direction);\n        }\n        if (direction === ChartAxisDirection.X) {\n            return this.xData;\n        }\n        else {\n            return this.yDomain;\n        }\n    };\n    BarSeries.prototype.fireNodeClickEvent = function (datum) {\n        this.fireEvent({\n            type: 'nodeClick',\n            series: this,\n            datum: datum.seriesDatum,\n            xKey: this.xKey,\n            yKey: datum.yKey\n        });\n    };\n    BarSeries.prototype.generateNodeData = function () {\n        var _this = this;\n        if (!this.data) {\n            return [];\n        }\n        var flipXY = this.flipXY;\n        var xAxis = flipXY ? this.yAxis : this.xAxis;\n        var yAxis = flipXY ? this.xAxis : this.yAxis;\n        var xScale = xAxis.scale;\n        var yScale = yAxis.scale;\n        var _a = this, groupScale = _a.groupScale, yKeys = _a.yKeys, fills = _a.fills, strokes = _a.strokes, grouped = _a.grouped, strokeWidth = _a.strokeWidth, seriesItemEnabled = _a.seriesItemEnabled, data = _a.data, xData = _a.xData, yData = _a.yData;\n        var label = this.label;\n        var labelFontStyle = label.fontStyle;\n        var labelFontWeight = label.fontWeight;\n        var labelFontSize = label.fontSize;\n        var labelFontFamily = label.fontFamily;\n        var labelColor = label.color;\n        var labelFormatter = label.formatter;\n        groupScale.range = [0, xScale.bandwidth];\n        var barWidth = grouped ? groupScale.bandwidth : xScale.bandwidth;\n        var nodeData = [];\n        xData.forEach(function (category, i) {\n            var yDatum = yData[i];\n            var seriesDatum = data[i];\n            var x = xScale.convert(category);\n            var prevMin = 0;\n            var prevMax = 0;\n            for (var j = 0; j < yDatum.length; j++) {\n                var curr = yDatum[j];\n                var yKey = yKeys[j];\n                var barX = grouped ? x + groupScale.convert(yKey) : x;\n                if (!xAxis.inRange(barX, barWidth)) {\n                    continue;\n                }\n                var prev = curr < 0 ? prevMin : prevMax;\n                var y = yScale.convert(grouped ? curr : prev + curr);\n                var bottomY = yScale.convert(grouped ? 0 : prev);\n                var yValue = seriesDatum[yKey]; // unprocessed y-value\n                var yValueIsNumber = typeof yValue === 'number';\n                var labelText = void 0;\n                if (labelFormatter) {\n                    labelText = labelFormatter({ value: yValueIsNumber ? yValue : undefined });\n                }\n                else {\n                    labelText = yValueIsNumber && isFinite(yValue) ? yValue.toFixed(2) : '';\n                }\n                nodeData.push({\n                    series: _this,\n                    seriesDatum: seriesDatum,\n                    yValue: yValue,\n                    yKey: yKey,\n                    x: flipXY ? Math.min(y, bottomY) : barX,\n                    y: flipXY ? barX : Math.min(y, bottomY),\n                    width: flipXY ? Math.abs(bottomY - y) : barWidth,\n                    height: flipXY ? barWidth : Math.abs(bottomY - y),\n                    fill: fills[j % fills.length],\n                    stroke: strokes[j % strokes.length],\n                    strokeWidth: strokeWidth,\n                    label: seriesItemEnabled.get(yKey) && labelText ? {\n                        text: labelText,\n                        fontStyle: labelFontStyle,\n                        fontWeight: labelFontWeight,\n                        fontSize: labelFontSize,\n                        fontFamily: labelFontFamily,\n                        fill: labelColor,\n                        x: flipXY ? y + (yValue >= 0 ? -1 : 1) * Math.abs(bottomY - y) / 2 : barX + barWidth / 2,\n                        y: flipXY ? barX + barWidth / 2 : y + (yValue >= 0 ? 1 : -1) * Math.abs(bottomY - y) / 2\n                    } : undefined\n                });\n                if (!grouped) {\n                    if (curr < 0) {\n                        prevMin += curr;\n                    }\n                    else {\n                        prevMax += curr;\n                    }\n                }\n            }\n        });\n        return nodeData;\n    };\n    BarSeries.prototype.update = function () {\n        var _a = this, visible = _a.visible, chart = _a.chart, xAxis = _a.xAxis, yAxis = _a.yAxis, xData = _a.xData, yData = _a.yData;\n        this.group.visible = visible;\n        if (!chart || chart.layoutPending || chart.dataPending ||\n            !xAxis || !yAxis || !visible || !xData.length || !yData.length) {\n            return;\n        }\n        var nodeData = this.generateNodeData();\n        this.updateRectSelection(nodeData);\n        this.updateRectNodes();\n        this.updateTextSelection(nodeData);\n        this.updateTextNodes();\n    };\n    BarSeries.prototype.updateRectSelection = function (selectionData) {\n        var updateRects = this.rectSelection.setData(selectionData);\n        updateRects.exit.remove();\n        var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n            rect.tag = BarSeriesNodeTag.Bar;\n            rect.crisp = true;\n        });\n        this.rectSelection = updateRects.merge(enterRects);\n    };\n    BarSeries.prototype.updateRectNodes = function () {\n        var _this = this;\n        if (!this.chart) {\n            return;\n        }\n        var _a = this, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity, _b = _a.highlightStyle, fill = _b.fill, stroke = _b.stroke, shadow = _a.shadow, formatter = _a.formatter, xKey = _a.xKey, flipXY = _a.flipXY;\n        var highlightedDatum = this.chart.highlightedDatum;\n        this.rectSelection.each(function (rect, datum) {\n            var highlighted = datum === highlightedDatum;\n            var rectFill = highlighted && fill !== undefined ? fill : datum.fill;\n            var rectStroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n            var format = undefined;\n            if (formatter) {\n                format = formatter({\n                    datum: datum.seriesDatum,\n                    fill: rectFill,\n                    stroke: rectStroke,\n                    strokeWidth: datum.strokeWidth,\n                    highlighted: highlighted,\n                    xKey: xKey,\n                    yKey: datum.yKey\n                });\n            }\n            rect.x = datum.x;\n            rect.y = datum.y;\n            rect.width = datum.width;\n            rect.height = datum.height;\n            rect.fill = format && format.fill || rectFill;\n            rect.stroke = format && format.stroke || rectStroke;\n            rect.strokeWidth = format && format.strokeWidth !== undefined ? format.strokeWidth : datum.strokeWidth;\n            rect.fillOpacity = fillOpacity;\n            rect.strokeOpacity = strokeOpacity;\n            rect.lineDash = _this.lineDash;\n            rect.lineDashOffset = _this.lineDashOffset;\n            rect.fillShadow = shadow;\n            // Prevent stroke from rendering for zero height columns and zero width bars.\n            rect.visible = flipXY ? datum.width > 0 : datum.height > 0;\n        });\n    };\n    BarSeries.prototype.updateTextSelection = function (selectionData) {\n        var updateTexts = this.textSelection.setData(selectionData);\n        updateTexts.exit.remove();\n        var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n            text.tag = BarSeriesNodeTag.Label;\n            text.pointerEvents = PointerEvents.None;\n            text.textAlign = 'center';\n            text.textBaseline = 'middle';\n        });\n        this.textSelection = updateTexts.merge(enterTexts);\n    };\n    BarSeries.prototype.updateTextNodes = function () {\n        var labelEnabled = this.label.enabled;\n        this.textSelection.each(function (text, datum) {\n            var label = datum.label;\n            if (label && labelEnabled) {\n                text.fontStyle = label.fontStyle;\n                text.fontWeight = label.fontWeight;\n                text.fontSize = label.fontSize;\n                text.fontFamily = label.fontFamily;\n                text.text = label.text;\n                text.x = label.x;\n                text.y = label.y;\n                text.fill = label.fill;\n                text.visible = true;\n            }\n            else {\n                text.visible = false;\n            }\n        });\n    };\n    BarSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var xKey = this.xKey;\n        var yKey = nodeDatum.yKey;\n        if (!xKey || !yKey) {\n            return '';\n        }\n        var _a = this, xName = _a.xName, yKeys = _a.yKeys, yNames = _a.yNames, fills = _a.fills, tooltipRenderer = _a.tooltipRenderer;\n        var datum = nodeDatum.seriesDatum;\n        var yKeyIndex = yKeys.indexOf(yKey);\n        var yName = yNames[yKeyIndex];\n        var color = fills[yKeyIndex % fills.length];\n        var xValue = datum[xKey];\n        var yValue = datum[yKey];\n        var xString = typeof xValue === 'number' ? toFixed(xValue) : String(xValue);\n        var yString = typeof yValue === 'number' ? toFixed(yValue) : String(yValue);\n        var title = yName;\n        var content = xString + ': ' + yString;\n        var defaults = {\n            title: title,\n            titleBackgroundColor: color,\n            content: content\n        };\n        if (tooltipRenderer) {\n            return toTooltipHtml(tooltipRenderer({\n                datum: datum,\n                xKey: xKey,\n                xValue: xValue,\n                xName: xName,\n                yKey: yKey,\n                yValue: yValue,\n                yName: yName,\n                color: color\n            }), defaults);\n        }\n        return toTooltipHtml(defaults);\n    };\n    BarSeries.prototype.listSeriesItems = function (legendData) {\n        var _a = this, id = _a.id, data = _a.data, xKey = _a.xKey, yKeys = _a.yKeys, yNames = _a.yNames, seriesItemEnabled = _a.seriesItemEnabled, fills = _a.fills, strokes = _a.strokes, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity;\n        if (data && data.length && xKey && yKeys.length) {\n            yKeys.forEach(function (yKey, index) {\n                legendData.push({\n                    id: id,\n                    itemId: yKey,\n                    enabled: seriesItemEnabled.get(yKey) || false,\n                    label: {\n                        text: yNames[index] || yKeys[index]\n                    },\n                    marker: {\n                        fill: fills[index % fills.length],\n                        stroke: strokes[index % strokes.length],\n                        fillOpacity: fillOpacity,\n                        strokeOpacity: strokeOpacity\n                    }\n                });\n            });\n        }\n    };\n    BarSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        var seriesItemEnabled = this.seriesItemEnabled;\n        var enabledSeriesItems = [];\n        seriesItemEnabled.set(itemId, enabled);\n        seriesItemEnabled.forEach(function (enabled, yKey) {\n            if (enabled) {\n                enabledSeriesItems.push(yKey);\n            }\n        });\n        this.groupScale.domain = enabledSeriesItems;\n        this.scheduleData();\n    };\n    BarSeries.className = 'BarSeries';\n    BarSeries.type = 'bar';\n    __decorate([\n        reactive('layoutChange')\n    ], BarSeries.prototype, \"flipXY\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], BarSeries.prototype, \"fills\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], BarSeries.prototype, \"strokes\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], BarSeries.prototype, \"fillOpacity\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], BarSeries.prototype, \"strokeOpacity\", void 0);\n    __decorate([\n        reactive('update')\n    ], BarSeries.prototype, \"lineDash\", void 0);\n    __decorate([\n        reactive('update')\n    ], BarSeries.prototype, \"lineDashOffset\", void 0);\n    __decorate([\n        reactive('update')\n    ], BarSeries.prototype, \"formatter\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], BarSeries.prototype, \"grouped\", void 0);\n    return BarSeries;\n}(CartesianSeries));\nexport { BarSeries };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,IAAII,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGd,MAAM,CAACmB,wBAAwB,CAACP,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEhB,CAAC;EAC5H,IAAI,OAAOsB,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEH,CAAC,GAAGE,OAAO,CAACC,QAAQ,CAACV,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEK,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAC,CAAC,EAAEJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGjB,CAAC,CAACoB,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGjB,CAAC,CAACc,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGpB,CAAC,CAACc,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIlB,MAAM,CAACuB,cAAc,CAACX,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIM,cAAc,GAAI,IAAI,IAAI,IAAI,CAACA,cAAc,IAAK,YAAY;EAC9D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEH,CAAC,GAAG,CAAC,EAAEI,EAAE,GAAGV,SAAS,CAACC,MAAM,EAAEK,CAAC,GAAGI,EAAE,EAAEJ,CAAC,EAAE,EAAEG,CAAC,IAAIT,SAAS,CAACM,CAAC,CAAC,CAACL,MAAM;EACnF,KAAK,IAAIC,CAAC,GAAGf,KAAK,CAACsB,CAAC,CAAC,EAAEE,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,EAAE,EAAEJ,CAAC,EAAE,EAC5C,KAAK,IAAIM,CAAC,GAAGZ,SAAS,CAACM,CAAC,CAAC,EAAEO,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,CAAC,CAACX,MAAM,EAAEY,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAEF,CAAC,EAAE,EAC7DT,CAAC,CAACS,CAAC,CAAC,GAAGC,CAAC,CAACC,CAAC,CAAC;EACnB,OAAOX,CAAC;AACZ,CAAC;AACD,SAASa,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,IAAI,QAAQ,2BAA2B;AAChD,SAASC,IAAI,QAAQ,2BAA2B;AAChD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,kBAAkB,EAAEC,sBAAsB,QAAQ,iBAAiB;AAC5E,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,qBAAqB;AACnE,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,IAAIC,gBAAgB;AACpB,CAAC,UAAUA,gBAAgB,EAAE;EACzBA,gBAAgB,CAACA,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;EACrDA,gBAAgB,CAACA,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AAC7D,CAAC,EAAEA,gBAAgB,KAAKA,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/C,IAAIC,cAAc,GAAG,aAAe,UAAUC,MAAM,EAAE;EAClDrD,SAAS,CAACoD,cAAc,EAAEC,MAAM,CAAC;EACjC,SAASD,cAAc,GAAG;IACtB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAElC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAN,UAAU,CAAC,CACPoC,QAAQ,CAAC,QAAQ,CAAC,CACrB,EAAEE,cAAc,CAACxC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACjD,OAAOwC,cAAc;AACzB,CAAC,CAACZ,KAAK,CAAE;AACT,IAAIe,SAAS,GAAG,aAAe,UAAUF,MAAM,EAAE;EAC7CrD,SAAS,CAACuD,SAAS,EAAEF,MAAM,CAAC;EAC5B,SAASE,SAAS,GAAG;IACjB,IAAIC,EAAE;IACN,IAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrC;IACA;IACA;IACA;IACAD,KAAK,CAACE,SAAS,GAAGF,KAAK,CAACG,KAAK,CAACC,WAAW,CAAC,IAAI1B,KAAK,GAAC;IACpDsB,KAAK,CAACK,SAAS,GAAGL,KAAK,CAACG,KAAK,CAACC,WAAW,CAAC,IAAI1B,KAAK,GAAC;IACpDsB,KAAK,CAACM,aAAa,GAAG3B,SAAS,CAAC4B,MAAM,CAACP,KAAK,CAACE,SAAS,CAAC,CAACM,SAAS,EAAE;IACnER,KAAK,CAACS,aAAa,GAAG9B,SAAS,CAAC4B,MAAM,CAACP,KAAK,CAACK,SAAS,CAAC,CAACG,SAAS,EAAE;IACnER,KAAK,CAACU,KAAK,GAAG,EAAE;IAChBV,KAAK,CAACW,KAAK,GAAG,EAAE;IAChBX,KAAK,CAACY,OAAO,GAAG,EAAE;IAClBZ,KAAK,CAACa,KAAK,GAAG,IAAIlB,cAAc,EAAE;IAClC;AACR;AACA;AACA;IACQK,KAAK,CAACc,iBAAiB,GAAG,IAAIC,GAAG,EAAE;IACnCf,KAAK,CAACgB,MAAM,GAAG,KAAK;IACpBhB,KAAK,CAACiB,KAAK,GAAG,CACV,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACZ;IACDjB,KAAK,CAACkB,OAAO,GAAG,CACZ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACZ;IACDlB,KAAK,CAACmB,WAAW,GAAG,CAAC;IACrBnB,KAAK,CAACoB,aAAa,GAAG,CAAC;IACvBpB,KAAK,CAACqB,QAAQ,GAAGC,SAAS;IAC1BtB,KAAK,CAACuB,cAAc,GAAG,CAAC;IACxB;AACR;AACA;IACQvB,KAAK,CAACwB,UAAU,GAAG,IAAI1C,SAAS,EAAE;IAClCkB,KAAK,CAACyB,aAAa,IAAI1B,EAAE,GAAG,CAAC,CAAC,EAC1BA,EAAE,CAACb,kBAAkB,CAACwC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EACnC3B,EAAE,CAACb,kBAAkB,CAACyC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EACpC5B,EAAE,CAAC;IACPC,KAAK,CAAC4B,KAAK,GAAG,EAAE;IAChB5B,KAAK,CAAC6B,MAAM,GAAG,EAAE;IACjB;AACR;AACA;AACA;AACA;AACA;IACQ7B,KAAK,CAAC8B,MAAM,GAAG,EAAE;IACjB9B,KAAK,CAAC+B,OAAO,GAAG,EAAE;IAClB/B,KAAK,CAACgC,OAAO,GAAG,KAAK;IACrBhC,KAAK,CAACiC,YAAY,GAAG,CAAC;IACtBjC,KAAK,CAACkC,cAAc,GAAG;MAAEC,IAAI,EAAE;IAAS,CAAC;IACzCnC,KAAK,CAACoC,gBAAgB,CAAC,QAAQ,EAAEpC,KAAK,CAACqC,MAAM,CAAC;IAC9CrC,KAAK,CAACa,KAAK,CAACyB,OAAO,GAAG,KAAK;IAC3BtC,KAAK,CAACa,KAAK,CAACuB,gBAAgB,CAAC,QAAQ,EAAEpC,KAAK,CAACqC,MAAM,EAAErC,KAAK,CAAC;IAC3D,OAAOA,KAAK;EAChB;EACAF,SAAS,CAAC3C,SAAS,CAACoF,OAAO,GAAG,UAAUC,SAAS,EAAE;IAC/C,IAAIxC,KAAK,GAAG,IAAI;IAChB,IAAIyB,aAAa,GAAG,IAAI,CAACA,aAAa;IACtC,IAAIgB,IAAI,GAAGhB,aAAa,IAAIA,aAAa,CAAC,IAAI,CAACT,MAAM,GAAG7B,sBAAsB,CAACqD,SAAS,CAAC,GAAGA,SAAS,CAAC;IACtG,IAAIE,MAAM,GAAG,EAAE;IACf,IAAID,IAAI,EAAE;MACNA,IAAI,CAACE,OAAO,CAAC,UAAUnF,GAAG,EAAE;QACxB,IAAIoF,KAAK,GAAG5C,KAAK,CAACxC,GAAG,CAAC;QACtB,IAAIoF,KAAK,EAAE;UACP,IAAI9F,KAAK,CAAC+F,OAAO,CAACD,KAAK,CAAC,EAAE;YACtBF,MAAM,CAACI,IAAI,CAACjD,KAAK,CAAC6C,MAAM,EAAEE,KAAK,CAAC;UACpC,CAAC,MACI;YACDF,MAAM,CAACI,IAAI,CAACF,KAAK,CAAC;UACtB;QACJ;MACJ,CAAC,CAAC;IACN;IACA,OAAOF,MAAM;EACjB,CAAC;EACD/F,MAAM,CAACuB,cAAc,CAAC4B,SAAS,CAAC3C,SAAS,EAAE,MAAM,EAAE;IAC/C4F,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACnB,KAAK;IACrB,CAAC;IACDoB,GAAG,EAAE,UAAUJ,KAAK,EAAE;MAClB,IAAI,IAAI,CAAChB,KAAK,KAAKgB,KAAK,EAAE;QACtB,IAAI,CAAChB,KAAK,GAAGgB,KAAK;QAClB,IAAI,CAAClC,KAAK,GAAG,EAAE;QACf,IAAI,CAACuC,YAAY,EAAE;MACvB;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFxG,MAAM,CAACuB,cAAc,CAAC4B,SAAS,CAAC3C,SAAS,EAAE,OAAO,EAAE;IAChD4F,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAAClB,MAAM;IACtB,CAAC;IACDmB,GAAG,EAAE,UAAUJ,KAAK,EAAE;MAClB,IAAI,IAAI,CAACf,MAAM,KAAKe,KAAK,EAAE;QACvB,IAAI,CAACf,MAAM,GAAGe,KAAK;QACnB,IAAI,CAACP,MAAM,EAAE;MACjB;IACJ,CAAC;IACDa,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFxG,MAAM,CAACuB,cAAc,CAAC4B,SAAS,CAAC3C,SAAS,EAAE,OAAO,EAAE;IAChD4F,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACjB,MAAM;IACtB,CAAC;IACDkB,GAAG,EAAE,UAAUN,MAAM,EAAE;MACnB,IAAI,CAAClD,KAAK,CAAC,IAAI,CAACsC,MAAM,EAAEY,MAAM,CAAC,EAAE;QAC7B,IAAI,CAACZ,MAAM,GAAGY,MAAM;QACpB,IAAI,CAAC/B,KAAK,GAAG,EAAE;QACf,IAAIyC,mBAAmB,GAAG,IAAI,CAACtC,iBAAiB;QAChDsC,mBAAmB,CAACC,KAAK,EAAE;QAC3BX,MAAM,CAACC,OAAO,CAAC,UAAUnF,GAAG,EAAE;UAAE,OAAO4F,mBAAmB,CAACJ,GAAG,CAACxF,GAAG,EAAE,IAAI,CAAC;QAAE,CAAC,CAAC;QAC7E,IAAIgE,UAAU,GAAG,IAAI,CAACA,UAAU;QAChCA,UAAU,CAAC8B,MAAM,GAAGZ,MAAM;QAC1BlB,UAAU,CAAC+B,OAAO,GAAG,GAAG;QACxB/B,UAAU,CAACgC,KAAK,GAAG,IAAI;QACvB,IAAI,CAACP,YAAY,EAAE;MACvB;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFxG,MAAM,CAACuB,cAAc,CAAC4B,SAAS,CAAC3C,SAAS,EAAE,QAAQ,EAAE;IACjD4F,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAAChB,OAAO;IACvB,CAAC;IACDiB,GAAG,EAAE,UAAUN,MAAM,EAAE;MACnB,IAAI,CAACX,OAAO,GAAGW,MAAM;MACrB,IAAI,CAACO,YAAY,EAAE;IACvB,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFrD,SAAS,CAAC3C,SAAS,CAACsG,SAAS,GAAG,UAAUxC,KAAK,EAAEC,OAAO,EAAE;IACtD,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B,CAAC;EACDvE,MAAM,CAACuB,cAAc,CAAC4B,SAAS,CAAC3C,SAAS,EAAE,cAAc,EAAE;IACvD4F,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACW,aAAa;IAC7B,CAAC;IACDV,GAAG,EAAE,UAAUJ,KAAK,EAAE;MAClB,IAAIe,QAAQ,GAAGf,KAAK,GAAGgB,IAAI,CAACC,GAAG,CAACjB,KAAK,CAAC,GAAGtB,SAAS;MAClD,IAAI,IAAI,CAACoC,aAAa,KAAKC,QAAQ,EAAE;QACjC,IAAI,CAACD,aAAa,GAAGC,QAAQ;QAC7B,IAAI,CAACV,YAAY,EAAE;MACvB;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFxG,MAAM,CAACuB,cAAc,CAAC4B,SAAS,CAAC3C,SAAS,EAAE,aAAa,EAAE;IACtD4F,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACd,YAAY;IAC5B,CAAC;IACDe,GAAG,EAAE,UAAUJ,KAAK,EAAE;MAClB,IAAI,IAAI,CAACX,YAAY,KAAKW,KAAK,EAAE;QAC7B,IAAI,CAACX,YAAY,GAAGW,KAAK;QACzB,IAAI,CAACP,MAAM,EAAE;MACjB;IACJ,CAAC;IACDa,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFxG,MAAM,CAACuB,cAAc,CAAC4B,SAAS,CAAC3C,SAAS,EAAE,QAAQ,EAAE;IACjD4F,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACe,OAAO;IACvB,CAAC;IACDd,GAAG,EAAE,UAAUJ,KAAK,EAAE;MAClB,IAAI,IAAI,CAACkB,OAAO,KAAKlB,KAAK,EAAE;QACxB,IAAI,CAACkB,OAAO,GAAGlB,KAAK;QACpB,IAAI,CAACP,MAAM,EAAE;MACjB;IACJ,CAAC;IACDa,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFrD,SAAS,CAAC3C,SAAS,CAAC4G,iBAAiB,GAAG,YAAY;IAChD,IAAI,CAACC,eAAe,EAAE;EAC1B,CAAC;EACDlE,SAAS,CAAC3C,SAAS,CAAC8G,WAAW,GAAG,YAAY;IAC1C,IAAIlE,EAAE,GAAG,IAAI;MAAEmE,IAAI,GAAGnE,EAAE,CAACmE,IAAI;MAAEC,KAAK,GAAGpE,EAAE,CAACoE,KAAK;MAAErD,iBAAiB,GAAGf,EAAE,CAACe,iBAAiB;IACzF,IAAIsD,IAAI,GAAGF,IAAI,IAAIC,KAAK,CAACvG,MAAM,IAAI,IAAI,CAACwG,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,EAAE;IAC7D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIC,SAAS,GAAG,IAAI,CAAC,CAAC;IACtB,IAAI,CAAC3D,KAAK,GAAG0D,IAAI,CAACE,GAAG,CAAC,UAAUC,KAAK,EAAE;MACnC,IAAIF,SAAS,IAAI,EAAEH,IAAI,IAAIK,KAAK,CAAC,EAAE;QAC/BF,SAAS,GAAG,KAAK;QACjBG,OAAO,CAACC,IAAI,CAAC,WAAW,GAAGP,IAAI,GAAG,+BAA+B,EAAEK,KAAK,CAAC;MAC7E;MACA,OAAOA,KAAK,CAACL,IAAI,CAAC;IACtB,CAAC,CAAC;IACF,IAAI,CAACvD,KAAK,GAAGyD,IAAI,CAACE,GAAG,CAAC,UAAUC,KAAK,EAAE;MAAE,OAAOJ,KAAK,CAACG,GAAG,CAAC,UAAUI,IAAI,EAAE;QACtE,IAAIL,SAAS,IAAI,EAAEK,IAAI,IAAIH,KAAK,CAAC,EAAE;UAC/BF,SAAS,GAAG,KAAK;UACjBG,OAAO,CAACC,IAAI,CAAC,WAAW,GAAGC,IAAI,GAAG,+BAA+B,EAAEH,KAAK,CAAC;QAC7E;QACA,IAAI3B,KAAK,GAAG2B,KAAK,CAACG,IAAI,CAAC;QACvB,OAAOC,QAAQ,CAAC/B,KAAK,CAAC,IAAI9B,iBAAiB,CAACiC,GAAG,CAAC2B,IAAI,CAAC,GAAG9B,KAAK,GAAG,CAAC;MACrE,CAAC,CAAC;IAAE,CAAC,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAIgC,OAAO,GAAG,IAAI,CAACjE,KAAK,CAAC2D,GAAG,CAAC,UAAU5B,MAAM,EAAE;MAAE,OAAOpD,UAAU,CAACoD,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC,CAAC;IAChF,IAAImC,EAAE,GAAG,IAAI;MAAElE,KAAK,GAAGkE,EAAE,CAAClE,KAAK;MAAEmE,YAAY,GAAGD,EAAE,CAACC,YAAY;IAC/D,IAAIC,IAAI,GAAGC,QAAQ;IACnB,IAAIC,IAAI,GAAG,CAACD,QAAQ;IACpB,IAAI,IAAI,CAAChD,OAAO,EAAE;MACd;MACA;MACA;MACA;MACA;MACA+C,IAAI,GAAGnB,IAAI,CAACsB,GAAG,CAACrF,KAAK,CAAC+D,IAAI,EAAEzF,cAAc,CAAC,CAAC,CAAC,CAAC,EAAEwC,KAAK,CAAC2D,GAAG,CAAC,UAAU5B,MAAM,EAAE;QAAE,OAAOkB,IAAI,CAACsB,GAAG,CAACrF,KAAK,CAAC+D,IAAI,EAAElB,MAAM,CAAC;MAAE,CAAC,CAAC,CAAC,CAAC;MACvHuC,IAAI,GAAGrB,IAAI,CAACuB,GAAG,CAACtF,KAAK,CAAC+D,IAAI,EAAEjD,KAAK,CAAC2D,GAAG,CAAC,UAAU5B,MAAM,EAAE;QAAE,OAAOkB,IAAI,CAACuB,GAAG,CAACtF,KAAK,CAAC+D,IAAI,EAAElB,MAAM,CAAC;MAAE,CAAC,CAAC,CAAC;IACtG,CAAC,MACI;MAAE;MACH,IAAI0C,cAAc,GAAG/F,iBAAiB,CAACuF,OAAO,CAAC;MAC/C,IAAIE,YAAY,IAAIH,QAAQ,CAACG,YAAY,CAAC,EAAE;QACxCC,IAAI,GAAGK,cAAc,CAACF,GAAG,GAAG,CAAC,GAAG,CAACJ,YAAY,GAAG,CAAC;QACjDG,IAAI,GAAGH,YAAY;QACnBnE,KAAK,CAACgC,OAAO,CAAC,UAAU0C,WAAW,EAAEpH,CAAC,EAAE;UAAE,OAAOoH,WAAW,CAAC1C,OAAO,CAAC,UAAU2C,CAAC,EAAE9G,CAAC,EAAE;YACjF,IAAI8G,CAAC,GAAG,CAAC,EAAE;cACPD,WAAW,CAAC7G,CAAC,CAAC,GAAG,CAAC8G,CAAC,GAAGV,OAAO,CAAC3G,CAAC,CAAC,CAACiH,GAAG,GAAGJ,YAAY;YACvD,CAAC,MACI;cACDO,WAAW,CAAC7G,CAAC,CAAC,GAAG8G,CAAC,GAAGV,OAAO,CAAC3G,CAAC,CAAC,CAACkH,GAAG,GAAGL,YAAY;YACtD;UACJ,CAAC,CAAC;QAAE,CAAC,CAAC;MACV,CAAC,MACI;QACDC,IAAI,GAAGK,cAAc,CAACF,GAAG;QACzBD,IAAI,GAAGG,cAAc,CAACD,GAAG;MAC7B;IACJ;IACA,IAAI,CAACvE,OAAO,GAAG,IAAI,CAAC2E,gBAAgB,CAAC,CAACR,IAAI,EAAEE,IAAI,CAAC,EAAE,GAAG,CAAC;IACvD,IAAI,CAACO,SAAS,CAAC;MAAEC,IAAI,EAAE;IAAgB,CAAC,CAAC;IACzC,OAAO,IAAI;EACf,CAAC;EACD3F,SAAS,CAAC3C,SAAS,CAACuI,SAAS,GAAG,UAAUlD,SAAS,EAAE;IACjD,IAAI,IAAI,CAACxB,MAAM,EAAE;MACbwB,SAAS,GAAGrD,sBAAsB,CAACqD,SAAS,CAAC;IACjD;IACA,IAAIA,SAAS,KAAKtD,kBAAkB,CAACwC,CAAC,EAAE;MACpC,OAAO,IAAI,CAAChB,KAAK;IACrB,CAAC,MACI;MACD,OAAO,IAAI,CAACE,OAAO;IACvB;EACJ,CAAC;EACDd,SAAS,CAAC3C,SAAS,CAACwI,kBAAkB,GAAG,UAAUpB,KAAK,EAAE;IACtD,IAAI,CAACiB,SAAS,CAAC;MACXC,IAAI,EAAE,WAAW;MACjBG,MAAM,EAAE,IAAI;MACZrB,KAAK,EAAEA,KAAK,CAACsB,WAAW;MACxB3B,IAAI,EAAE,IAAI,CAACA,IAAI;MACfQ,IAAI,EAAEH,KAAK,CAACG;IAChB,CAAC,CAAC;EACN,CAAC;EACD5E,SAAS,CAAC3C,SAAS,CAAC2I,gBAAgB,GAAG,YAAY;IAC/C,IAAI9F,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAACoE,IAAI,EAAE;MACZ,OAAO,EAAE;IACb;IACA,IAAIpD,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAI+E,KAAK,GAAG/E,MAAM,GAAG,IAAI,CAACgF,KAAK,GAAG,IAAI,CAACD,KAAK;IAC5C,IAAIC,KAAK,GAAGhF,MAAM,GAAG,IAAI,CAAC+E,KAAK,GAAG,IAAI,CAACC,KAAK;IAC5C,IAAIC,MAAM,GAAGF,KAAK,CAACG,KAAK;IACxB,IAAIC,MAAM,GAAGH,KAAK,CAACE,KAAK;IACxB,IAAInG,EAAE,GAAG,IAAI;MAAEyB,UAAU,GAAGzB,EAAE,CAACyB,UAAU;MAAE2C,KAAK,GAAGpE,EAAE,CAACoE,KAAK;MAAElD,KAAK,GAAGlB,EAAE,CAACkB,KAAK;MAAEC,OAAO,GAAGnB,EAAE,CAACmB,OAAO;MAAEc,OAAO,GAAGjC,EAAE,CAACiC,OAAO;MAAEoE,WAAW,GAAGrG,EAAE,CAACqG,WAAW;MAAEtF,iBAAiB,GAAGf,EAAE,CAACe,iBAAiB;MAAEsD,IAAI,GAAGrE,EAAE,CAACqE,IAAI;MAAE1D,KAAK,GAAGX,EAAE,CAACW,KAAK;MAAEC,KAAK,GAAGZ,EAAE,CAACY,KAAK;IACrP,IAAIE,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIwF,cAAc,GAAGxF,KAAK,CAACyF,SAAS;IACpC,IAAIC,eAAe,GAAG1F,KAAK,CAAC2F,UAAU;IACtC,IAAIC,aAAa,GAAG5F,KAAK,CAAC6F,QAAQ;IAClC,IAAIC,eAAe,GAAG9F,KAAK,CAAC+F,UAAU;IACtC,IAAIC,UAAU,GAAGhG,KAAK,CAACiG,KAAK;IAC5B,IAAIC,cAAc,GAAGlG,KAAK,CAACmG,SAAS;IACpCxF,UAAU,CAACyF,KAAK,GAAG,CAAC,CAAC,EAAEhB,MAAM,CAACiB,SAAS,CAAC;IACxC,IAAIC,QAAQ,GAAGnF,OAAO,GAAGR,UAAU,CAAC0F,SAAS,GAAGjB,MAAM,CAACiB,SAAS;IAChE,IAAIE,QAAQ,GAAG,EAAE;IACjB1G,KAAK,CAACiC,OAAO,CAAC,UAAU0E,QAAQ,EAAEpJ,CAAC,EAAE;MACjC,IAAIqJ,MAAM,GAAG3G,KAAK,CAAC1C,CAAC,CAAC;MACrB,IAAI4H,WAAW,GAAGzB,IAAI,CAACnG,CAAC,CAAC;MACzB,IAAIsJ,CAAC,GAAGtB,MAAM,CAACuB,OAAO,CAACH,QAAQ,CAAC;MAChC,IAAII,OAAO,GAAG,CAAC;MACf,IAAIC,OAAO,GAAG,CAAC;MACf,KAAK,IAAIlJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8I,MAAM,CAAC1J,MAAM,EAAEY,CAAC,EAAE,EAAE;QACpC,IAAImJ,IAAI,GAAGL,MAAM,CAAC9I,CAAC,CAAC;QACpB,IAAIkG,IAAI,GAAGP,KAAK,CAAC3F,CAAC,CAAC;QACnB,IAAIoJ,IAAI,GAAG5F,OAAO,GAAGuF,CAAC,GAAG/F,UAAU,CAACgG,OAAO,CAAC9C,IAAI,CAAC,GAAG6C,CAAC;QACrD,IAAI,CAACxB,KAAK,CAAC8B,OAAO,CAACD,IAAI,EAAET,QAAQ,CAAC,EAAE;UAChC;QACJ;QACA,IAAIW,IAAI,GAAGH,IAAI,GAAG,CAAC,GAAGF,OAAO,GAAGC,OAAO;QACvC,IAAIpC,CAAC,GAAGa,MAAM,CAACqB,OAAO,CAACxF,OAAO,GAAG2F,IAAI,GAAGG,IAAI,GAAGH,IAAI,CAAC;QACpD,IAAII,OAAO,GAAG5B,MAAM,CAACqB,OAAO,CAACxF,OAAO,GAAG,CAAC,GAAG8F,IAAI,CAAC;QAChD,IAAIE,MAAM,GAAGnC,WAAW,CAACnB,IAAI,CAAC,CAAC,CAAC;QAChC,IAAIuD,cAAc,GAAG,OAAOD,MAAM,KAAK,QAAQ;QAC/C,IAAIE,SAAS,GAAG,KAAK,CAAC;QACtB,IAAInB,cAAc,EAAE;UAChBmB,SAAS,GAAGnB,cAAc,CAAC;YAAEnE,KAAK,EAAEqF,cAAc,GAAGD,MAAM,GAAG1G;UAAU,CAAC,CAAC;QAC9E,CAAC,MACI;UACD4G,SAAS,GAAGD,cAAc,IAAItD,QAAQ,CAACqD,MAAM,CAAC,GAAGA,MAAM,CAACzI,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE;QAC3E;QACA6H,QAAQ,CAACtE,IAAI,CAAC;UACV8C,MAAM,EAAE5F,KAAK;UACb6F,WAAW,EAAEA,WAAW;UACxBmC,MAAM,EAAEA,MAAM;UACdtD,IAAI,EAAEA,IAAI;UACV6C,CAAC,EAAEvG,MAAM,GAAG4C,IAAI,CAACsB,GAAG,CAACI,CAAC,EAAEyC,OAAO,CAAC,GAAGH,IAAI;UACvCtC,CAAC,EAAEtE,MAAM,GAAG4G,IAAI,GAAGhE,IAAI,CAACsB,GAAG,CAACI,CAAC,EAAEyC,OAAO,CAAC;UACvCI,KAAK,EAAEnH,MAAM,GAAG4C,IAAI,CAACC,GAAG,CAACkE,OAAO,GAAGzC,CAAC,CAAC,GAAG6B,QAAQ;UAChDiB,MAAM,EAAEpH,MAAM,GAAGmG,QAAQ,GAAGvD,IAAI,CAACC,GAAG,CAACkE,OAAO,GAAGzC,CAAC,CAAC;UACjDnD,IAAI,EAAElB,KAAK,CAACzC,CAAC,GAAGyC,KAAK,CAACrD,MAAM,CAAC;UAC7ByK,MAAM,EAAEnH,OAAO,CAAC1C,CAAC,GAAG0C,OAAO,CAACtD,MAAM,CAAC;UACnCwI,WAAW,EAAEA,WAAW;UACxBvF,KAAK,EAAEC,iBAAiB,CAACiC,GAAG,CAAC2B,IAAI,CAAC,IAAIwD,SAAS,GAAG;YAC9CI,IAAI,EAAEJ,SAAS;YACf5B,SAAS,EAAED,cAAc;YACzBG,UAAU,EAAED,eAAe;YAC3BG,QAAQ,EAAED,aAAa;YACvBG,UAAU,EAAED,eAAe;YAC3BxE,IAAI,EAAE0E,UAAU;YAChBU,CAAC,EAAEvG,MAAM,GAAGsE,CAAC,GAAG,CAAC0C,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIpE,IAAI,CAACC,GAAG,CAACkE,OAAO,GAAGzC,CAAC,CAAC,GAAG,CAAC,GAAGsC,IAAI,GAAGT,QAAQ,GAAG,CAAC;YACxF7B,CAAC,EAAEtE,MAAM,GAAG4G,IAAI,GAAGT,QAAQ,GAAG,CAAC,GAAG7B,CAAC,GAAG,CAAC0C,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIpE,IAAI,CAACC,GAAG,CAACkE,OAAO,GAAGzC,CAAC,CAAC,GAAG;UAC3F,CAAC,GAAGhE;QACR,CAAC,CAAC;QACF,IAAI,CAACU,OAAO,EAAE;UACV,IAAI2F,IAAI,GAAG,CAAC,EAAE;YACVF,OAAO,IAAIE,IAAI;UACnB,CAAC,MACI;YACDD,OAAO,IAAIC,IAAI;UACnB;QACJ;MACJ;IACJ,CAAC,CAAC;IACF,OAAOP,QAAQ;EACnB,CAAC;EACDtH,SAAS,CAAC3C,SAAS,CAACkF,MAAM,GAAG,YAAY;IACrC,IAAItC,EAAE,GAAG,IAAI;MAAEwI,OAAO,GAAGxI,EAAE,CAACwI,OAAO;MAAEC,KAAK,GAAGzI,EAAE,CAACyI,KAAK;MAAEzC,KAAK,GAAGhG,EAAE,CAACgG,KAAK;MAAEC,KAAK,GAAGjG,EAAE,CAACiG,KAAK;MAAEtF,KAAK,GAAGX,EAAE,CAACW,KAAK;MAAEC,KAAK,GAAGZ,EAAE,CAACY,KAAK;IAC7H,IAAI,CAACR,KAAK,CAACoI,OAAO,GAAGA,OAAO;IAC5B,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,aAAa,IAAID,KAAK,CAACE,WAAW,IAClD,CAAC3C,KAAK,IAAI,CAACC,KAAK,IAAI,CAACuC,OAAO,IAAI,CAAC7H,KAAK,CAAC9C,MAAM,IAAI,CAAC+C,KAAK,CAAC/C,MAAM,EAAE;MAChE;IACJ;IACA,IAAIwJ,QAAQ,GAAG,IAAI,CAACtB,gBAAgB,EAAE;IACtC,IAAI,CAAC6C,mBAAmB,CAACvB,QAAQ,CAAC;IAClC,IAAI,CAACpD,eAAe,EAAE;IACtB,IAAI,CAAC4E,mBAAmB,CAACxB,QAAQ,CAAC;IAClC,IAAI,CAACyB,eAAe,EAAE;EAC1B,CAAC;EACD/I,SAAS,CAAC3C,SAAS,CAACwL,mBAAmB,GAAG,UAAUG,aAAa,EAAE;IAC/D,IAAIC,WAAW,GAAG,IAAI,CAACzI,aAAa,CAAC0I,OAAO,CAACF,aAAa,CAAC;IAC3DC,WAAW,CAACE,IAAI,CAACC,MAAM,EAAE;IACzB,IAAIC,UAAU,GAAGJ,WAAW,CAACK,KAAK,CAACC,MAAM,CAACzK,IAAI,CAAC,CAAC0K,IAAI,CAAC,UAAUC,IAAI,EAAE;MACjEA,IAAI,CAACC,GAAG,GAAG9J,gBAAgB,CAAC+J,GAAG;MAC/BF,IAAI,CAACG,KAAK,GAAG,IAAI;IACrB,CAAC,CAAC;IACF,IAAI,CAACpJ,aAAa,GAAGyI,WAAW,CAACY,KAAK,CAACR,UAAU,CAAC;EACtD,CAAC;EACDrJ,SAAS,CAAC3C,SAAS,CAAC6G,eAAe,GAAG,YAAY;IAC9C,IAAIhE,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAACwI,KAAK,EAAE;MACb;IACJ;IACA,IAAIzI,EAAE,GAAG,IAAI;MAAEoB,WAAW,GAAGpB,EAAE,CAACoB,WAAW;MAAEC,aAAa,GAAGrB,EAAE,CAACqB,aAAa;MAAEyD,EAAE,GAAG9E,EAAE,CAACmC,cAAc;MAAEC,IAAI,GAAG0C,EAAE,CAAC1C,IAAI;MAAEkG,MAAM,GAAGxD,EAAE,CAACwD,MAAM;MAAEuB,MAAM,GAAG7J,EAAE,CAAC6J,MAAM;MAAE5C,SAAS,GAAGjH,EAAE,CAACiH,SAAS;MAAE9C,IAAI,GAAGnE,EAAE,CAACmE,IAAI;MAAElD,MAAM,GAAGjB,EAAE,CAACiB,MAAM;IAC3N,IAAI6I,gBAAgB,GAAG,IAAI,CAACrB,KAAK,CAACqB,gBAAgB;IAClD,IAAI,CAACvJ,aAAa,CAACgJ,IAAI,CAAC,UAAUC,IAAI,EAAEhF,KAAK,EAAE;MAC3C,IAAIuF,WAAW,GAAGvF,KAAK,KAAKsF,gBAAgB;MAC5C,IAAIE,QAAQ,GAAGD,WAAW,IAAI3H,IAAI,KAAKb,SAAS,GAAGa,IAAI,GAAGoC,KAAK,CAACpC,IAAI;MACpE,IAAI6H,UAAU,GAAGF,WAAW,IAAIzB,MAAM,KAAK/G,SAAS,GAAG+G,MAAM,GAAG9D,KAAK,CAAC8D,MAAM;MAC5E,IAAI4B,MAAM,GAAG3I,SAAS;MACtB,IAAI0F,SAAS,EAAE;QACXiD,MAAM,GAAGjD,SAAS,CAAC;UACfzC,KAAK,EAAEA,KAAK,CAACsB,WAAW;UACxB1D,IAAI,EAAE4H,QAAQ;UACd1B,MAAM,EAAE2B,UAAU;UAClB5D,WAAW,EAAE7B,KAAK,CAAC6B,WAAW;UAC9B0D,WAAW,EAAEA,WAAW;UACxB5F,IAAI,EAAEA,IAAI;UACVQ,IAAI,EAAEH,KAAK,CAACG;QAChB,CAAC,CAAC;MACN;MACA6E,IAAI,CAAChC,CAAC,GAAGhD,KAAK,CAACgD,CAAC;MAChBgC,IAAI,CAACjE,CAAC,GAAGf,KAAK,CAACe,CAAC;MAChBiE,IAAI,CAACpB,KAAK,GAAG5D,KAAK,CAAC4D,KAAK;MACxBoB,IAAI,CAACnB,MAAM,GAAG7D,KAAK,CAAC6D,MAAM;MAC1BmB,IAAI,CAACpH,IAAI,GAAG8H,MAAM,IAAIA,MAAM,CAAC9H,IAAI,IAAI4H,QAAQ;MAC7CR,IAAI,CAAClB,MAAM,GAAG4B,MAAM,IAAIA,MAAM,CAAC5B,MAAM,IAAI2B,UAAU;MACnDT,IAAI,CAACnD,WAAW,GAAG6D,MAAM,IAAIA,MAAM,CAAC7D,WAAW,KAAK9E,SAAS,GAAG2I,MAAM,CAAC7D,WAAW,GAAG7B,KAAK,CAAC6B,WAAW;MACtGmD,IAAI,CAACpI,WAAW,GAAGA,WAAW;MAC9BoI,IAAI,CAACnI,aAAa,GAAGA,aAAa;MAClCmI,IAAI,CAAClI,QAAQ,GAAGrB,KAAK,CAACqB,QAAQ;MAC9BkI,IAAI,CAAChI,cAAc,GAAGvB,KAAK,CAACuB,cAAc;MAC1CgI,IAAI,CAACW,UAAU,GAAGN,MAAM;MACxB;MACAL,IAAI,CAAChB,OAAO,GAAGvH,MAAM,GAAGuD,KAAK,CAAC4D,KAAK,GAAG,CAAC,GAAG5D,KAAK,CAAC6D,MAAM,GAAG,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC;EACDtI,SAAS,CAAC3C,SAAS,CAACyL,mBAAmB,GAAG,UAAUE,aAAa,EAAE;IAC/D,IAAIqB,WAAW,GAAG,IAAI,CAAC1J,aAAa,CAACuI,OAAO,CAACF,aAAa,CAAC;IAC3DqB,WAAW,CAAClB,IAAI,CAACC,MAAM,EAAE;IACzB,IAAIkB,UAAU,GAAGD,WAAW,CAACf,KAAK,CAACC,MAAM,CAACxK,IAAI,CAAC,CAACyK,IAAI,CAAC,UAAUhB,IAAI,EAAE;MACjEA,IAAI,CAACkB,GAAG,GAAG9J,gBAAgB,CAACX,KAAK;MACjCuJ,IAAI,CAAC+B,aAAa,GAAGrL,aAAa,CAACsL,IAAI;MACvChC,IAAI,CAACiC,SAAS,GAAG,QAAQ;MACzBjC,IAAI,CAACkC,YAAY,GAAG,QAAQ;IAChC,CAAC,CAAC;IACF,IAAI,CAAC/J,aAAa,GAAG0J,WAAW,CAACR,KAAK,CAACS,UAAU,CAAC;EACtD,CAAC;EACDtK,SAAS,CAAC3C,SAAS,CAAC0L,eAAe,GAAG,YAAY;IAC9C,IAAI4B,YAAY,GAAG,IAAI,CAAC5J,KAAK,CAACyB,OAAO;IACrC,IAAI,CAAC7B,aAAa,CAAC6I,IAAI,CAAC,UAAUhB,IAAI,EAAE/D,KAAK,EAAE;MAC3C,IAAI1D,KAAK,GAAG0D,KAAK,CAAC1D,KAAK;MACvB,IAAIA,KAAK,IAAI4J,YAAY,EAAE;QACvBnC,IAAI,CAAChC,SAAS,GAAGzF,KAAK,CAACyF,SAAS;QAChCgC,IAAI,CAAC9B,UAAU,GAAG3F,KAAK,CAAC2F,UAAU;QAClC8B,IAAI,CAAC5B,QAAQ,GAAG7F,KAAK,CAAC6F,QAAQ;QAC9B4B,IAAI,CAAC1B,UAAU,GAAG/F,KAAK,CAAC+F,UAAU;QAClC0B,IAAI,CAACA,IAAI,GAAGzH,KAAK,CAACyH,IAAI;QACtBA,IAAI,CAACf,CAAC,GAAG1G,KAAK,CAAC0G,CAAC;QAChBe,IAAI,CAAChD,CAAC,GAAGzE,KAAK,CAACyE,CAAC;QAChBgD,IAAI,CAACnG,IAAI,GAAGtB,KAAK,CAACsB,IAAI;QACtBmG,IAAI,CAACC,OAAO,GAAG,IAAI;MACvB,CAAC,MACI;QACDD,IAAI,CAACC,OAAO,GAAG,KAAK;MACxB;IACJ,CAAC,CAAC;EACN,CAAC;EACDzI,SAAS,CAAC3C,SAAS,CAACuN,cAAc,GAAG,UAAUC,SAAS,EAAE;IACtD,IAAIzG,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,IAAIQ,IAAI,GAAGiG,SAAS,CAACjG,IAAI;IACzB,IAAI,CAACR,IAAI,IAAI,CAACQ,IAAI,EAAE;MAChB,OAAO,EAAE;IACb;IACA,IAAI3E,EAAE,GAAG,IAAI;MAAE6K,KAAK,GAAG7K,EAAE,CAAC6K,KAAK;MAAEzG,KAAK,GAAGpE,EAAE,CAACoE,KAAK;MAAE0G,MAAM,GAAG9K,EAAE,CAAC8K,MAAM;MAAE5J,KAAK,GAAGlB,EAAE,CAACkB,KAAK;MAAE6J,eAAe,GAAG/K,EAAE,CAAC+K,eAAe;IAC7H,IAAIvG,KAAK,GAAGoG,SAAS,CAAC9E,WAAW;IACjC,IAAIkF,SAAS,GAAG5G,KAAK,CAAC6G,OAAO,CAACtG,IAAI,CAAC;IACnC,IAAIuG,KAAK,GAAGJ,MAAM,CAACE,SAAS,CAAC;IAC7B,IAAIjE,KAAK,GAAG7F,KAAK,CAAC8J,SAAS,GAAG9J,KAAK,CAACrD,MAAM,CAAC;IAC3C,IAAIsN,MAAM,GAAG3G,KAAK,CAACL,IAAI,CAAC;IACxB,IAAI8D,MAAM,GAAGzD,KAAK,CAACG,IAAI,CAAC;IACxB,IAAIyG,OAAO,GAAG,OAAOD,MAAM,KAAK,QAAQ,GAAG3L,OAAO,CAAC2L,MAAM,CAAC,GAAGE,MAAM,CAACF,MAAM,CAAC;IAC3E,IAAIG,OAAO,GAAG,OAAOrD,MAAM,KAAK,QAAQ,GAAGzI,OAAO,CAACyI,MAAM,CAAC,GAAGoD,MAAM,CAACpD,MAAM,CAAC;IAC3E,IAAIsD,KAAK,GAAGL,KAAK;IACjB,IAAIM,OAAO,GAAGJ,OAAO,GAAG,IAAI,GAAGE,OAAO;IACtC,IAAIG,QAAQ,GAAG;MACXF,KAAK,EAAEA,KAAK;MACZG,oBAAoB,EAAE3E,KAAK;MAC3ByE,OAAO,EAAEA;IACb,CAAC;IACD,IAAIT,eAAe,EAAE;MACjB,OAAO1L,aAAa,CAAC0L,eAAe,CAAC;QACjCvG,KAAK,EAAEA,KAAK;QACZL,IAAI,EAAEA,IAAI;QACVgH,MAAM,EAAEA,MAAM;QACdN,KAAK,EAAEA,KAAK;QACZlG,IAAI,EAAEA,IAAI;QACVsD,MAAM,EAAEA,MAAM;QACdiD,KAAK,EAAEA,KAAK;QACZnE,KAAK,EAAEA;MACX,CAAC,CAAC,EAAE0E,QAAQ,CAAC;IACjB;IACA,OAAOpM,aAAa,CAACoM,QAAQ,CAAC;EAClC,CAAC;EACD1L,SAAS,CAAC3C,SAAS,CAACuO,eAAe,GAAG,UAAUC,UAAU,EAAE;IACxD,IAAI5L,EAAE,GAAG,IAAI;MAAE6L,EAAE,GAAG7L,EAAE,CAAC6L,EAAE;MAAExH,IAAI,GAAGrE,EAAE,CAACqE,IAAI;MAAEF,IAAI,GAAGnE,EAAE,CAACmE,IAAI;MAAEC,KAAK,GAAGpE,EAAE,CAACoE,KAAK;MAAE0G,MAAM,GAAG9K,EAAE,CAAC8K,MAAM;MAAE/J,iBAAiB,GAAGf,EAAE,CAACe,iBAAiB;MAAEG,KAAK,GAAGlB,EAAE,CAACkB,KAAK;MAAEC,OAAO,GAAGnB,EAAE,CAACmB,OAAO;MAAEC,WAAW,GAAGpB,EAAE,CAACoB,WAAW;MAAEC,aAAa,GAAGrB,EAAE,CAACqB,aAAa;IACjP,IAAIgD,IAAI,IAAIA,IAAI,CAACxG,MAAM,IAAIsG,IAAI,IAAIC,KAAK,CAACvG,MAAM,EAAE;MAC7CuG,KAAK,CAACxB,OAAO,CAAC,UAAU+B,IAAI,EAAEmH,KAAK,EAAE;QACjCF,UAAU,CAAC7I,IAAI,CAAC;UACZ8I,EAAE,EAAEA,EAAE;UACNE,MAAM,EAAEpH,IAAI;UACZpC,OAAO,EAAExB,iBAAiB,CAACiC,GAAG,CAAC2B,IAAI,CAAC,IAAI,KAAK;UAC7C7D,KAAK,EAAE;YACHyH,IAAI,EAAEuC,MAAM,CAACgB,KAAK,CAAC,IAAI1H,KAAK,CAAC0H,KAAK;UACtC,CAAC;UACDE,MAAM,EAAE;YACJ5J,IAAI,EAAElB,KAAK,CAAC4K,KAAK,GAAG5K,KAAK,CAACrD,MAAM,CAAC;YACjCyK,MAAM,EAAEnH,OAAO,CAAC2K,KAAK,GAAG3K,OAAO,CAACtD,MAAM,CAAC;YACvCuD,WAAW,EAAEA,WAAW;YACxBC,aAAa,EAAEA;UACnB;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC;EACDtB,SAAS,CAAC3C,SAAS,CAAC6O,gBAAgB,GAAG,UAAUF,MAAM,EAAExJ,OAAO,EAAE;IAC9D,IAAIxB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;IAC9C,IAAImL,kBAAkB,GAAG,EAAE;IAC3BnL,iBAAiB,CAACkC,GAAG,CAAC8I,MAAM,EAAExJ,OAAO,CAAC;IACtCxB,iBAAiB,CAAC6B,OAAO,CAAC,UAAUL,OAAO,EAAEoC,IAAI,EAAE;MAC/C,IAAIpC,OAAO,EAAE;QACT2J,kBAAkB,CAACnJ,IAAI,CAAC4B,IAAI,CAAC;MACjC;IACJ,CAAC,CAAC;IACF,IAAI,CAAClD,UAAU,CAAC8B,MAAM,GAAG2I,kBAAkB;IAC3C,IAAI,CAAChJ,YAAY,EAAE;EACvB,CAAC;EACDnD,SAAS,CAACoM,SAAS,GAAG,WAAW;EACjCpM,SAAS,CAAC2F,IAAI,GAAG,KAAK;EACtBpI,UAAU,CAAC,CACPoC,QAAQ,CAAC,cAAc,CAAC,CAC3B,EAAEK,SAAS,CAAC3C,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;EACzCE,UAAU,CAAC,CACPoC,QAAQ,CAAC,YAAY,CAAC,CACzB,EAAEK,SAAS,CAAC3C,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EACxCE,UAAU,CAAC,CACPoC,QAAQ,CAAC,YAAY,CAAC,CACzB,EAAEK,SAAS,CAAC3C,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACPoC,QAAQ,CAAC,cAAc,CAAC,CAC3B,EAAEK,SAAS,CAAC3C,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC9CE,UAAU,CAAC,CACPoC,QAAQ,CAAC,cAAc,CAAC,CAC3B,EAAEK,SAAS,CAAC3C,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAChDE,UAAU,CAAC,CACPoC,QAAQ,CAAC,QAAQ,CAAC,CACrB,EAAEK,SAAS,CAAC3C,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPoC,QAAQ,CAAC,QAAQ,CAAC,CACrB,EAAEK,SAAS,CAAC3C,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;EACjDE,UAAU,CAAC,CACPoC,QAAQ,CAAC,QAAQ,CAAC,CACrB,EAAEK,SAAS,CAAC3C,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPoC,QAAQ,CAAC,YAAY,CAAC,CACzB,EAAEK,SAAS,CAAC3C,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EAC1C,OAAO2C,SAAS;AACpB,CAAC,CAACb,eAAe,CAAE;AACnB,SAASa,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}