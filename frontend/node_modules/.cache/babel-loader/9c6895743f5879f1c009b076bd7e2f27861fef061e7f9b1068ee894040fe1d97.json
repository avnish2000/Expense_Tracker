{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Node } from \"../node\";\nimport { chainObjects } from \"../../util/object\";\nvar Shape = /** @class */function (_super) {\n  __extends(Shape, _super);\n  function Shape() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.lastInstanceId = 0;\n    _this._fillOpacity = 1;\n    _this._strokeOpacity = 1;\n    _this._fill = Shape.defaultStyles.fill;\n    /**\n     * Note that `strokeStyle = null` means invisible stroke,\n     * while `lineWidth = 0` means no stroke, and sometimes this can mean different things.\n     * For example, a rect shape with an invisible stroke may not align to the pixel grid\n     * properly because the stroke affects the rules of alignment, and arc shapes forming\n     * a pie chart will have a gap between them if they have an invisible stroke, whereas\n     * there would be not gap if there was no stroke at all.\n     * The preferred way of making the stroke invisible is setting the `lineWidth` to zero,\n     * unless specific looks that is achieved by having an invisible stroke is desired.\n     */\n    _this._stroke = Shape.defaultStyles.stroke;\n    _this._strokeWidth = Shape.defaultStyles.strokeWidth;\n    _this._lineDash = Shape.defaultStyles.lineDash;\n    _this._lineDashOffset = Shape.defaultStyles.lineDashOffset;\n    _this._lineCap = Shape.defaultStyles.lineCap;\n    _this._lineJoin = Shape.defaultStyles.lineJoin;\n    _this._opacity = Shape.defaultStyles.opacity;\n    _this.onShadowChange = function () {\n      _this.dirty = true;\n    };\n    _this._fillShadow = Shape.defaultStyles.fillShadow;\n    _this._strokeShadow = Shape.defaultStyles.strokeShadow;\n    return _this;\n  }\n  /**\n   * Creates a light-weight instance of the given shape (that serves as a template).\n   * The created instance only stores the properites set on the instance itself\n   * and the rest of the properties come via the prototype chain from the template.\n   * This can greatly reduce memory usage in cases where one has many simular shapes,\n   * for example, circles of different size, position and color. The exact memory usage\n   * reduction will depend on the size of the template and the number of own properties\n   * set on its lightweight instances, but will typically be around an order of magnitude\n   * or more.\n   *\n   * Note: template shapes are not supposed to be part of the scene graph (they should not\n   * have a parent).\n   *\n   * @param template\n   */\n  Shape.createInstance = function (template) {\n    var shape = Object.create(template);\n    shape._setParent(undefined);\n    shape.id = template.id + '-Instance-' + String(++template.lastInstanceId);\n    return shape;\n  };\n  /**\n   * Restores the default styles introduced by this subclass.\n   */\n  Shape.prototype.restoreOwnStyles = function () {\n    var styles = this.constructor.defaultStyles;\n    var keys = Object.getOwnPropertyNames(styles);\n    // getOwnPropertyNames is about 2.5 times faster than\n    // for..in with the hasOwnProperty check and in this\n    // case, where most properties are inherited, can be\n    // more then an order of magnitude faster.\n    for (var i = 0, n = keys.length; i < n; i++) {\n      var key = keys[i];\n      this[key] = styles[key];\n    }\n  };\n  Shape.prototype.restoreAllStyles = function () {\n    var styles = this.constructor.defaultStyles;\n    for (var property in styles) {\n      this[property] = styles[property];\n    }\n  };\n  /**\n   * Restores the base class default styles that have been overridden by this subclass.\n   */\n  Shape.prototype.restoreOverriddenStyles = function () {\n    var styles = this.constructor.defaultStyles;\n    var protoStyles = Object.getPrototypeOf(styles);\n    for (var property in styles) {\n      if (styles.hasOwnProperty(property) && protoStyles.hasOwnProperty(property)) {\n        this[property] = styles[property];\n      }\n    }\n  };\n  Object.defineProperty(Shape.prototype, \"fillOpacity\", {\n    get: function () {\n      return this._fillOpacity;\n    },\n    set: function (value) {\n      if (this._fillOpacity !== value) {\n        this._fillOpacity = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"strokeOpacity\", {\n    get: function () {\n      return this._strokeOpacity;\n    },\n    set: function (value) {\n      if (this._strokeOpacity !== value) {\n        this._strokeOpacity = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"fill\", {\n    get: function () {\n      return this._fill;\n    },\n    set: function (value) {\n      if (this._fill !== value) {\n        this._fill = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"stroke\", {\n    get: function () {\n      return this._stroke;\n    },\n    set: function (value) {\n      if (this._stroke !== value) {\n        this._stroke = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"strokeWidth\", {\n    get: function () {\n      return this._strokeWidth;\n    },\n    set: function (value) {\n      if (this._strokeWidth !== value) {\n        this._strokeWidth = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"alignment\", {\n    // An offset value to align to the pixel grid.\n    get: function () {\n      return Math.floor(this.strokeWidth) % 2 / 2;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // Returns the aligned `start` or `length` value.\n  // For example: `start` could be `y` and `length` could be `height` of a rectangle.\n  Shape.prototype.align = function (alignment, start, length) {\n    if (length != undefined) {\n      return Math.floor(length) + Math.floor(start % 1 + length % 1);\n    }\n    return Math.floor(start) + alignment;\n  };\n  Object.defineProperty(Shape.prototype, \"lineDash\", {\n    get: function () {\n      return this._lineDash;\n    },\n    set: function (value) {\n      var oldValue = this._lineDash;\n      if (oldValue !== value) {\n        if (oldValue && value && oldValue.length === value.length) {\n          var identical = true;\n          var n = value.length;\n          for (var i = 0; i < n; i++) {\n            if (oldValue[i] !== value[i]) {\n              identical = false;\n              break;\n            }\n          }\n          if (identical) {\n            return;\n          }\n        }\n        this._lineDash = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"lineDashOffset\", {\n    get: function () {\n      return this._lineDashOffset;\n    },\n    set: function (value) {\n      if (this._lineDashOffset !== value) {\n        this._lineDashOffset = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"lineCap\", {\n    get: function () {\n      return this._lineCap;\n    },\n    set: function (value) {\n      if (this._lineCap !== value) {\n        this._lineCap = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"lineJoin\", {\n    get: function () {\n      return this._lineJoin;\n    },\n    set: function (value) {\n      if (this._lineJoin !== value) {\n        this._lineJoin = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"opacity\", {\n    get: function () {\n      return this._opacity;\n    },\n    set: function (value) {\n      value = Math.min(1, Math.max(0, value));\n      if (this._opacity !== value) {\n        this._opacity = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"fillShadow\", {\n    get: function () {\n      return this._fillShadow;\n    },\n    set: function (value) {\n      var oldValue = this._fillShadow;\n      if (oldValue !== value) {\n        if (oldValue) {\n          oldValue.removeEventListener('change', this.onShadowChange);\n        }\n        if (value) {\n          value.addEventListener('change', this.onShadowChange);\n        }\n        this._fillShadow = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Shape.prototype, \"strokeShadow\", {\n    get: function () {\n      return this._strokeShadow;\n    },\n    set: function (value) {\n      var oldValue = this._strokeShadow;\n      if (oldValue !== value) {\n        if (oldValue) {\n          oldValue.removeEventListener('change', this.onShadowChange);\n        }\n        if (value) {\n          value.addEventListener('change', this.onShadowChange);\n        }\n        this._strokeShadow = value;\n        this.dirty = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Shape.prototype.fillStroke = function (ctx) {\n    if (!this.scene) {\n      return;\n    }\n    var pixelRatio = this.scene.canvas.pixelRatio || 1;\n    if (this.fill) {\n      ctx.fillStyle = this.fill;\n      ctx.globalAlpha = this.opacity * this.fillOpacity;\n      // The canvas context scaling (depends on the device's pixel ratio)\n      // has no effect on shadows, so we have to account for the pixel ratio\n      // manually here.\n      var fillShadow = this.fillShadow;\n      if (fillShadow && fillShadow.enabled) {\n        ctx.shadowColor = fillShadow.color;\n        ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = fillShadow.blur * pixelRatio;\n      }\n      ctx.fill();\n    }\n    ctx.shadowColor = 'rgba(0, 0, 0, 0)';\n    if (this.stroke && this.strokeWidth) {\n      ctx.strokeStyle = this.stroke;\n      ctx.globalAlpha = this.opacity * this.strokeOpacity;\n      ctx.lineWidth = this.strokeWidth;\n      if (this.lineDash) {\n        ctx.setLineDash(this.lineDash);\n      }\n      if (this.lineDashOffset) {\n        ctx.lineDashOffset = this.lineDashOffset;\n      }\n      if (this.lineCap) {\n        ctx.lineCap = this.lineCap;\n      }\n      if (this.lineJoin) {\n        ctx.lineJoin = this.lineJoin;\n      }\n      var strokeShadow = this.strokeShadow;\n      if (strokeShadow && strokeShadow.enabled) {\n        ctx.shadowColor = strokeShadow.color;\n        ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n      }\n      ctx.stroke();\n    }\n  };\n  Shape.prototype.containsPoint = function (x, y) {\n    return this.isPointInPath(x, y);\n  };\n  /**\n   * Defaults for style properties. Note that properties that affect the position\n   * and shape of the node are not considered style properties, for example:\n   * `x`, `y`, `width`, `height`, `radius`, `rotation`, etc.\n   * Can be used to reset to the original styling after some custom styling\n   * has been applied (using the `restoreOwnStyles` and `restoreAllStyles` methods).\n   * These static defaults are meant to be inherited by subclasses.\n   */\n  Shape.defaultStyles = chainObjects({}, {\n    fill: 'black',\n    stroke: undefined,\n    strokeWidth: 0,\n    lineDash: undefined,\n    lineDashOffset: 0,\n    lineCap: undefined,\n    lineJoin: undefined,\n    opacity: 1,\n    fillShadow: undefined,\n    strokeShadow: undefined\n  });\n  return Shape;\n}(Node);\nexport { Shape };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Node","chainObjects","Shape","_super","_this","apply","arguments","lastInstanceId","_fillOpacity","_strokeOpacity","_fill","defaultStyles","fill","_stroke","stroke","_strokeWidth","strokeWidth","_lineDash","lineDash","_lineDashOffset","lineDashOffset","_lineCap","lineCap","_lineJoin","lineJoin","_opacity","opacity","onShadowChange","dirty","_fillShadow","fillShadow","_strokeShadow","strokeShadow","createInstance","template","shape","_setParent","undefined","id","String","restoreOwnStyles","styles","keys","getOwnPropertyNames","i","n","length","key","restoreAllStyles","property","restoreOverriddenStyles","protoStyles","getPrototypeOf","defineProperty","get","set","value","enumerable","configurable","Math","floor","align","alignment","start","oldValue","identical","min","max","removeEventListener","addEventListener","fillStroke","ctx","scene","pixelRatio","canvas","fillStyle","globalAlpha","fillOpacity","enabled","shadowColor","color","shadowOffsetX","xOffset","shadowOffsetY","yOffset","shadowBlur","blur","strokeStyle","strokeOpacity","lineWidth","setLineDash","containsPoint","x","y","isPointInPath"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scene/shape/shape.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from \"../node\";\nimport { chainObjects } from \"../../util/object\";\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.lastInstanceId = 0;\n        _this._fillOpacity = 1;\n        _this._strokeOpacity = 1;\n        _this._fill = Shape.defaultStyles.fill;\n        /**\n         * Note that `strokeStyle = null` means invisible stroke,\n         * while `lineWidth = 0` means no stroke, and sometimes this can mean different things.\n         * For example, a rect shape with an invisible stroke may not align to the pixel grid\n         * properly because the stroke affects the rules of alignment, and arc shapes forming\n         * a pie chart will have a gap between them if they have an invisible stroke, whereas\n         * there would be not gap if there was no stroke at all.\n         * The preferred way of making the stroke invisible is setting the `lineWidth` to zero,\n         * unless specific looks that is achieved by having an invisible stroke is desired.\n         */\n        _this._stroke = Shape.defaultStyles.stroke;\n        _this._strokeWidth = Shape.defaultStyles.strokeWidth;\n        _this._lineDash = Shape.defaultStyles.lineDash;\n        _this._lineDashOffset = Shape.defaultStyles.lineDashOffset;\n        _this._lineCap = Shape.defaultStyles.lineCap;\n        _this._lineJoin = Shape.defaultStyles.lineJoin;\n        _this._opacity = Shape.defaultStyles.opacity;\n        _this.onShadowChange = function () {\n            _this.dirty = true;\n        };\n        _this._fillShadow = Shape.defaultStyles.fillShadow;\n        _this._strokeShadow = Shape.defaultStyles.strokeShadow;\n        return _this;\n    }\n    /**\n     * Creates a light-weight instance of the given shape (that serves as a template).\n     * The created instance only stores the properites set on the instance itself\n     * and the rest of the properties come via the prototype chain from the template.\n     * This can greatly reduce memory usage in cases where one has many simular shapes,\n     * for example, circles of different size, position and color. The exact memory usage\n     * reduction will depend on the size of the template and the number of own properties\n     * set on its lightweight instances, but will typically be around an order of magnitude\n     * or more.\n     *\n     * Note: template shapes are not supposed to be part of the scene graph (they should not\n     * have a parent).\n     *\n     * @param template\n     */\n    Shape.createInstance = function (template) {\n        var shape = Object.create(template);\n        shape._setParent(undefined);\n        shape.id = template.id + '-Instance-' + String(++template.lastInstanceId);\n        return shape;\n    };\n    /**\n     * Restores the default styles introduced by this subclass.\n     */\n    Shape.prototype.restoreOwnStyles = function () {\n        var styles = this.constructor.defaultStyles;\n        var keys = Object.getOwnPropertyNames(styles);\n        // getOwnPropertyNames is about 2.5 times faster than\n        // for..in with the hasOwnProperty check and in this\n        // case, where most properties are inherited, can be\n        // more then an order of magnitude faster.\n        for (var i = 0, n = keys.length; i < n; i++) {\n            var key = keys[i];\n            this[key] = styles[key];\n        }\n    };\n    Shape.prototype.restoreAllStyles = function () {\n        var styles = this.constructor.defaultStyles;\n        for (var property in styles) {\n            this[property] = styles[property];\n        }\n    };\n    /**\n     * Restores the base class default styles that have been overridden by this subclass.\n     */\n    Shape.prototype.restoreOverriddenStyles = function () {\n        var styles = this.constructor.defaultStyles;\n        var protoStyles = Object.getPrototypeOf(styles);\n        for (var property in styles) {\n            if (styles.hasOwnProperty(property) && protoStyles.hasOwnProperty(property)) {\n                this[property] = styles[property];\n            }\n        }\n    };\n    Object.defineProperty(Shape.prototype, \"fillOpacity\", {\n        get: function () {\n            return this._fillOpacity;\n        },\n        set: function (value) {\n            if (this._fillOpacity !== value) {\n                this._fillOpacity = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"strokeOpacity\", {\n        get: function () {\n            return this._strokeOpacity;\n        },\n        set: function (value) {\n            if (this._strokeOpacity !== value) {\n                this._strokeOpacity = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"fill\", {\n        get: function () {\n            return this._fill;\n        },\n        set: function (value) {\n            if (this._fill !== value) {\n                this._fill = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"stroke\", {\n        get: function () {\n            return this._stroke;\n        },\n        set: function (value) {\n            if (this._stroke !== value) {\n                this._stroke = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"alignment\", {\n        // An offset value to align to the pixel grid.\n        get: function () {\n            return Math.floor(this.strokeWidth) % 2 / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Returns the aligned `start` or `length` value.\n    // For example: `start` could be `y` and `length` could be `height` of a rectangle.\n    Shape.prototype.align = function (alignment, start, length) {\n        if (length != undefined) {\n            return Math.floor(length) + Math.floor(start % 1 + length % 1);\n        }\n        return Math.floor(start) + alignment;\n    };\n    Object.defineProperty(Shape.prototype, \"lineDash\", {\n        get: function () {\n            return this._lineDash;\n        },\n        set: function (value) {\n            var oldValue = this._lineDash;\n            if (oldValue !== value) {\n                if (oldValue && value && oldValue.length === value.length) {\n                    var identical = true;\n                    var n = value.length;\n                    for (var i = 0; i < n; i++) {\n                        if (oldValue[i] !== value[i]) {\n                            identical = false;\n                            break;\n                        }\n                    }\n                    if (identical) {\n                        return;\n                    }\n                }\n                this._lineDash = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"lineDashOffset\", {\n        get: function () {\n            return this._lineDashOffset;\n        },\n        set: function (value) {\n            if (this._lineDashOffset !== value) {\n                this._lineDashOffset = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"lineCap\", {\n        get: function () {\n            return this._lineCap;\n        },\n        set: function (value) {\n            if (this._lineCap !== value) {\n                this._lineCap = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"lineJoin\", {\n        get: function () {\n            return this._lineJoin;\n        },\n        set: function (value) {\n            if (this._lineJoin !== value) {\n                this._lineJoin = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"opacity\", {\n        get: function () {\n            return this._opacity;\n        },\n        set: function (value) {\n            value = Math.min(1, Math.max(0, value));\n            if (this._opacity !== value) {\n                this._opacity = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"fillShadow\", {\n        get: function () {\n            return this._fillShadow;\n        },\n        set: function (value) {\n            var oldValue = this._fillShadow;\n            if (oldValue !== value) {\n                if (oldValue) {\n                    oldValue.removeEventListener('change', this.onShadowChange);\n                }\n                if (value) {\n                    value.addEventListener('change', this.onShadowChange);\n                }\n                this._fillShadow = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"strokeShadow\", {\n        get: function () {\n            return this._strokeShadow;\n        },\n        set: function (value) {\n            var oldValue = this._strokeShadow;\n            if (oldValue !== value) {\n                if (oldValue) {\n                    oldValue.removeEventListener('change', this.onShadowChange);\n                }\n                if (value) {\n                    value.addEventListener('change', this.onShadowChange);\n                }\n                this._strokeShadow = value;\n                this.dirty = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Shape.prototype.fillStroke = function (ctx) {\n        if (!this.scene) {\n            return;\n        }\n        var pixelRatio = this.scene.canvas.pixelRatio || 1;\n        if (this.fill) {\n            ctx.fillStyle = this.fill;\n            ctx.globalAlpha = this.opacity * this.fillOpacity;\n            // The canvas context scaling (depends on the device's pixel ratio)\n            // has no effect on shadows, so we have to account for the pixel ratio\n            // manually here.\n            var fillShadow = this.fillShadow;\n            if (fillShadow && fillShadow.enabled) {\n                ctx.shadowColor = fillShadow.color;\n                ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = fillShadow.blur * pixelRatio;\n            }\n            ctx.fill();\n        }\n        ctx.shadowColor = 'rgba(0, 0, 0, 0)';\n        if (this.stroke && this.strokeWidth) {\n            ctx.strokeStyle = this.stroke;\n            ctx.globalAlpha = this.opacity * this.strokeOpacity;\n            ctx.lineWidth = this.strokeWidth;\n            if (this.lineDash) {\n                ctx.setLineDash(this.lineDash);\n            }\n            if (this.lineDashOffset) {\n                ctx.lineDashOffset = this.lineDashOffset;\n            }\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineJoin) {\n                ctx.lineJoin = this.lineJoin;\n            }\n            var strokeShadow = this.strokeShadow;\n            if (strokeShadow && strokeShadow.enabled) {\n                ctx.shadowColor = strokeShadow.color;\n                ctx.shadowOffsetX = strokeShadow.xOffset * pixelRatio;\n                ctx.shadowOffsetY = strokeShadow.yOffset * pixelRatio;\n                ctx.shadowBlur = strokeShadow.blur * pixelRatio;\n            }\n            ctx.stroke();\n        }\n    };\n    Shape.prototype.containsPoint = function (x, y) {\n        return this.isPointInPath(x, y);\n    };\n    /**\n     * Defaults for style properties. Note that properties that affect the position\n     * and shape of the node are not considered style properties, for example:\n     * `x`, `y`, `width`, `height`, `radius`, `rotation`, etc.\n     * Can be used to reset to the original styling after some custom styling\n     * has been applied (using the `restoreOwnStyles` and `restoreAllStyles` methods).\n     * These static defaults are meant to be inherited by subclasses.\n     */\n    Shape.defaultStyles = chainObjects({}, {\n        fill: 'black',\n        stroke: undefined,\n        strokeWidth: 0,\n        lineDash: undefined,\n        lineDashOffset: 0,\n        lineCap: undefined,\n        lineJoin: undefined,\n        opacity: 1,\n        fillShadow: undefined,\n        strokeShadow: undefined\n    });\n    return Shape;\n}(Node));\nexport { Shape };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}