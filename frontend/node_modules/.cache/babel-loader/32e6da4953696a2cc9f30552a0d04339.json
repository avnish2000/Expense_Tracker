{"ast":null,"code":"/**\n * Maps a discrete domain to a continuous numeric range.\n * See https://github.com/d3/d3-scale#band-scales for more info.\n */\nvar BandScale =\n/** @class */\nfunction () {\n  function BandScale() {\n    /**\n     * Maps datum to its index in the {@link domain} array.\n     * Used to check for duplicate datums (not allowed).\n     */\n    this.index = new Map();\n    /**\n     * The output range values for datum at each index.\n     */\n\n    this.ordinalRange = [];\n    /**\n     * Contains unique datums only. Since `{}` is used in place of `Map`\n     * for IE11 compatibility, the datums are converted `toString` before\n     * the uniqueness check.\n     */\n\n    this._domain = [];\n    this._range = [0, 1];\n    this._bandwidth = 1;\n    /**\n     * The ratio of the range that is reserved for space between bands.\n     */\n\n    this._paddingInner = 0;\n    /**\n     * The ratio of the range that is reserved for space before the first\n     * and after the last band.\n     */\n\n    this._paddingOuter = 0;\n    this._round = false;\n    /**\n     * How the leftover range is distributed.\n     * `0.5` - equal distribution of space before the first and after the last band,\n     * with bands effectively centered within the range.\n     */\n\n    this._align = 0.5;\n  }\n\n  Object.defineProperty(BandScale.prototype, \"domain\", {\n    get: function () {\n      return this._domain;\n    },\n    set: function (values) {\n      var domain = this._domain;\n      domain.length = 0;\n      this.index = new Map();\n      var index = this.index; // In case one wants to have duplicate domain values, for example, two 'Italy' categories,\n      // one should use objects rather than strings for domain values like so:\n      // { toString: () => 'Italy' }\n      // { toString: () => 'Italy' }\n\n      values.forEach(function (value) {\n        if (index.get(value) === undefined) {\n          index.set(value, domain.push(value) - 1);\n        }\n      });\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"range\", {\n    get: function () {\n      return this._range;\n    },\n    set: function (values) {\n      this._range[0] = values[0];\n      this._range[1] = values[1];\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BandScale.prototype.ticks = function () {\n    return this._domain;\n  };\n\n  BandScale.prototype.convert = function (d) {\n    var i = this.index.get(d);\n\n    if (i === undefined) {\n      return NaN;\n    }\n\n    var r = this.ordinalRange[i];\n\n    if (r === undefined) {\n      return NaN;\n    }\n\n    return r;\n  };\n\n  Object.defineProperty(BandScale.prototype, \"bandwidth\", {\n    get: function () {\n      return this._bandwidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"padding\", {\n    get: function () {\n      return this._paddingInner;\n    },\n    set: function (value) {\n      value = Math.max(0, Math.min(1, value));\n      this._paddingInner = value;\n      this._paddingOuter = value;\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"paddingInner\", {\n    get: function () {\n      return this._paddingInner;\n    },\n    set: function (value) {\n      this._paddingInner = Math.max(0, Math.min(1, value)); // [0, 1]\n\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"paddingOuter\", {\n    get: function () {\n      return this._paddingOuter;\n    },\n    set: function (value) {\n      this._paddingOuter = Math.max(0, Math.min(1, value)); // [0, 1]\n\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"round\", {\n    get: function () {\n      return this._round;\n    },\n    set: function (value) {\n      this._round = value;\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BandScale.prototype, \"align\", {\n    get: function () {\n      return this._align;\n    },\n    set: function (value) {\n      this._align = Math.max(0, Math.min(1, value)); // [0, 1]\n\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BandScale.prototype.rescale = function () {\n    var _a;\n\n    var n = this._domain.length;\n\n    if (!n) {\n      return;\n    }\n\n    var _b = this._range,\n        a = _b[0],\n        b = _b[1];\n    var reversed = b < a;\n\n    if (reversed) {\n      _a = [b, a], a = _a[0], b = _a[1];\n    }\n\n    var step = (b - a) / Math.max(1, n - this._paddingInner + this._paddingOuter * 2);\n\n    if (this._round) {\n      step = Math.floor(step);\n    }\n\n    a += (b - a - step * (n - this._paddingInner)) * this._align;\n    this._bandwidth = step * (1 - this._paddingInner);\n\n    if (this._round) {\n      a = Math.round(a);\n      this._bandwidth = Math.round(this._bandwidth);\n    }\n\n    var values = [];\n\n    for (var i = 0; i < n; i++) {\n      values.push(a + step * i);\n    }\n\n    this.ordinalRange = reversed ? values.reverse() : values;\n  };\n\n  return BandScale;\n}();\n\nexport { BandScale };","map":{"version":3,"sources":["E:/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scale/bandScale.js"],"names":["BandScale","index","Map","ordinalRange","_domain","_range","_bandwidth","_paddingInner","_paddingOuter","_round","_align","Object","defineProperty","prototype","get","set","values","domain","length","forEach","value","undefined","push","rescale","enumerable","configurable","ticks","convert","d","i","NaN","r","Math","max","min","_a","n","_b","a","b","reversed","step","floor","round","reverse"],"mappings":"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","sourcesContent":["/**\n * Maps a discrete domain to a continuous numeric range.\n * See https://github.com/d3/d3-scale#band-scales for more info.\n */\nvar BandScale = /** @class */ (function () {\n    function BandScale() {\n        /**\n         * Maps datum to its index in the {@link domain} array.\n         * Used to check for duplicate datums (not allowed).\n         */\n        this.index = new Map();\n        /**\n         * The output range values for datum at each index.\n         */\n        this.ordinalRange = [];\n        /**\n         * Contains unique datums only. Since `{}` is used in place of `Map`\n         * for IE11 compatibility, the datums are converted `toString` before\n         * the uniqueness check.\n         */\n        this._domain = [];\n        this._range = [0, 1];\n        this._bandwidth = 1;\n        /**\n         * The ratio of the range that is reserved for space between bands.\n         */\n        this._paddingInner = 0;\n        /**\n         * The ratio of the range that is reserved for space before the first\n         * and after the last band.\n         */\n        this._paddingOuter = 0;\n        this._round = false;\n        /**\n         * How the leftover range is distributed.\n         * `0.5` - equal distribution of space before the first and after the last band,\n         * with bands effectively centered within the range.\n         */\n        this._align = 0.5;\n    }\n    Object.defineProperty(BandScale.prototype, \"domain\", {\n        get: function () {\n            return this._domain;\n        },\n        set: function (values) {\n            var domain = this._domain;\n            domain.length = 0;\n            this.index = new Map();\n            var index = this.index;\n            // In case one wants to have duplicate domain values, for example, two 'Italy' categories,\n            // one should use objects rather than strings for domain values like so:\n            // { toString: () => 'Italy' }\n            // { toString: () => 'Italy' }\n            values.forEach(function (value) {\n                if (index.get(value) === undefined) {\n                    index.set(value, domain.push(value) - 1);\n                }\n            });\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"range\", {\n        get: function () {\n            return this._range;\n        },\n        set: function (values) {\n            this._range[0] = values[0];\n            this._range[1] = values[1];\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BandScale.prototype.ticks = function () {\n        return this._domain;\n    };\n    BandScale.prototype.convert = function (d) {\n        var i = this.index.get(d);\n        if (i === undefined) {\n            return NaN;\n        }\n        var r = this.ordinalRange[i];\n        if (r === undefined) {\n            return NaN;\n        }\n        return r;\n    };\n    Object.defineProperty(BandScale.prototype, \"bandwidth\", {\n        get: function () {\n            return this._bandwidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"padding\", {\n        get: function () {\n            return this._paddingInner;\n        },\n        set: function (value) {\n            value = Math.max(0, Math.min(1, value));\n            this._paddingInner = value;\n            this._paddingOuter = value;\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"paddingInner\", {\n        get: function () {\n            return this._paddingInner;\n        },\n        set: function (value) {\n            this._paddingInner = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"paddingOuter\", {\n        get: function () {\n            return this._paddingOuter;\n        },\n        set: function (value) {\n            this._paddingOuter = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"round\", {\n        get: function () {\n            return this._round;\n        },\n        set: function (value) {\n            this._round = value;\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BandScale.prototype, \"align\", {\n        get: function () {\n            return this._align;\n        },\n        set: function (value) {\n            this._align = Math.max(0, Math.min(1, value)); // [0, 1]\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BandScale.prototype.rescale = function () {\n        var _a;\n        var n = this._domain.length;\n        if (!n) {\n            return;\n        }\n        var _b = this._range, a = _b[0], b = _b[1];\n        var reversed = b < a;\n        if (reversed) {\n            _a = [b, a], a = _a[0], b = _a[1];\n        }\n        var step = (b - a) / Math.max(1, n - this._paddingInner + this._paddingOuter * 2);\n        if (this._round) {\n            step = Math.floor(step);\n        }\n        a += (b - a - step * (n - this._paddingInner)) * this._align;\n        this._bandwidth = step * (1 - this._paddingInner);\n        if (this._round) {\n            a = Math.round(a);\n            this._bandwidth = Math.round(this._bandwidth);\n        }\n        var values = [];\n        for (var i = 0; i < n; i++) {\n            values.push(a + step * i);\n        }\n        this.ordinalRange = reversed ? values.reverse() : values;\n    };\n    return BandScale;\n}());\nexport { BandScale };\n"]},"metadata":{},"sourceType":"module"}