{"ast":null,"code":"/**\n * Wraps the native Canvas element and overrides its CanvasRenderingContext2D to\n * provide resolution independent rendering based on `window.devicePixelRatio`.\n */\nvar HdpiCanvas = /** @class */function () {\n  // The width/height attributes of the Canvas element default to\n  // 300/150 according to w3.org.\n  function HdpiCanvas(document, width, height) {\n    if (document === void 0) {\n      document = window.document;\n    }\n    if (width === void 0) {\n      width = 600;\n    }\n    if (height === void 0) {\n      height = 300;\n    }\n    this._container = undefined;\n    // `NaN` is deliberate here, so that overrides are always applied\n    // and the `resetTransform` inside the `resize` method works in IE11.\n    this._pixelRatio = NaN;\n    this.document = document;\n    this.element = document.createElement('canvas');\n    this.context = this.element.getContext('2d');\n    this.element.style.userSelect = 'none';\n    this.element.style.display = 'block';\n    this.setPixelRatio();\n    this.resize(width, height);\n  }\n  Object.defineProperty(HdpiCanvas.prototype, \"container\", {\n    get: function () {\n      return this._container;\n    },\n    set: function (value) {\n      if (this._container !== value) {\n        this.remove();\n        if (value) {\n          value.appendChild(this.element);\n        }\n        this._container = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HdpiCanvas.prototype.remove = function () {\n    var parentNode = this.element.parentNode;\n    if (parentNode != null) {\n      parentNode.removeChild(this.element);\n    }\n  };\n  HdpiCanvas.prototype.destroy = function () {\n    this.element.remove();\n    this._canvas = undefined;\n    Object.freeze(this);\n  };\n  HdpiCanvas.prototype.toImage = function () {\n    var img = this.document.createElement('img');\n    img.src = this.getDataURL();\n    return img;\n  };\n  HdpiCanvas.prototype.getDataURL = function (type) {\n    return this.element.toDataURL(type);\n  };\n  /**\n   * @param options.fileName The `.png` extension is going to be added automatically.\n   * @param [options.background] Defaults to `white`.\n   */\n  HdpiCanvas.prototype.download = function (fileName) {\n    fileName = ((fileName || '').trim() || 'image') + '.png';\n    // Chart images saved as JPEG are a few times larger at 50% quality than PNG images,\n    // so we don't support saving to JPEG.\n    var type = 'image/png';\n    var dataUrl = this.getDataURL(type);\n    var document = this.document;\n    if (navigator.msSaveOrOpenBlob) {\n      // IE11\n      var binary = atob(dataUrl.split(',')[1]); // strip the `data:image/png;base64,` part\n      var array = [];\n      for (var i = 0, n = binary.length; i < n; i++) {\n        array.push(binary.charCodeAt(i));\n      }\n      var blob = new Blob([new Uint8Array(array)], {\n        type: type\n      });\n      navigator.msSaveOrOpenBlob(blob, fileName);\n    } else {\n      var a = document.createElement('a');\n      a.href = dataUrl;\n      a.download = fileName;\n      a.style.display = 'none';\n      document.body.appendChild(a); // required for the `click` to work in Firefox\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n  Object.defineProperty(HdpiCanvas.prototype, \"pixelRatio\", {\n    get: function () {\n      return this._pixelRatio;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Changes the pixel ratio of the Canvas element to the given value,\n   * or uses the window.devicePixelRatio (default), then resizes the Canvas\n   * element accordingly (default).\n   */\n  HdpiCanvas.prototype.setPixelRatio = function (ratio) {\n    var pixelRatio = ratio || window.devicePixelRatio;\n    if (pixelRatio === this.pixelRatio) {\n      return;\n    }\n    HdpiCanvas.overrideScale(this.context, pixelRatio);\n    this._pixelRatio = pixelRatio;\n    this.resize(this.width, this.height);\n  };\n  Object.defineProperty(HdpiCanvas.prototype, \"pixelated\", {\n    get: function () {\n      return this.element.style.imageRendering === 'pixelated';\n    },\n    set: function (value) {\n      this.element.style.imageRendering = value ? 'pixelated' : 'auto';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HdpiCanvas.prototype.resize = function (width, height) {\n    var _a = this,\n      element = _a.element,\n      context = _a.context,\n      pixelRatio = _a.pixelRatio;\n    element.width = Math.round(width * pixelRatio);\n    element.height = Math.round(height * pixelRatio);\n    element.style.width = width + 'px';\n    element.style.height = height + 'px';\n    context.resetTransform();\n    this._width = width;\n    this._height = height;\n  };\n  Object.defineProperty(HdpiCanvas, \"textMeasuringContext\", {\n    get: function () {\n      if (this._textMeasuringContext) {\n        return this._textMeasuringContext;\n      }\n      var canvas = document.createElement('canvas');\n      return this._textMeasuringContext = canvas.getContext('2d');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas, \"svgText\", {\n    get: function () {\n      if (this._svgText) {\n        return this._svgText;\n      }\n      var xmlns = 'http://www.w3.org/2000/svg';\n      var svg = document.createElementNS(xmlns, 'svg');\n      svg.setAttribute('width', '100');\n      svg.setAttribute('height', '100');\n      // Add a descriptive class name in case someone sees this SVG element\n      // in devtools and wonders about its purpose:\n      if (svg.classList) {\n        svg.classList.add('text-measuring-svg');\n      } else {\n        svg.setAttribute('class', 'text-measuring-svg');\n      }\n      svg.style.position = 'absolute';\n      svg.style.top = '-1000px';\n      svg.style.visibility = 'hidden';\n      var svgText = document.createElementNS(xmlns, 'text');\n      svgText.setAttribute('x', '0');\n      svgText.setAttribute('y', '30');\n      svgText.setAttribute('text', 'black');\n      svg.appendChild(svgText);\n      document.body.appendChild(svg);\n      this._svgText = svgText;\n      return svgText;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas, \"has\", {\n    get: function () {\n      if (this._has) {\n        return this._has;\n      }\n      return this._has = Object.freeze({\n        textMetrics: this.textMeasuringContext.measureText('test').actualBoundingBoxDescent !== undefined\n        // Firefox implemented advanced TextMetrics object in v74:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1102584\n        // but it's buggy, so we'll keed using the SVG for text measurement in Firefox for now.\n        && !/Firefox\\/\\d+(.\\d)+/.test(window.navigator.userAgent),\n        getTransform: this.textMeasuringContext.getTransform !== undefined\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HdpiCanvas.measureText = function (text, font, textBaseline, textAlign) {\n    var ctx = this.textMeasuringContext;\n    ctx.font = font;\n    ctx.textBaseline = textBaseline;\n    ctx.textAlign = textAlign;\n    return ctx.measureText(text);\n  };\n  /**\n   * Returns the width and height of the measured text.\n   * @param text The single-line text to measure.\n   * @param font The font shorthand string.\n   */\n  HdpiCanvas.getTextSize = function (text, font) {\n    if (this.has.textMetrics) {\n      var ctx = this.textMeasuringContext;\n      ctx.font = font;\n      var metrics = ctx.measureText(text);\n      return {\n        width: metrics.width,\n        height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n      };\n    } else {\n      return this.measureSvgText(text, font);\n    }\n  };\n  HdpiCanvas.measureSvgText = function (text, font) {\n    var cache = this.textSizeCache;\n    var fontCache = cache[font];\n    // Note: consider not caching the size of numeric strings.\n    // For example: if (isNaN(+text)) { // skip\n    if (fontCache) {\n      var size_1 = fontCache[text];\n      if (size_1) {\n        return size_1;\n      }\n    } else {\n      cache[font] = {};\n    }\n    var svgText = this.svgText;\n    svgText.style.font = font;\n    svgText.textContent = text;\n    // `getBBox` returns an instance of `SVGRect` with the same `width` and `height`\n    // measurements as `DOMRect` instance returned by the `getBoundingClientRect`.\n    // But the `SVGRect` instance has half the properties of the `DOMRect`,\n    // so we use the `getBBox` method.\n    var bbox = svgText.getBBox();\n    var size = {\n      width: bbox.width,\n      height: bbox.height\n    };\n    cache[font][text] = size;\n    return size;\n  };\n  HdpiCanvas.overrideScale = function (ctx, scale) {\n    var depth = 0;\n    var overrides = {\n      save: function () {\n        this.$save();\n        depth++;\n      },\n      restore: function () {\n        if (depth > 0) {\n          this.$restore();\n          depth--;\n        }\n      },\n      setTransform: function (a, b, c, d, e, f) {\n        this.$setTransform(a * scale, b * scale, c * scale, d * scale, e * scale, f * scale);\n      },\n      resetTransform: function () {\n        // As of Jan 8, 2019, `resetTransform` is still an \"experimental technology\",\n        // and doesn't work in IE11 and Edge 44.\n        this.$setTransform(scale, 0, 0, scale, 0, 0);\n        this.save();\n        depth = 0;\n        // The scale above will be impossible to restore,\n        // because we override the `ctx.restore` above and\n        // check `depth` there.\n      }\n    };\n\n    for (var name_1 in overrides) {\n      if (overrides.hasOwnProperty(name_1)) {\n        // Save native methods under prefixed names,\n        // if this hasn't been done by the previous overrides already.\n        if (!ctx['$' + name_1]) {\n          ctx['$' + name_1] = ctx[name_1];\n        }\n        // Replace native methods with overrides,\n        // or previous overrides with the new ones.\n        ctx[name_1] = overrides[name_1];\n      }\n    }\n  };\n  HdpiCanvas.textSizeCache = {};\n  return HdpiCanvas;\n}();\nexport { HdpiCanvas };","map":{"version":3,"names":["HdpiCanvas","document","width","height","window","_container","undefined","_pixelRatio","NaN","element","createElement","context","getContext","style","userSelect","display","setPixelRatio","resize","Object","defineProperty","prototype","get","set","value","remove","appendChild","enumerable","configurable","parentNode","removeChild","destroy","_canvas","freeze","toImage","img","src","getDataURL","type","toDataURL","download","fileName","trim","dataUrl","navigator","msSaveOrOpenBlob","binary","atob","split","array","i","n","length","push","charCodeAt","blob","Blob","Uint8Array","a","href","body","click","ratio","pixelRatio","devicePixelRatio","overrideScale","imageRendering","_width","_height","_a","Math","round","resetTransform","_textMeasuringContext","canvas","_svgText","xmlns","svg","createElementNS","setAttribute","classList","add","position","top","visibility","svgText","_has","textMetrics","textMeasuringContext","measureText","actualBoundingBoxDescent","test","userAgent","getTransform","text","font","textBaseline","textAlign","ctx","getTextSize","has","metrics","actualBoundingBoxAscent","measureSvgText","cache","textSizeCache","fontCache","size_1","textContent","bbox","getBBox","size","scale","depth","overrides","save","$save","restore","$restore","setTransform","b","c","d","e","f","$setTransform","name_1","hasOwnProperty"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/canvas/hdpiCanvas.js"],"sourcesContent":["/**\n * Wraps the native Canvas element and overrides its CanvasRenderingContext2D to\n * provide resolution independent rendering based on `window.devicePixelRatio`.\n */\nvar HdpiCanvas = /** @class */ (function () {\n    // The width/height attributes of the Canvas element default to\n    // 300/150 according to w3.org.\n    function HdpiCanvas(document, width, height) {\n        if (document === void 0) { document = window.document; }\n        if (width === void 0) { width = 600; }\n        if (height === void 0) { height = 300; }\n        this._container = undefined;\n        // `NaN` is deliberate here, so that overrides are always applied\n        // and the `resetTransform` inside the `resize` method works in IE11.\n        this._pixelRatio = NaN;\n        this.document = document;\n        this.element = document.createElement('canvas');\n        this.context = this.element.getContext('2d');\n        this.element.style.userSelect = 'none';\n        this.element.style.display = 'block';\n        this.setPixelRatio();\n        this.resize(width, height);\n    }\n    Object.defineProperty(HdpiCanvas.prototype, \"container\", {\n        get: function () {\n            return this._container;\n        },\n        set: function (value) {\n            if (this._container !== value) {\n                this.remove();\n                if (value) {\n                    value.appendChild(this.element);\n                }\n                this._container = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.prototype.remove = function () {\n        var parentNode = this.element.parentNode;\n        if (parentNode != null) {\n            parentNode.removeChild(this.element);\n        }\n    };\n    HdpiCanvas.prototype.destroy = function () {\n        this.element.remove();\n        this._canvas = undefined;\n        Object.freeze(this);\n    };\n    HdpiCanvas.prototype.toImage = function () {\n        var img = this.document.createElement('img');\n        img.src = this.getDataURL();\n        return img;\n    };\n    HdpiCanvas.prototype.getDataURL = function (type) {\n        return this.element.toDataURL(type);\n    };\n    /**\n     * @param options.fileName The `.png` extension is going to be added automatically.\n     * @param [options.background] Defaults to `white`.\n     */\n    HdpiCanvas.prototype.download = function (fileName) {\n        fileName = ((fileName || '').trim() || 'image') + '.png';\n        // Chart images saved as JPEG are a few times larger at 50% quality than PNG images,\n        // so we don't support saving to JPEG.\n        var type = 'image/png';\n        var dataUrl = this.getDataURL(type);\n        var document = this.document;\n        if (navigator.msSaveOrOpenBlob) { // IE11\n            var binary = atob(dataUrl.split(',')[1]); // strip the `data:image/png;base64,` part\n            var array = [];\n            for (var i = 0, n = binary.length; i < n; i++) {\n                array.push(binary.charCodeAt(i));\n            }\n            var blob = new Blob([new Uint8Array(array)], { type: type });\n            navigator.msSaveOrOpenBlob(blob, fileName);\n        }\n        else {\n            var a = document.createElement('a');\n            a.href = dataUrl;\n            a.download = fileName;\n            a.style.display = 'none';\n            document.body.appendChild(a); // required for the `click` to work in Firefox\n            a.click();\n            document.body.removeChild(a);\n        }\n    };\n    Object.defineProperty(HdpiCanvas.prototype, \"pixelRatio\", {\n        get: function () {\n            return this._pixelRatio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Changes the pixel ratio of the Canvas element to the given value,\n     * or uses the window.devicePixelRatio (default), then resizes the Canvas\n     * element accordingly (default).\n     */\n    HdpiCanvas.prototype.setPixelRatio = function (ratio) {\n        var pixelRatio = ratio || window.devicePixelRatio;\n        if (pixelRatio === this.pixelRatio) {\n            return;\n        }\n        HdpiCanvas.overrideScale(this.context, pixelRatio);\n        this._pixelRatio = pixelRatio;\n        this.resize(this.width, this.height);\n    };\n    Object.defineProperty(HdpiCanvas.prototype, \"pixelated\", {\n        get: function () {\n            return this.element.style.imageRendering === 'pixelated';\n        },\n        set: function (value) {\n            this.element.style.imageRendering = value ? 'pixelated' : 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.prototype.resize = function (width, height) {\n        var _a = this, element = _a.element, context = _a.context, pixelRatio = _a.pixelRatio;\n        element.width = Math.round(width * pixelRatio);\n        element.height = Math.round(height * pixelRatio);\n        element.style.width = width + 'px';\n        element.style.height = height + 'px';\n        context.resetTransform();\n        this._width = width;\n        this._height = height;\n    };\n    Object.defineProperty(HdpiCanvas, \"textMeasuringContext\", {\n        get: function () {\n            if (this._textMeasuringContext) {\n                return this._textMeasuringContext;\n            }\n            var canvas = document.createElement('canvas');\n            return this._textMeasuringContext = canvas.getContext('2d');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas, \"svgText\", {\n        get: function () {\n            if (this._svgText) {\n                return this._svgText;\n            }\n            var xmlns = 'http://www.w3.org/2000/svg';\n            var svg = document.createElementNS(xmlns, 'svg');\n            svg.setAttribute('width', '100');\n            svg.setAttribute('height', '100');\n            // Add a descriptive class name in case someone sees this SVG element\n            // in devtools and wonders about its purpose:\n            if (svg.classList) {\n                svg.classList.add('text-measuring-svg');\n            }\n            else {\n                svg.setAttribute('class', 'text-measuring-svg');\n            }\n            svg.style.position = 'absolute';\n            svg.style.top = '-1000px';\n            svg.style.visibility = 'hidden';\n            var svgText = document.createElementNS(xmlns, 'text');\n            svgText.setAttribute('x', '0');\n            svgText.setAttribute('y', '30');\n            svgText.setAttribute('text', 'black');\n            svg.appendChild(svgText);\n            document.body.appendChild(svg);\n            this._svgText = svgText;\n            return svgText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas, \"has\", {\n        get: function () {\n            if (this._has) {\n                return this._has;\n            }\n            return this._has = Object.freeze({\n                textMetrics: this.textMeasuringContext.measureText('test').actualBoundingBoxDescent !== undefined\n                    // Firefox implemented advanced TextMetrics object in v74:\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=1102584\n                    // but it's buggy, so we'll keed using the SVG for text measurement in Firefox for now.\n                    && !/Firefox\\/\\d+(.\\d)+/.test(window.navigator.userAgent),\n                getTransform: this.textMeasuringContext.getTransform !== undefined\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.measureText = function (text, font, textBaseline, textAlign) {\n        var ctx = this.textMeasuringContext;\n        ctx.font = font;\n        ctx.textBaseline = textBaseline;\n        ctx.textAlign = textAlign;\n        return ctx.measureText(text);\n    };\n    /**\n     * Returns the width and height of the measured text.\n     * @param text The single-line text to measure.\n     * @param font The font shorthand string.\n     */\n    HdpiCanvas.getTextSize = function (text, font) {\n        if (this.has.textMetrics) {\n            var ctx = this.textMeasuringContext;\n            ctx.font = font;\n            var metrics = ctx.measureText(text);\n            return {\n                width: metrics.width,\n                height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n            };\n        }\n        else {\n            return this.measureSvgText(text, font);\n        }\n    };\n    HdpiCanvas.measureSvgText = function (text, font) {\n        var cache = this.textSizeCache;\n        var fontCache = cache[font];\n        // Note: consider not caching the size of numeric strings.\n        // For example: if (isNaN(+text)) { // skip\n        if (fontCache) {\n            var size_1 = fontCache[text];\n            if (size_1) {\n                return size_1;\n            }\n        }\n        else {\n            cache[font] = {};\n        }\n        var svgText = this.svgText;\n        svgText.style.font = font;\n        svgText.textContent = text;\n        // `getBBox` returns an instance of `SVGRect` with the same `width` and `height`\n        // measurements as `DOMRect` instance returned by the `getBoundingClientRect`.\n        // But the `SVGRect` instance has half the properties of the `DOMRect`,\n        // so we use the `getBBox` method.\n        var bbox = svgText.getBBox();\n        var size = {\n            width: bbox.width,\n            height: bbox.height\n        };\n        cache[font][text] = size;\n        return size;\n    };\n    HdpiCanvas.overrideScale = function (ctx, scale) {\n        var depth = 0;\n        var overrides = {\n            save: function () {\n                this.$save();\n                depth++;\n            },\n            restore: function () {\n                if (depth > 0) {\n                    this.$restore();\n                    depth--;\n                }\n            },\n            setTransform: function (a, b, c, d, e, f) {\n                this.$setTransform(a * scale, b * scale, c * scale, d * scale, e * scale, f * scale);\n            },\n            resetTransform: function () {\n                // As of Jan 8, 2019, `resetTransform` is still an \"experimental technology\",\n                // and doesn't work in IE11 and Edge 44.\n                this.$setTransform(scale, 0, 0, scale, 0, 0);\n                this.save();\n                depth = 0;\n                // The scale above will be impossible to restore,\n                // because we override the `ctx.restore` above and\n                // check `depth` there.\n            }\n        };\n        for (var name_1 in overrides) {\n            if (overrides.hasOwnProperty(name_1)) {\n                // Save native methods under prefixed names,\n                // if this hasn't been done by the previous overrides already.\n                if (!ctx['$' + name_1]) {\n                    ctx['$' + name_1] = ctx[name_1];\n                }\n                // Replace native methods with overrides,\n                // or previous overrides with the new ones.\n                ctx[name_1] = overrides[name_1];\n            }\n        }\n    };\n    HdpiCanvas.textSizeCache = {};\n    return HdpiCanvas;\n}());\nexport { HdpiCanvas };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAG,aAAe,YAAY;EACxC;EACA;EACA,SAASA,UAAU,CAACC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAE;IACzC,IAAIF,QAAQ,KAAK,KAAK,CAAC,EAAE;MAAEA,QAAQ,GAAGG,MAAM,CAACH,QAAQ;IAAE;IACvD,IAAIC,KAAK,KAAK,KAAK,CAAC,EAAE;MAAEA,KAAK,GAAG,GAAG;IAAE;IACrC,IAAIC,MAAM,KAAK,KAAK,CAAC,EAAE;MAAEA,MAAM,GAAG,GAAG;IAAE;IACvC,IAAI,CAACE,UAAU,GAAGC,SAAS;IAC3B;IACA;IACA,IAAI,CAACC,WAAW,GAAGC,GAAG;IACtB,IAAI,CAACP,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACQ,OAAO,GAAGR,QAAQ,CAACS,aAAa,CAAC,QAAQ,CAAC;IAC/C,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACH,OAAO,CAACI,KAAK,CAACC,UAAU,GAAG,MAAM;IACtC,IAAI,CAACL,OAAO,CAACI,KAAK,CAACE,OAAO,GAAG,OAAO;IACpC,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,MAAM,CAACf,KAAK,EAAEC,MAAM,CAAC;EAC9B;EACAe,MAAM,CAACC,cAAc,CAACnB,UAAU,CAACoB,SAAS,EAAE,WAAW,EAAE;IACrDC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAAChB,UAAU;IAC1B,CAAC;IACDiB,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,IAAI,CAAClB,UAAU,KAAKkB,KAAK,EAAE;QAC3B,IAAI,CAACC,MAAM,EAAE;QACb,IAAID,KAAK,EAAE;UACPA,KAAK,CAACE,WAAW,CAAC,IAAI,CAAChB,OAAO,CAAC;QACnC;QACA,IAAI,CAACJ,UAAU,GAAGkB,KAAK;MAC3B;IACJ,CAAC;IACDG,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3B,UAAU,CAACoB,SAAS,CAACI,MAAM,GAAG,YAAY;IACtC,IAAII,UAAU,GAAG,IAAI,CAACnB,OAAO,CAACmB,UAAU;IACxC,IAAIA,UAAU,IAAI,IAAI,EAAE;MACpBA,UAAU,CAACC,WAAW,CAAC,IAAI,CAACpB,OAAO,CAAC;IACxC;EACJ,CAAC;EACDT,UAAU,CAACoB,SAAS,CAACU,OAAO,GAAG,YAAY;IACvC,IAAI,CAACrB,OAAO,CAACe,MAAM,EAAE;IACrB,IAAI,CAACO,OAAO,GAAGzB,SAAS;IACxBY,MAAM,CAACc,MAAM,CAAC,IAAI,CAAC;EACvB,CAAC;EACDhC,UAAU,CAACoB,SAAS,CAACa,OAAO,GAAG,YAAY;IACvC,IAAIC,GAAG,GAAG,IAAI,CAACjC,QAAQ,CAACS,aAAa,CAAC,KAAK,CAAC;IAC5CwB,GAAG,CAACC,GAAG,GAAG,IAAI,CAACC,UAAU,EAAE;IAC3B,OAAOF,GAAG;EACd,CAAC;EACDlC,UAAU,CAACoB,SAAS,CAACgB,UAAU,GAAG,UAAUC,IAAI,EAAE;IAC9C,OAAO,IAAI,CAAC5B,OAAO,CAAC6B,SAAS,CAACD,IAAI,CAAC;EACvC,CAAC;EACD;AACJ;AACA;AACA;EACIrC,UAAU,CAACoB,SAAS,CAACmB,QAAQ,GAAG,UAAUC,QAAQ,EAAE;IAChDA,QAAQ,GAAG,CAAC,CAACA,QAAQ,IAAI,EAAE,EAAEC,IAAI,EAAE,IAAI,OAAO,IAAI,MAAM;IACxD;IACA;IACA,IAAIJ,IAAI,GAAG,WAAW;IACtB,IAAIK,OAAO,GAAG,IAAI,CAACN,UAAU,CAACC,IAAI,CAAC;IACnC,IAAIpC,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC5B,IAAI0C,SAAS,CAACC,gBAAgB,EAAE;MAAE;MAC9B,IAAIC,MAAM,GAAGC,IAAI,CAACJ,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1C,IAAIC,KAAK,GAAG,EAAE;MACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,MAAM,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;QAC3CD,KAAK,CAACI,IAAI,CAACP,MAAM,CAACQ,UAAU,CAACJ,CAAC,CAAC,CAAC;MACpC;MACA,IAAIK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAIC,UAAU,CAACR,KAAK,CAAC,CAAC,EAAE;QAAEX,IAAI,EAAEA;MAAK,CAAC,CAAC;MAC5DM,SAAS,CAACC,gBAAgB,CAACU,IAAI,EAAEd,QAAQ,CAAC;IAC9C,CAAC,MACI;MACD,IAAIiB,CAAC,GAAGxD,QAAQ,CAACS,aAAa,CAAC,GAAG,CAAC;MACnC+C,CAAC,CAACC,IAAI,GAAGhB,OAAO;MAChBe,CAAC,CAAClB,QAAQ,GAAGC,QAAQ;MACrBiB,CAAC,CAAC5C,KAAK,CAACE,OAAO,GAAG,MAAM;MACxBd,QAAQ,CAAC0D,IAAI,CAAClC,WAAW,CAACgC,CAAC,CAAC,CAAC,CAAC;MAC9BA,CAAC,CAACG,KAAK,EAAE;MACT3D,QAAQ,CAAC0D,IAAI,CAAC9B,WAAW,CAAC4B,CAAC,CAAC;IAChC;EACJ,CAAC;EACDvC,MAAM,CAACC,cAAc,CAACnB,UAAU,CAACoB,SAAS,EAAE,YAAY,EAAE;IACtDC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACd,WAAW;IAC3B,CAAC;IACDmB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;EACI3B,UAAU,CAACoB,SAAS,CAACJ,aAAa,GAAG,UAAU6C,KAAK,EAAE;IAClD,IAAIC,UAAU,GAAGD,KAAK,IAAIzD,MAAM,CAAC2D,gBAAgB;IACjD,IAAID,UAAU,KAAK,IAAI,CAACA,UAAU,EAAE;MAChC;IACJ;IACA9D,UAAU,CAACgE,aAAa,CAAC,IAAI,CAACrD,OAAO,EAAEmD,UAAU,CAAC;IAClD,IAAI,CAACvD,WAAW,GAAGuD,UAAU;IAC7B,IAAI,CAAC7C,MAAM,CAAC,IAAI,CAACf,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;EACxC,CAAC;EACDe,MAAM,CAACC,cAAc,CAACnB,UAAU,CAACoB,SAAS,EAAE,WAAW,EAAE;IACrDC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAACZ,OAAO,CAACI,KAAK,CAACoD,cAAc,KAAK,WAAW;IAC5D,CAAC;IACD3C,GAAG,EAAE,UAAUC,KAAK,EAAE;MAClB,IAAI,CAACd,OAAO,CAACI,KAAK,CAACoD,cAAc,GAAG1C,KAAK,GAAG,WAAW,GAAG,MAAM;IACpE,CAAC;IACDG,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACnB,UAAU,CAACoB,SAAS,EAAE,OAAO,EAAE;IACjDC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAAC6C,MAAM;IACtB,CAAC;IACDxC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACnB,UAAU,CAACoB,SAAS,EAAE,QAAQ,EAAE;IAClDC,GAAG,EAAE,YAAY;MACb,OAAO,IAAI,CAAC8C,OAAO;IACvB,CAAC;IACDzC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3B,UAAU,CAACoB,SAAS,CAACH,MAAM,GAAG,UAAUf,KAAK,EAAEC,MAAM,EAAE;IACnD,IAAIiE,EAAE,GAAG,IAAI;MAAE3D,OAAO,GAAG2D,EAAE,CAAC3D,OAAO;MAAEE,OAAO,GAAGyD,EAAE,CAACzD,OAAO;MAAEmD,UAAU,GAAGM,EAAE,CAACN,UAAU;IACrFrD,OAAO,CAACP,KAAK,GAAGmE,IAAI,CAACC,KAAK,CAACpE,KAAK,GAAG4D,UAAU,CAAC;IAC9CrD,OAAO,CAACN,MAAM,GAAGkE,IAAI,CAACC,KAAK,CAACnE,MAAM,GAAG2D,UAAU,CAAC;IAChDrD,OAAO,CAACI,KAAK,CAACX,KAAK,GAAGA,KAAK,GAAG,IAAI;IAClCO,OAAO,CAACI,KAAK,CAACV,MAAM,GAAGA,MAAM,GAAG,IAAI;IACpCQ,OAAO,CAAC4D,cAAc,EAAE;IACxB,IAAI,CAACL,MAAM,GAAGhE,KAAK;IACnB,IAAI,CAACiE,OAAO,GAAGhE,MAAM;EACzB,CAAC;EACDe,MAAM,CAACC,cAAc,CAACnB,UAAU,EAAE,sBAAsB,EAAE;IACtDqB,GAAG,EAAE,YAAY;MACb,IAAI,IAAI,CAACmD,qBAAqB,EAAE;QAC5B,OAAO,IAAI,CAACA,qBAAqB;MACrC;MACA,IAAIC,MAAM,GAAGxE,QAAQ,CAACS,aAAa,CAAC,QAAQ,CAAC;MAC7C,OAAO,IAAI,CAAC8D,qBAAqB,GAAGC,MAAM,CAAC7D,UAAU,CAAC,IAAI,CAAC;IAC/D,CAAC;IACDc,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACnB,UAAU,EAAE,SAAS,EAAE;IACzCqB,GAAG,EAAE,YAAY;MACb,IAAI,IAAI,CAACqD,QAAQ,EAAE;QACf,OAAO,IAAI,CAACA,QAAQ;MACxB;MACA,IAAIC,KAAK,GAAG,4BAA4B;MACxC,IAAIC,GAAG,GAAG3E,QAAQ,CAAC4E,eAAe,CAACF,KAAK,EAAE,KAAK,CAAC;MAChDC,GAAG,CAACE,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;MAChCF,GAAG,CAACE,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC;MACjC;MACA;MACA,IAAIF,GAAG,CAACG,SAAS,EAAE;QACfH,GAAG,CAACG,SAAS,CAACC,GAAG,CAAC,oBAAoB,CAAC;MAC3C,CAAC,MACI;QACDJ,GAAG,CAACE,YAAY,CAAC,OAAO,EAAE,oBAAoB,CAAC;MACnD;MACAF,GAAG,CAAC/D,KAAK,CAACoE,QAAQ,GAAG,UAAU;MAC/BL,GAAG,CAAC/D,KAAK,CAACqE,GAAG,GAAG,SAAS;MACzBN,GAAG,CAAC/D,KAAK,CAACsE,UAAU,GAAG,QAAQ;MAC/B,IAAIC,OAAO,GAAGnF,QAAQ,CAAC4E,eAAe,CAACF,KAAK,EAAE,MAAM,CAAC;MACrDS,OAAO,CAACN,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC;MAC9BM,OAAO,CAACN,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC;MAC/BM,OAAO,CAACN,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;MACrCF,GAAG,CAACnD,WAAW,CAAC2D,OAAO,CAAC;MACxBnF,QAAQ,CAAC0D,IAAI,CAAClC,WAAW,CAACmD,GAAG,CAAC;MAC9B,IAAI,CAACF,QAAQ,GAAGU,OAAO;MACvB,OAAOA,OAAO;IAClB,CAAC;IACD1D,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACnB,UAAU,EAAE,KAAK,EAAE;IACrCqB,GAAG,EAAE,YAAY;MACb,IAAI,IAAI,CAACgE,IAAI,EAAE;QACX,OAAO,IAAI,CAACA,IAAI;MACpB;MACA,OAAO,IAAI,CAACA,IAAI,GAAGnE,MAAM,CAACc,MAAM,CAAC;QAC7BsD,WAAW,EAAE,IAAI,CAACC,oBAAoB,CAACC,WAAW,CAAC,MAAM,CAAC,CAACC,wBAAwB,KAAKnF;QACpF;QACA;QACA;QAAA,GACG,CAAC,oBAAoB,CAACoF,IAAI,CAACtF,MAAM,CAACuC,SAAS,CAACgD,SAAS,CAAC;QAC7DC,YAAY,EAAE,IAAI,CAACL,oBAAoB,CAACK,YAAY,KAAKtF;MAC7D,CAAC,CAAC;IACN,CAAC;IACDoB,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF3B,UAAU,CAACwF,WAAW,GAAG,UAAUK,IAAI,EAAEC,IAAI,EAAEC,YAAY,EAAEC,SAAS,EAAE;IACpE,IAAIC,GAAG,GAAG,IAAI,CAACV,oBAAoB;IACnCU,GAAG,CAACH,IAAI,GAAGA,IAAI;IACfG,GAAG,CAACF,YAAY,GAAGA,YAAY;IAC/BE,GAAG,CAACD,SAAS,GAAGA,SAAS;IACzB,OAAOC,GAAG,CAACT,WAAW,CAACK,IAAI,CAAC;EAChC,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI7F,UAAU,CAACkG,WAAW,GAAG,UAAUL,IAAI,EAAEC,IAAI,EAAE;IAC3C,IAAI,IAAI,CAACK,GAAG,CAACb,WAAW,EAAE;MACtB,IAAIW,GAAG,GAAG,IAAI,CAACV,oBAAoB;MACnCU,GAAG,CAACH,IAAI,GAAGA,IAAI;MACf,IAAIM,OAAO,GAAGH,GAAG,CAACT,WAAW,CAACK,IAAI,CAAC;MACnC,OAAO;QACH3F,KAAK,EAAEkG,OAAO,CAAClG,KAAK;QACpBC,MAAM,EAAEiG,OAAO,CAACC,uBAAuB,GAAGD,OAAO,CAACX;MACtD,CAAC;IACL,CAAC,MACI;MACD,OAAO,IAAI,CAACa,cAAc,CAACT,IAAI,EAAEC,IAAI,CAAC;IAC1C;EACJ,CAAC;EACD9F,UAAU,CAACsG,cAAc,GAAG,UAAUT,IAAI,EAAEC,IAAI,EAAE;IAC9C,IAAIS,KAAK,GAAG,IAAI,CAACC,aAAa;IAC9B,IAAIC,SAAS,GAAGF,KAAK,CAACT,IAAI,CAAC;IAC3B;IACA;IACA,IAAIW,SAAS,EAAE;MACX,IAAIC,MAAM,GAAGD,SAAS,CAACZ,IAAI,CAAC;MAC5B,IAAIa,MAAM,EAAE;QACR,OAAOA,MAAM;MACjB;IACJ,CAAC,MACI;MACDH,KAAK,CAACT,IAAI,CAAC,GAAG,CAAC,CAAC;IACpB;IACA,IAAIV,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1BA,OAAO,CAACvE,KAAK,CAACiF,IAAI,GAAGA,IAAI;IACzBV,OAAO,CAACuB,WAAW,GAAGd,IAAI;IAC1B;IACA;IACA;IACA;IACA,IAAIe,IAAI,GAAGxB,OAAO,CAACyB,OAAO,EAAE;IAC5B,IAAIC,IAAI,GAAG;MACP5G,KAAK,EAAE0G,IAAI,CAAC1G,KAAK;MACjBC,MAAM,EAAEyG,IAAI,CAACzG;IACjB,CAAC;IACDoG,KAAK,CAACT,IAAI,CAAC,CAACD,IAAI,CAAC,GAAGiB,IAAI;IACxB,OAAOA,IAAI;EACf,CAAC;EACD9G,UAAU,CAACgE,aAAa,GAAG,UAAUiC,GAAG,EAAEc,KAAK,EAAE;IAC7C,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,SAAS,GAAG;MACZC,IAAI,EAAE,YAAY;QACd,IAAI,CAACC,KAAK,EAAE;QACZH,KAAK,EAAE;MACX,CAAC;MACDI,OAAO,EAAE,YAAY;QACjB,IAAIJ,KAAK,GAAG,CAAC,EAAE;UACX,IAAI,CAACK,QAAQ,EAAE;UACfL,KAAK,EAAE;QACX;MACJ,CAAC;MACDM,YAAY,EAAE,UAAU7D,CAAC,EAAE8D,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;QACtC,IAAI,CAACC,aAAa,CAACnE,CAAC,GAAGsD,KAAK,EAAEQ,CAAC,GAAGR,KAAK,EAAES,CAAC,GAAGT,KAAK,EAAEU,CAAC,GAAGV,KAAK,EAAEW,CAAC,GAAGX,KAAK,EAAEY,CAAC,GAAGZ,KAAK,CAAC;MACxF,CAAC;MACDxC,cAAc,EAAE,YAAY;QACxB;QACA;QACA,IAAI,CAACqD,aAAa,CAACb,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAACG,IAAI,EAAE;QACXF,KAAK,GAAG,CAAC;QACT;QACA;QACA;MACJ;IACJ,CAAC;;IACD,KAAK,IAAIa,MAAM,IAAIZ,SAAS,EAAE;MAC1B,IAAIA,SAAS,CAACa,cAAc,CAACD,MAAM,CAAC,EAAE;QAClC;QACA;QACA,IAAI,CAAC5B,GAAG,CAAC,GAAG,GAAG4B,MAAM,CAAC,EAAE;UACpB5B,GAAG,CAAC,GAAG,GAAG4B,MAAM,CAAC,GAAG5B,GAAG,CAAC4B,MAAM,CAAC;QACnC;QACA;QACA;QACA5B,GAAG,CAAC4B,MAAM,CAAC,GAAGZ,SAAS,CAACY,MAAM,CAAC;MACnC;IACJ;EACJ,CAAC;EACD7H,UAAU,CAACwG,aAAa,GAAG,CAAC,CAAC;EAC7B,OAAOxG,UAAU;AACrB,CAAC,EAAG;AACJ,SAASA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}