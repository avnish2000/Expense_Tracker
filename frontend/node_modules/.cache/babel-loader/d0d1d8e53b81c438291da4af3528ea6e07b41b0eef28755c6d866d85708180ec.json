{"ast":null,"code":"import { BBox } from \"./bbox\";\n/**\n * As of Jan 8, 2019, Firefox still doesn't implement\n * `getTransform(): DOMMatrix;`\n * `setTransform(transform?: DOMMatrix2DInit)`\n * in the `CanvasRenderingContext2D`.\n * Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=928150\n * IE11 and Edge 44 also don't have the support.\n * Thus this class, to keep track of the current transform and\n * combine transformations.\n * Standards:\n * https://html.spec.whatwg.org/dev/canvas.html\n * https://www.w3.org/TR/geometry-1/\n */\nvar Matrix = /** @class */function () {\n  function Matrix(elements) {\n    if (elements === void 0) {\n      elements = [1, 0, 0, 1, 0, 0];\n    }\n    this.elements = elements;\n  }\n  Matrix.prototype.setElements = function (elements) {\n    var e = this.elements;\n    // `this.elements = elements.slice()` is 4-5 times slower\n    // (in Chrome 71 and FF 64) than manually copying elements,\n    // since slicing allocates new memory.\n    // The performance of passing parameters individually\n    // vs as an array is about the same in both browsers, so we\n    // go with a single (array of elements) parameter, because\n    // `setElements(elements)` and `setElements([a, b, c, d, e, f])`\n    // calls give us roughly the same performance, versus\n    // `setElements(...elements)` and `setElements(a, b, c, d, e, f)`,\n    // where the spread operator causes a 20-30x performance drop\n    // (30x when compiled to ES5's `.apply(this, elements)`\n    //  20x when used natively).\n    e[0] = elements[0];\n    e[1] = elements[1];\n    e[2] = elements[2];\n    e[3] = elements[3];\n    e[4] = elements[4];\n    e[5] = elements[5];\n    return this;\n  };\n  Matrix.prototype.setIdentityElements = function () {\n    var e = this.elements;\n    e[0] = 1;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 1;\n    e[4] = 0;\n    e[5] = 0;\n    return this;\n  };\n  Object.defineProperty(Matrix.prototype, \"identity\", {\n    get: function () {\n      var e = this.elements;\n      return e[0] === 1 && e[1] === 0 && e[2] === 0 && e[3] === 1 && e[4] === 0 && e[5] === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"a\", {\n    get: function () {\n      return this.elements[0];\n    },\n    set: function (value) {\n      this.elements[0] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"b\", {\n    get: function () {\n      return this.elements[1];\n    },\n    set: function (value) {\n      this.elements[1] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"c\", {\n    get: function () {\n      return this.elements[2];\n    },\n    set: function (value) {\n      this.elements[2] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"d\", {\n    get: function () {\n      return this.elements[3];\n    },\n    set: function (value) {\n      this.elements[3] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"e\", {\n    get: function () {\n      return this.elements[4];\n    },\n    set: function (value) {\n      this.elements[4] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"f\", {\n    get: function () {\n      return this.elements[5];\n    },\n    set: function (value) {\n      this.elements[5] = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Performs the AxB matrix multiplication and saves the result\n   * to `C`, if given, or to `A` otherwise.\n   */\n  Matrix.prototype.AxB = function (A, B, C) {\n    var m11 = A[0],\n      m12 = A[1],\n      m21 = A[2],\n      m22 = A[3],\n      m31 = A[4],\n      m32 = A[5];\n    var o11 = B[0],\n      o12 = B[1],\n      o21 = B[2],\n      o22 = B[3],\n      o31 = B[4],\n      o32 = B[5];\n    C = C || A;\n    C[0] = m11 * o11 + m21 * o12;\n    C[1] = m12 * o11 + m22 * o12;\n    C[2] = m11 * o21 + m21 * o22;\n    C[3] = m12 * o21 + m22 * o22;\n    C[4] = m11 * o31 + m21 * o32 + m31;\n    C[5] = m12 * o31 + m22 * o32 + m32;\n  };\n  /**\n   * The `other` matrix gets post-multiplied to the current matrix.\n   * Returns the current matrix.\n   * @param other\n   */\n  Matrix.prototype.multiplySelf = function (other) {\n    this.AxB(this.elements, other.elements);\n    return this;\n  };\n  /**\n   * The `other` matrix gets post-multiplied to the current matrix.\n   * Returns a new matrix.\n   * @param other\n   */\n  Matrix.prototype.multiply = function (other) {\n    var elements = new Array(6);\n    this.AxB(this.elements, other.elements, elements);\n    return new Matrix(elements);\n  };\n  Matrix.prototype.preMultiplySelf = function (other) {\n    this.AxB(other.elements, this.elements, this.elements);\n    return this;\n  };\n  /**\n   * Returns the inverse of this matrix as a new matrix.\n   */\n  Matrix.prototype.inverse = function () {\n    var _a = this.elements,\n      a = _a[0],\n      b = _a[1],\n      c = _a[2],\n      d = _a[3],\n      e = _a[4],\n      f = _a[5];\n    var rD = 1 / (a * d - b * c); // reciprocal of determinant\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    return new Matrix([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n  };\n  /**\n   * Save the inverse of this matrix to the given matrix.\n   */\n  Matrix.prototype.inverseTo = function (other) {\n    var _a = this.elements,\n      a = _a[0],\n      b = _a[1],\n      c = _a[2],\n      d = _a[3],\n      e = _a[4],\n      f = _a[5];\n    var rD = 1 / (a * d - b * c); // reciprocal of determinant\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    other.setElements([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n    return this;\n  };\n  Matrix.prototype.invertSelf = function () {\n    var elements = this.elements;\n    var a = elements[0],\n      b = elements[1],\n      c = elements[2],\n      d = elements[3],\n      e = elements[4],\n      f = elements[5];\n    var rD = 1 / (a * d - b * c); // reciprocal of determinant\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    elements[0] = d;\n    elements[1] = -b;\n    elements[2] = -c;\n    elements[3] = a;\n    elements[4] = c * f - d * e;\n    elements[5] = b * e - a * f;\n    return this;\n  };\n  Matrix.prototype.clone = function () {\n    return new Matrix(this.elements.slice());\n  };\n  Matrix.prototype.transformPoint = function (x, y) {\n    var e = this.elements;\n    return {\n      x: x * e[0] + y * e[2] + e[4],\n      y: x * e[1] + y * e[3] + e[5]\n    };\n  };\n  Matrix.prototype.transformBBox = function (bbox, radius, target) {\n    if (radius === void 0) {\n      radius = 0;\n    }\n    var elements = this.elements;\n    var xx = elements[0];\n    var xy = elements[1];\n    var yx = elements[2];\n    var yy = elements[3];\n    var h_w = bbox.width * 0.5;\n    var h_h = bbox.height * 0.5;\n    var cx = bbox.x + h_w;\n    var cy = bbox.y + h_h;\n    var w, h;\n    if (radius) {\n      h_w -= radius;\n      h_h -= radius;\n      var sx = Math.sqrt(xx * xx + yx * yx);\n      var sy = Math.sqrt(xy * xy + yy * yy);\n      w = Math.abs(h_w * xx) + Math.abs(h_h * yx) + Math.abs(sx * radius);\n      h = Math.abs(h_w * xy) + Math.abs(h_h * yy) + Math.abs(sy * radius);\n    } else {\n      w = Math.abs(h_w * xx) + Math.abs(h_h * yx);\n      h = Math.abs(h_w * xy) + Math.abs(h_h * yy);\n    }\n    if (!target) {\n      target = new BBox(0, 0, 0, 0);\n    }\n    target.x = cx * xx + cy * yx + elements[4] - w;\n    target.y = cx * xy + cy * yy + elements[5] - h;\n    target.width = w + w;\n    target.height = h + h;\n    return target;\n  };\n  Matrix.prototype.toContext = function (ctx) {\n    // It's fair to say that matrix multiplications are not cheap.\n    // However, updating path definitions on every frame isn't either, so\n    // it may be cheaper to just translate paths. It's also fair to\n    // say, that most paths will have to be re-rendered anyway, say\n    // rectangle paths in a bar chart, where an animation would happen when\n    // the data set changes and existing bars are morphed into new ones.\n    // Or a pie chart, where old sectors are also morphed into new ones.\n    // Same for the line chart. The only plausible case where translating\n    // existing paths would be enough, is the scatter chart, where marker\n    // icons, typically circles, stay the same size. But if circle radii\n    // are bound to some data points, even circle paths would have to be\n    // updated. And thus it makes sense to optimize for fewer matrix\n    // transforms, where transform matrices of paths are mostly identity\n    // matrices and `x`/`y`, `centerX`/`centerY` and similar properties\n    // are used to define a path at specific coordinates. And only groups\n    // are used to collectively apply a transform to a set of nodes.\n    // If the matrix is mostly identity (95% of the time),\n    // the `if (this.isIdentity)` check can make this call 3-4 times\n    // faster on average: https://jsperf.com/matrix-check-first-vs-always-set\n    if (this.identity) {\n      return;\n    }\n    var e = this.elements;\n    ctx.transform(e[0], e[1], e[2], e[3], e[4], e[5]);\n  };\n  Matrix.flyweight = function (elements) {\n    if (elements) {\n      if (elements instanceof Matrix) {\n        Matrix.matrix.setElements(elements.elements);\n      } else {\n        Matrix.matrix.setElements(elements);\n      }\n    } else {\n      Matrix.matrix.setIdentityElements();\n    }\n    return Matrix.matrix;\n  };\n  Matrix.matrix = new Matrix();\n  return Matrix;\n}();\nexport { Matrix };","map":{"version":3,"names":["BBox","Matrix","elements","prototype","setElements","e","setIdentityElements","Object","defineProperty","get","enumerable","configurable","set","value","AxB","A","B","C","m11","m12","m21","m22","m31","m32","o11","o12","o21","o22","o31","o32","multiplySelf","other","multiply","Array","preMultiplySelf","inverse","_a","a","b","c","d","f","rD","inverseTo","invertSelf","clone","slice","transformPoint","x","y","transformBBox","bbox","radius","target","xx","xy","yx","yy","h_w","width","h_h","height","cx","cy","w","h","sx","Math","sqrt","sy","abs","toContext","ctx","identity","transform","flyweight","matrix"],"sources":["C:/Users/avnis/Documents/Expense-Tracker/frontend/node_modules/ag-charts-community/dist/es6/scene/matrix.js"],"sourcesContent":["import { BBox } from \"./bbox\";\n/**\n * As of Jan 8, 2019, Firefox still doesn't implement\n * `getTransform(): DOMMatrix;`\n * `setTransform(transform?: DOMMatrix2DInit)`\n * in the `CanvasRenderingContext2D`.\n * Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=928150\n * IE11 and Edge 44 also don't have the support.\n * Thus this class, to keep track of the current transform and\n * combine transformations.\n * Standards:\n * https://html.spec.whatwg.org/dev/canvas.html\n * https://www.w3.org/TR/geometry-1/\n */\nvar Matrix = /** @class */ (function () {\n    function Matrix(elements) {\n        if (elements === void 0) { elements = [1, 0, 0, 1, 0, 0]; }\n        this.elements = elements;\n    }\n    Matrix.prototype.setElements = function (elements) {\n        var e = this.elements;\n        // `this.elements = elements.slice()` is 4-5 times slower\n        // (in Chrome 71 and FF 64) than manually copying elements,\n        // since slicing allocates new memory.\n        // The performance of passing parameters individually\n        // vs as an array is about the same in both browsers, so we\n        // go with a single (array of elements) parameter, because\n        // `setElements(elements)` and `setElements([a, b, c, d, e, f])`\n        // calls give us roughly the same performance, versus\n        // `setElements(...elements)` and `setElements(a, b, c, d, e, f)`,\n        // where the spread operator causes a 20-30x performance drop\n        // (30x when compiled to ES5's `.apply(this, elements)`\n        //  20x when used natively).\n        e[0] = elements[0];\n        e[1] = elements[1];\n        e[2] = elements[2];\n        e[3] = elements[3];\n        e[4] = elements[4];\n        e[5] = elements[5];\n        return this;\n    };\n    Matrix.prototype.setIdentityElements = function () {\n        var e = this.elements;\n        e[0] = 1;\n        e[1] = 0;\n        e[2] = 0;\n        e[3] = 1;\n        e[4] = 0;\n        e[5] = 0;\n        return this;\n    };\n    Object.defineProperty(Matrix.prototype, \"identity\", {\n        get: function () {\n            var e = this.elements;\n            return e[0] === 1 && e[1] === 0 && e[2] === 0 &&\n                e[3] === 1 && e[4] === 0 && e[5] === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"a\", {\n        get: function () {\n            return this.elements[0];\n        },\n        set: function (value) {\n            this.elements[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"b\", {\n        get: function () {\n            return this.elements[1];\n        },\n        set: function (value) {\n            this.elements[1] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"c\", {\n        get: function () {\n            return this.elements[2];\n        },\n        set: function (value) {\n            this.elements[2] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"d\", {\n        get: function () {\n            return this.elements[3];\n        },\n        set: function (value) {\n            this.elements[3] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"e\", {\n        get: function () {\n            return this.elements[4];\n        },\n        set: function (value) {\n            this.elements[4] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"f\", {\n        get: function () {\n            return this.elements[5];\n        },\n        set: function (value) {\n            this.elements[5] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Performs the AxB matrix multiplication and saves the result\n     * to `C`, if given, or to `A` otherwise.\n     */\n    Matrix.prototype.AxB = function (A, B, C) {\n        var m11 = A[0], m12 = A[1], m21 = A[2], m22 = A[3], m31 = A[4], m32 = A[5];\n        var o11 = B[0], o12 = B[1], o21 = B[2], o22 = B[3], o31 = B[4], o32 = B[5];\n        C = C || A;\n        C[0] = m11 * o11 + m21 * o12;\n        C[1] = m12 * o11 + m22 * o12;\n        C[2] = m11 * o21 + m21 * o22;\n        C[3] = m12 * o21 + m22 * o22;\n        C[4] = m11 * o31 + m21 * o32 + m31;\n        C[5] = m12 * o31 + m22 * o32 + m32;\n    };\n    /**\n     * The `other` matrix gets post-multiplied to the current matrix.\n     * Returns the current matrix.\n     * @param other\n     */\n    Matrix.prototype.multiplySelf = function (other) {\n        this.AxB(this.elements, other.elements);\n        return this;\n    };\n    /**\n     * The `other` matrix gets post-multiplied to the current matrix.\n     * Returns a new matrix.\n     * @param other\n     */\n    Matrix.prototype.multiply = function (other) {\n        var elements = new Array(6);\n        this.AxB(this.elements, other.elements, elements);\n        return new Matrix(elements);\n    };\n    Matrix.prototype.preMultiplySelf = function (other) {\n        this.AxB(other.elements, this.elements, this.elements);\n        return this;\n    };\n    /**\n     * Returns the inverse of this matrix as a new matrix.\n     */\n    Matrix.prototype.inverse = function () {\n        var _a = this.elements, a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4], f = _a[5];\n        var rD = 1 / (a * d - b * c); // reciprocal of determinant\n        a *= rD;\n        b *= rD;\n        c *= rD;\n        d *= rD;\n        return new Matrix([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n    };\n    /**\n     * Save the inverse of this matrix to the given matrix.\n     */\n    Matrix.prototype.inverseTo = function (other) {\n        var _a = this.elements, a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4], f = _a[5];\n        var rD = 1 / (a * d - b * c); // reciprocal of determinant\n        a *= rD;\n        b *= rD;\n        c *= rD;\n        d *= rD;\n        other.setElements([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n        return this;\n    };\n    Matrix.prototype.invertSelf = function () {\n        var elements = this.elements;\n        var a = elements[0], b = elements[1], c = elements[2], d = elements[3], e = elements[4], f = elements[5];\n        var rD = 1 / (a * d - b * c); // reciprocal of determinant\n        a *= rD;\n        b *= rD;\n        c *= rD;\n        d *= rD;\n        elements[0] = d;\n        elements[1] = -b;\n        elements[2] = -c;\n        elements[3] = a;\n        elements[4] = c * f - d * e;\n        elements[5] = b * e - a * f;\n        return this;\n    };\n    Matrix.prototype.clone = function () {\n        return new Matrix(this.elements.slice());\n    };\n    Matrix.prototype.transformPoint = function (x, y) {\n        var e = this.elements;\n        return {\n            x: x * e[0] + y * e[2] + e[4],\n            y: x * e[1] + y * e[3] + e[5]\n        };\n    };\n    Matrix.prototype.transformBBox = function (bbox, radius, target) {\n        if (radius === void 0) { radius = 0; }\n        var elements = this.elements;\n        var xx = elements[0];\n        var xy = elements[1];\n        var yx = elements[2];\n        var yy = elements[3];\n        var h_w = bbox.width * 0.5;\n        var h_h = bbox.height * 0.5;\n        var cx = bbox.x + h_w;\n        var cy = bbox.y + h_h;\n        var w, h;\n        if (radius) {\n            h_w -= radius;\n            h_h -= radius;\n            var sx = Math.sqrt(xx * xx + yx * yx);\n            var sy = Math.sqrt(xy * xy + yy * yy);\n            w = Math.abs(h_w * xx) + Math.abs(h_h * yx) + Math.abs(sx * radius);\n            h = Math.abs(h_w * xy) + Math.abs(h_h * yy) + Math.abs(sy * radius);\n        }\n        else {\n            w = Math.abs(h_w * xx) + Math.abs(h_h * yx);\n            h = Math.abs(h_w * xy) + Math.abs(h_h * yy);\n        }\n        if (!target) {\n            target = new BBox(0, 0, 0, 0);\n        }\n        target.x = cx * xx + cy * yx + elements[4] - w;\n        target.y = cx * xy + cy * yy + elements[5] - h;\n        target.width = w + w;\n        target.height = h + h;\n        return target;\n    };\n    Matrix.prototype.toContext = function (ctx) {\n        // It's fair to say that matrix multiplications are not cheap.\n        // However, updating path definitions on every frame isn't either, so\n        // it may be cheaper to just translate paths. It's also fair to\n        // say, that most paths will have to be re-rendered anyway, say\n        // rectangle paths in a bar chart, where an animation would happen when\n        // the data set changes and existing bars are morphed into new ones.\n        // Or a pie chart, where old sectors are also morphed into new ones.\n        // Same for the line chart. The only plausible case where translating\n        // existing paths would be enough, is the scatter chart, where marker\n        // icons, typically circles, stay the same size. But if circle radii\n        // are bound to some data points, even circle paths would have to be\n        // updated. And thus it makes sense to optimize for fewer matrix\n        // transforms, where transform matrices of paths are mostly identity\n        // matrices and `x`/`y`, `centerX`/`centerY` and similar properties\n        // are used to define a path at specific coordinates. And only groups\n        // are used to collectively apply a transform to a set of nodes.\n        // If the matrix is mostly identity (95% of the time),\n        // the `if (this.isIdentity)` check can make this call 3-4 times\n        // faster on average: https://jsperf.com/matrix-check-first-vs-always-set\n        if (this.identity) {\n            return;\n        }\n        var e = this.elements;\n        ctx.transform(e[0], e[1], e[2], e[3], e[4], e[5]);\n    };\n    Matrix.flyweight = function (elements) {\n        if (elements) {\n            if (elements instanceof Matrix) {\n                Matrix.matrix.setElements(elements.elements);\n            }\n            else {\n                Matrix.matrix.setElements(elements);\n            }\n        }\n        else {\n            Matrix.matrix.setIdentityElements();\n        }\n        return Matrix.matrix;\n    };\n    Matrix.matrix = new Matrix();\n    return Matrix;\n}());\nexport { Matrix };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}